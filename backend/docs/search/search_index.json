{"config":{"lang":["pt"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"index.html","title":"Home","text":""},{"location":"index.html#sistema-de-gestao-de-inventario","title":"Sistema de Gest\u00e3o de Invent\u00e1rio","text":"<p>Bem-vindo \u00e0 documenta\u00e7\u00e3o do Sistema de Gest\u00e3o de Invent\u00e1rio. Esta documenta\u00e7\u00e3o est\u00e1 dividida em tr\u00eas se\u00e7\u00f5es principais:</p>"},{"location":"index.html#manual-do-usuario","title":"Manual do Usu\u00e1rio","text":"<p>Guias detalhados para utiliza\u00e7\u00e3o do sistema, incluindo: - Login e Altera\u00e7\u00e3o de Senha - P\u00e1gina Inicial - Gest\u00e3o de Invent\u00e1rio - Fluxo de Invent\u00e1rio - Gest\u00e3o de Incidentes</p>"},{"location":"index.html#documentacao-backend","title":"Documenta\u00e7\u00e3o Backend","text":"<p>Documenta\u00e7\u00e3o t\u00e9cnica do backend, organizada por m\u00f3dulos: - Access (Autentica\u00e7\u00e3o e Usu\u00e1rios) - App (Configura\u00e7\u00f5es) - Docs (Documenta\u00e7\u00e3o) - Incidentes (Gest\u00e3o de Incidentes) - Invent\u00e1rio (Gest\u00e3o de Invent\u00e1rio)</p>"},{"location":"index.html#documentacao-frontend","title":"Documenta\u00e7\u00e3o Frontend","text":"<p>Documenta\u00e7\u00e3o t\u00e9cnica do frontend, incluindo: - P\u00e1ginas - Componentes - Estilos CSS</p>"},{"location":"backend/index.html","title":"Backend do Sistema","text":""},{"location":"backend/index.html#visao-geral","title":"Vis\u00e3o Geral","text":"<p>O backend do sistema foi desenvolvido utilizando Python com Django, uma combina\u00e7\u00e3o poderosa para desenvolvimento web. Se voc\u00ea vem do mundo C#, pode considerar o Django como algo similar ao ASP.NET Core.</p>"},{"location":"backend/index.html#por-onde-comecar","title":"Por Onde Come\u00e7ar","text":"<ol> <li>Novo no Python e Django?</li> <li>Comece pela se\u00e7\u00e3o \"Prepara\u00e7\u00e3o do Ambiente\"</li> <li>Siga o passo a passo de instala\u00e7\u00e3o do Python</li> <li> <p>Configure seu ambiente de desenvolvimento</p> </li> <li> <p>Familiarizado com C#/ASP.NET?</p> </li> <li>Veja nossos paralelos entre Django e ASP.NET</li> <li>Entenda as diferen\u00e7as principais</li> <li> <p>Aproveite seu conhecimento existente</p> </li> <li> <p>Quer Entender a Estrutura?</p> </li> <li>Explore a se\u00e7\u00e3o \"Conceitos\"</li> <li>Veja como o projeto est\u00e1 organizado</li> <li>Entenda o fluxo de dados</li> </ol>"},{"location":"backend/index.html#estrutura-da-documentacao","title":"Estrutura da Documenta\u00e7\u00e3o","text":"<ol> <li>Prepara\u00e7\u00e3o do Ambiente</li> <li>Como instalar o Python</li> <li>Como configurar o projeto</li> <li> <p>Configura\u00e7\u00e3o do VS Code</p> </li> <li> <p>Tecnologias</p> </li> <li>Django Framework</li> <li>Django REST Framework</li> <li> <p>Outros pacotes importantes</p> </li> <li> <p>Conceitos Fundamentais</p> </li> <li>Models e Banco de Dados</li> <li>Sistema de Migrations</li> <li> <p>Estrutura do Projeto</p> </li> <li> <p>M\u00f3dulos do Sistema</p> </li> <li>Access (Autentica\u00e7\u00e3o)</li> <li>App (Configura\u00e7\u00f5es)</li> <li>Invent\u00e1rio</li> <li>Incidentes</li> </ol>"},{"location":"backend/index.html#tecnologias-utilizadas","title":"Tecnologias Utilizadas","text":""},{"location":"backend/index.html#django-framework","title":"Django Framework","text":"<p>Django \u00e9 um framework web Python de alto n\u00edvel que incentiva o desenvolvimento r\u00e1pido e limpo. Constru\u00eddo por desenvolvedores experientes, ele cuida de grande parte do trabalho de desenvolvimento web, permitindo que voc\u00ea se concentre em escrever seu aplicativo sem precisar reinventar a roda.</p>"},{"location":"backend/index.html#principais-caracteristicas","title":"Principais Caracter\u00edsticas","text":"<ul> <li>ORM poderoso para abstra\u00e7\u00e3o do banco de dados</li> <li>Interface administrativa autom\u00e1tica</li> <li>Sistema de templates sofisticado</li> <li>Framework de formul\u00e1rios</li> <li>Sistema de autentica\u00e7\u00e3o</li> <li>Sistema de cache</li> <li>Internacionaliza\u00e7\u00e3o</li> </ul>"},{"location":"backend/index.html#django-rest-framework","title":"Django REST Framework","text":"<p>DRF \u00e9 um kit de ferramentas poderoso e flex\u00edvel para construir APIs Web em Django.</p>"},{"location":"backend/index.html#recursos-principais","title":"Recursos Principais","text":"<ul> <li>Interface web naveg\u00e1vel da API</li> <li>Pol\u00edticas de autentica\u00e7\u00e3o incluindo OAuth1a e OAuth2</li> <li>Serializa\u00e7\u00e3o que suporta ORM e fontes de dados n\u00e3o-ORM</li> <li>Documenta\u00e7\u00e3o autom\u00e1tica da API</li> </ul>"},{"location":"backend/index.html#instalacao-do-ambiente","title":"Instala\u00e7\u00e3o do Ambiente","text":""},{"location":"backend/index.html#1-instalando-o-python","title":"1. Instalando o Python","text":""},{"location":"backend/index.html#windows","title":"Windows","text":"<ol> <li>Acesse python.org</li> <li>Baixe a vers\u00e3o mais recente do Python (3.8 ou superior)</li> <li>Execute o instalador</li> <li>IMPORTANTE: Marque a op\u00e7\u00e3o \"Add Python to PATH\"</li> <li>Clique em \"Install Now\"</li> </ol>"},{"location":"backend/index.html#linux-ubuntudebian","title":"Linux (Ubuntu/Debian)","text":"<pre><code>sudo apt update\nsudo apt install python3 python3-pip python3-venv\n</code></pre>"},{"location":"backend/index.html#macos","title":"macOS","text":"<ol> <li>Instale o Homebrew:</li> </ol> <pre><code>/bin/bash -c \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)\"\n</code></pre> <ol> <li>Instale o Python:</li> </ol> <pre><code>brew install python\n</code></pre>"},{"location":"backend/index.html#2-verificando-a-instalacao","title":"2. Verificando a Instala\u00e7\u00e3o","text":"<pre><code>python --version\npip --version\n</code></pre>"},{"location":"backend/index.html#conceitos-fundamentais-do-django","title":"Conceitos Fundamentais do Django","text":""},{"location":"backend/index.html#models-vs-tabelas-do-banco","title":"Models vs Tabelas do Banco","text":""},{"location":"backend/index.html#models-python","title":"Models (Python)","text":"<pre><code>class Cliente(models.Model):\n    nome = models.CharField(max_length=100)\n    email = models.EmailField(unique=True)\n</code></pre>"},{"location":"backend/index.html#tabela-gerada-sql","title":"Tabela Gerada (SQL)","text":"<pre><code>CREATE TABLE cliente (\n    id INT PRIMARY KEY AUTO_INCREMENT,\n    nome VARCHAR(100) NOT NULL,\n    email VARCHAR(254) UNIQUE NOT NULL\n);\n</code></pre>"},{"location":"backend/index.html#sistema-mtv-model-template-view","title":"Sistema MTV (Model-Template-View)","text":"<ul> <li>Model: Camada de dados</li> <li>Template: Camada de apresenta\u00e7\u00e3o</li> <li>View: Camada de l\u00f3gica de neg\u00f3cios</li> </ul> <p>Similar ao MVC no C#, mas com nomenclatura diferente: - Model (Django) = Model (C#) - Template (Django) = View (C#) - View (Django) = Controller (C#)</p>"},{"location":"backend/index.html#links-de-documentacao","title":"Links de Documenta\u00e7\u00e3o","text":""},{"location":"backend/index.html#core","title":"Core","text":"<ul> <li>Django</li> <li>Django REST Framework</li> <li>Python</li> </ul>"},{"location":"backend/index.html#pacotes-utilizados","title":"Pacotes Utilizados","text":"<ul> <li>django-cors-headers</li> <li>django-filter</li> <li>django-rest-knox</li> <li>djangorestframework-simplejwt</li> <li>drf-yasg</li> <li>polars</li> <li>python-dotenv</li> </ul>"},{"location":"backend/index.html#configuracao-do-ambiente","title":"Configura\u00e7\u00e3o do Ambiente","text":""},{"location":"backend/index.html#pre-requisitos","title":"Pr\u00e9-requisitos","text":"<ul> <li>Python 3.8 ou superior (similar ao .NET SDK no C#)</li> <li>pip (gerenciador de pacotes do Python, similar ao NuGet)</li> <li>Git</li> </ul>"},{"location":"backend/index.html#passo-a-passo-de-instalacao","title":"Passo a Passo de Instala\u00e7\u00e3o","text":"<ol> <li>Clone o Reposit\u00f3rio</li> </ol> <pre><code>git clone https://github.com/seu-usuario/gestao-inventario.git\ncd gestao-inventario\n</code></pre> <ol> <li>Criar Ambiente Virtual (similar ao conceito de Solution no Visual Studio)</li> </ol> <pre><code># Windows\npython -m venv venv\nvenv\\Scripts\\activate\n\n# Linux/Mac\npython3 -m venv venv\nsource venv/bin/activate\n</code></pre> <p>Paralelo com C#: O ambiente virtual no Python \u00e9 similar a ter diferentes Solutions no Visual Studio, isolando depend\u00eancias de projetos.</p> <ol> <li>Instalar Depend\u00eancias</li> </ol> <pre><code>pip install -r requirements.txt\n</code></pre> <p>Paralelo com C#: Similar ao <code>dotnet restore</code> ou restaurar pacotes NuGet no Visual Studio.</p> <ol> <li>Configurar Banco de Dados</li> </ol> <pre><code>python manage.py migrate\n</code></pre> <p>Paralelo com C#: Similar ao <code>Update-Database</code> no Entity Framework.</p> <ol> <li>Criar Superusu\u00e1rio</li> </ol> <pre><code>python manage.py createsuperuser\n</code></pre> <ol> <li>Rodar o Projeto</li> </ol> <pre><code>python manage.py runserver\n</code></pre> <p>Paralelo com C#: Similar ao <code>dotnet run</code> ou F5 no Visual Studio.</p>"},{"location":"backend/index.html#sistema-de-migrations","title":"Sistema de Migrations","text":"<p>O Django usa migrations para controlar as altera\u00e7\u00f5es no banco de dados, similar ao Entity Framework no C#.</p>"},{"location":"backend/index.html#comandos-basicos","title":"Comandos B\u00e1sicos","text":""},{"location":"backend/index.html#django-python","title":"Django (Python)","text":"<pre><code># Criar migrations\npython manage.py makemigrations\n\n# Aplicar migrations\npython manage.py migrate\n\n# Ver SQL gerado\npython manage.py sqlmigrate app_name 0001\n\n# Listar migrations\npython manage.py showmigrations\n</code></pre>"},{"location":"backend/index.html#c-entity-framework","title":"C# (Entity Framework)","text":"<pre><code># Criar migration\nAdd-Migration InitialCreate\n\n# Aplicar migration\nUpdate-Database\n\n# Ver SQL gerado\nScript-Migration\n</code></pre>"},{"location":"backend/index.html#sql-puro","title":"SQL Puro","text":"<pre><code>-- Criar tabela de controle manual\nCREATE TABLE __MigrationHistory (\n    MigrationId nvarchar(150) PRIMARY KEY,\n    AppliedOn datetime NOT NULL\n);\n\n-- Executar migrations manualmente\nINSERT INTO __MigrationHistory (MigrationId, AppliedOn)\nVALUES ('20240117_InitialCreate', GETDATE());\n</code></pre>"},{"location":"backend/index.html#como-as-migrations-funcionam","title":"Como as Migrations Funcionam","text":"<ol> <li>Detec\u00e7\u00e3o de Mudan\u00e7as</li> <li>Django: Compara models com estado do banco</li> <li>C#/EF: Compara models com snapshot</li> <li> <p>SQL: Manual</p> </li> <li> <p>Gera\u00e7\u00e3o de Migrations</p> </li> <li>Django: Arquivos Python na pasta migrations/</li> <li>C#/EF: Arquivos C# na pasta Migrations/</li> <li> <p>SQL: Scripts SQL numerados</p> </li> <li> <p>Aplica\u00e7\u00e3o</p> </li> <li>Django: Executa migrations em ordem</li> <li>C#/EF: Executa migrations em ordem</li> <li>SQL: Execu\u00e7\u00e3o manual dos scripts</li> </ol>"},{"location":"backend/index.html#exemplos-praticos","title":"Exemplos Pr\u00e1ticos","text":""},{"location":"backend/index.html#django-python_1","title":"Django (Python)","text":"<pre><code># 0001_initial.py\nclass Migration(migrations.Migration):\n    operations = [\n        migrations.CreateModel(\n            name='Incidente',\n            fields=[\n                ('id', models.AutoField(primary_key=True)),\n                ('descricao', models.TextField()),\n            ],\n        ),\n    ]\n</code></pre>"},{"location":"backend/index.html#c-entity-framework_1","title":"C# (Entity Framework)","text":"<pre><code>public partial class InitialCreate : Migration\n{\n    protected override void Up(MigrationBuilder migrationBuilder)\n    {\n        migrationBuilder.CreateTable(\n            name: \"Incidentes\",\n            columns: table =&gt; new {\n                Id = table.Column&lt;int&gt;(nullable: false),\n                Descricao = table.Column&lt;string&gt;()\n            });\n    }\n}\n</code></pre>"},{"location":"backend/index.html#sql-puro_1","title":"SQL Puro","text":"<pre><code>-- V1__Create_Incidente.sql\nCREATE TABLE Incidentes (\n    Id INT IDENTITY(1,1) PRIMARY KEY,\n    Descricao NVARCHAR(MAX)\n);\n</code></pre>"},{"location":"backend/index.html#modulos-instalados","title":"M\u00f3dulos Instalados","text":""},{"location":"backend/index.html#frameworks-base","title":"Frameworks Base","text":"<ol> <li>Django (4.2.10)</li> <li>Framework web principal</li> <li>Similar ao ASP.NET Core no C#</li> <li> <p>Respons\u00e1vel por:</p> <ul> <li>Roteamento</li> <li>ORM</li> <li>Admin interface</li> <li>Sistema de templates</li> </ul> </li> <li> <p>Django Rest Framework (3.14.0)</p> </li> <li>Framework para APIs REST</li> <li>Similar ao ASP.NET Core Web API</li> <li>Features:<ul> <li>Serializa\u00e7\u00e3o</li> <li>Autentica\u00e7\u00e3o via token</li> <li>ViewSets e Routers</li> <li>Documenta\u00e7\u00e3o autom\u00e1tica</li> </ul> </li> </ol>"},{"location":"backend/index.html#seguranca-e-autenticacao","title":"Seguran\u00e7a e Autentica\u00e7\u00e3o","text":"<ol> <li>Django CORS Headers</li> <li>Gerencia CORS (Cross-Origin Resource Sharing)</li> <li> <p>Similar ao <code>services.AddCors()</code> no ASP.NET Core</p> </li> <li> <p>Django Rest Knox</p> </li> <li>Autentica\u00e7\u00e3o via tokens</li> <li>Similar ao JWT Bearer no ASP.NET Core</li> </ol>"},{"location":"backend/index.html#banco-de-dados-e-orm","title":"Banco de Dados e ORM","text":"<ol> <li>psycopg2-binary</li> <li>Driver PostgreSQL</li> <li>Similar ao SQL Server Provider no Entity Framework</li> </ol>"},{"location":"backend/index.html#processamento-de-dados","title":"Processamento de Dados","text":"<ol> <li>polars</li> <li>Biblioteca para an\u00e1lise de dados</li> <li>Similar ao LINQ no C#</li> </ol>"},{"location":"backend/index.html#documentacao","title":"Documenta\u00e7\u00e3o","text":"<ol> <li>MkDocs</li> <li>Gera\u00e7\u00e3o de documenta\u00e7\u00e3o</li> <li>Similar ao DocFX no .NET</li> </ol>"},{"location":"backend/index.html#estrutura-do-projeto","title":"Estrutura do Projeto","text":"<pre><code>backend/\n\u251c\u2500\u2500 app/                    # Configura\u00e7\u00f5es principais (similar ao Startup.cs)\n\u2502   \u251c\u2500\u2500 settings.py        # Configura\u00e7\u00f5es do Django (similar ao appsettings.json)\n\u2502   \u2514\u2500\u2500 urls.py            # Rotas principais (similar ao Program.cs)\n\u251c\u2500\u2500 access/                # M\u00f3dulo de autentica\u00e7\u00e3o\n\u251c\u2500\u2500 inventario/           # M\u00f3dulo de invent\u00e1rio\n\u251c\u2500\u2500 incidentes/          # M\u00f3dulo de incidentes\n\u2514\u2500\u2500 manage.py            # CLI do Django (similar ao dotnet CLI)\n</code></pre>"},{"location":"backend/index.html#comandos-uteis","title":"Comandos \u00dateis","text":""},{"location":"backend/index.html#django","title":"Django","text":"<pre><code># Criar migra\u00e7\u00f5es (similar ao Add-Migration no EF)\npython manage.py makemigrations\n\n# Aplicar migra\u00e7\u00f5es (similar ao Update-Database no EF)\npython manage.py migrate\n\n# Criar superusu\u00e1rio\npython manage.py createsuperuser\n\n# Rodar servidor de desenvolvimento\npython manage.py runserver\n</code></pre>"},{"location":"backend/index.html#pip","title":"Pip","text":"<pre><code># Instalar pacote (similar ao Install-Package no NuGet)\npip install nome_pacote\n\n# Atualizar requirements.txt (similar ao dotnet add package)\npip freeze &gt; requirements.txt\n</code></pre>"},{"location":"backend/index.html#debug-e-desenvolvimento","title":"Debug e Desenvolvimento","text":""},{"location":"backend/index.html#vs-code","title":"VS Code","text":"<ol> <li>Instalar extens\u00f5es:</li> <li>Python</li> <li>Django</li> <li> <p>Pylance</p> </li> <li> <p>Configurar launch.json:</p> </li> </ol> <pre><code>{\n    \"version\": \"0.2.0\",\n    \"configurations\": [\n        {\n            \"name\": \"Django\",\n            \"type\": \"python\",\n            \"request\": \"launch\",\n            \"program\": \"${workspaceFolder}/manage.py\",\n            \"args\": [\"runserver\"],\n            \"django\": true\n        }\n    ]\n}\n</code></pre> <p>Paralelo com C#: Similar \u00e0 configura\u00e7\u00e3o de debug no Visual Studio.</p>"},{"location":"backend/index.html#boas-praticas","title":"Boas Pr\u00e1ticas","text":""},{"location":"backend/index.html#organizacao-de-codigo","title":"Organiza\u00e7\u00e3o de C\u00f3digo","text":"<ul> <li>Views em arquivos separados (similar aos Controllers em C#)</li> <li>Models em m\u00f3dulo pr\u00f3prio (similar \u00e0s Classes de Modelo em C#)</li> <li>URLs em arquivo dedicado (similar \u00e0s rotas em C#)</li> </ul>"},{"location":"backend/index.html#padroes-de-projeto","title":"Padr\u00f5es de Projeto","text":"<ul> <li>ViewSets (similar aos Controllers)</li> <li>Serializers (similar aos DTOs)</li> <li>Managers (similar aos Services)</li> </ul>"},{"location":"backend/ambiente/index.html","title":"Prepara\u00e7\u00e3o do Ambiente","text":""},{"location":"backend/ambiente/index.html#visao-geral","title":"Vis\u00e3o Geral","text":"<p>Esta se\u00e7\u00e3o explica como preparar seu ambiente de desenvolvimento para trabalhar com Python e Django. Se voc\u00ea vem do mundo C#, ver\u00e1 que \u00e9 similar a configurar o Visual Studio e .NET SDK.</p>"},{"location":"backend/ambiente/index.html#o-que-voce-vai-aprender","title":"O que Voc\u00ea Vai Aprender","text":""},{"location":"backend/ambiente/index.html#1-instalacao-do-python","title":"1. Instala\u00e7\u00e3o do Python","text":"<ul> <li>Como instalar o Python em diferentes sistemas operacionais</li> <li>Configura\u00e7\u00e3o do PATH</li> <li>Verifica\u00e7\u00e3o da instala\u00e7\u00e3o</li> </ul>"},{"location":"backend/ambiente/index.html#2-configuracao-do-projeto","title":"2. Configura\u00e7\u00e3o do Projeto","text":"<ul> <li>Cria\u00e7\u00e3o de ambiente virtual (similar a Solutions no Visual Studio)</li> <li>Instala\u00e7\u00e3o de depend\u00eancias (similar ao NuGet)</li> <li>Configura\u00e7\u00e3o do banco de dados</li> </ul>"},{"location":"backend/ambiente/index.html#3-vs-code-e-extensoes","title":"3. VS Code e Extens\u00f5es","text":"<ul> <li>Configura\u00e7\u00e3o do editor</li> <li>Extens\u00f5es essenciais</li> <li>Debug e desenvolvimento</li> </ul>"},{"location":"backend/ambiente/index.html#pre-requisitos","title":"Pr\u00e9-requisitos","text":"<ul> <li>Conhecimentos b\u00e1sicos de linha de comando</li> <li>Permiss\u00f5es de administrador no sistema</li> <li>Espa\u00e7o em disco (~1GB)</li> </ul>"},{"location":"backend/ambiente/configuracao-projeto.html","title":"Configura\u00e7\u00e3o do Projeto","text":""},{"location":"backend/ambiente/configuracao-projeto.html#ambiente-virtual","title":"Ambiente Virtual","text":""},{"location":"backend/ambiente/configuracao-projeto.html#por-que-usar","title":"Por que usar?","text":"<p>O ambiente virtual no Python \u00e9 similar ao conceito de Solution no Visual Studio, isolando as depend\u00eancias de cada projeto. Isso evita conflitos entre vers\u00f5es de pacotes de diferentes projetos.</p>"},{"location":"backend/ambiente/configuracao-projeto.html#criando-o-ambiente-virtual","title":"Criando o Ambiente Virtual","text":"<pre><code># Windows\npython -m venv venv\n\n# Linux/macOS\npython3 -m venv venv\n</code></pre>"},{"location":"backend/ambiente/configuracao-projeto.html#ativando-o-ambiente","title":"Ativando o Ambiente","text":"<pre><code># Windows (CMD)\nvenv\\Scripts\\activate\n\n# Windows (PowerShell)\n.\\venv\\Scripts\\Activate.ps1\n\n# Linux/macOS\nsource venv/bin/activate\n</code></pre>"},{"location":"backend/ambiente/configuracao-projeto.html#instalando-dependencias","title":"Instalando Depend\u00eancias","text":""},{"location":"backend/ambiente/configuracao-projeto.html#requirementstxt","title":"Requirements.txt","text":"<p>Este arquivo \u00e9 similar ao packages.config ou .csproj no C#, listando todas as depend\u00eancias do projeto.</p> <pre><code># Instalar todas as depend\u00eancias\npip install -r requirements.txt\n\n# Atualizar requirements.txt com novas depend\u00eancias\npip freeze &gt; requirements.txt\n</code></pre>"},{"location":"backend/ambiente/configuracao-projeto.html#configuracao-do-banco-de-dados","title":"Configura\u00e7\u00e3o do Banco de Dados","text":""},{"location":"backend/ambiente/configuracao-projeto.html#arquivo-settingspy","title":"Arquivo settings.py","text":"<p>Similar ao appsettings.json no ASP.NET Core, define as configura\u00e7\u00f5es do banco de dados:</p> <pre><code>DATABASES = {\n    \"default\": {\n        \"ENGINE\": \"django.db.backends.sqlite3\",  # Para desenvolvimento\n        \"NAME\": BASE_DIR / \"db.sqlite3\",\n    },\n    \"sql_server\": {\n        \"ENGINE\": \"mssql\",\n        \"NAME\": \"nome_do_banco\",\n        \"USER\": \"usuario\",\n        \"PASSWORD\": \"senha\",\n        \"HOST\": \"servidor\",\n    },\n}\n</code></pre>"},{"location":"backend/ambiente/configuracao-projeto.html#aplicando-migrations","title":"Aplicando Migrations","text":"<pre><code># Criar migrations (similar ao Add-Migration)\npython manage.py makemigrations\n\n# Aplicar migrations (similar ao Update-Database)\npython manage.py migrate\n</code></pre>"},{"location":"backend/ambiente/configuracao-projeto.html#configuracao-do-django-admin","title":"Configura\u00e7\u00e3o do Django Admin","text":""},{"location":"backend/ambiente/configuracao-projeto.html#criando-superusuario","title":"Criando Superusu\u00e1rio","text":"<pre><code>python manage.py createsuperuser\n</code></pre>"},{"location":"backend/ambiente/configuracao-projeto.html#acessando-o-admin","title":"Acessando o Admin","text":"<ul> <li>URL: http://localhost:8000/admin/</li> <li>Use as credenciais do superusu\u00e1rio criado</li> </ul>"},{"location":"backend/ambiente/configuracao-projeto.html#executando-o-projeto","title":"Executando o Projeto","text":""},{"location":"backend/ambiente/configuracao-projeto.html#servidor-de-desenvolvimento","title":"Servidor de Desenvolvimento","text":"<pre><code># Similar ao IIS Express no Visual Studio\npython manage.py runserver\n\n# Especificar porta\npython manage.py runserver 8080\n</code></pre>"},{"location":"backend/ambiente/configuracao-projeto.html#estrutura-de-arquivos","title":"Estrutura de Arquivos","text":"<pre><code>projeto/\n\u251c\u2500\u2500 venv/                  # Ambiente virtual (similar a bin/obj no C#)\n\u251c\u2500\u2500 manage.py             # CLI do Django (similar ao Program.cs)\n\u251c\u2500\u2500 requirements.txt      # Depend\u00eancias (similar ao packages.config)\n\u2514\u2500\u2500 app/                  # C\u00f3digo fonte\n    \u251c\u2500\u2500 settings.py      # Configura\u00e7\u00f5es (similar ao appsettings.json)\n    \u2514\u2500\u2500 urls.py          # Rotas (similar ao Startup.cs)\n</code></pre>"},{"location":"backend/ambiente/instalacao-python.html","title":"Instala\u00e7\u00e3o do Python","text":""},{"location":"backend/ambiente/instalacao-python.html#o-que-e-python","title":"O que \u00e9 Python?","text":"<p>Python \u00e9 uma linguagem de programa\u00e7\u00e3o de alto n\u00edvel, interpretada e de prop\u00f3sito geral. Se voc\u00ea est\u00e1 familiarizado com C#, Python seria algo como uma linguagem mais simples e din\u00e2mica, sem tipagem est\u00e1tica.</p>"},{"location":"backend/ambiente/instalacao-python.html#instalacao-por-sistema-operacional","title":"Instala\u00e7\u00e3o por Sistema Operacional","text":""},{"location":"backend/ambiente/instalacao-python.html#windows","title":"Windows","text":"<ol> <li>Baixar o Instalador</li> <li>Acesse python.org/downloads</li> <li> <p>Clique em \"Download Python\" (pegue a vers\u00e3o 3.8 ou superior)</p> </li> <li> <p>Executar o Instalador</p> </li> <li>Marque a op\u00e7\u00e3o \"Add Python to PATH\" \u26a0\ufe0f MUITO IMPORTANTE!</li> <li>Clique em \"Install Now\"</li> <li> <p>Aguarde a instala\u00e7\u00e3o finalizar</p> </li> <li> <p>Verificar a Instala\u00e7\u00e3o</p> </li> <li>Abra o Prompt de Comando (cmd)</li> <li>Digite:      <code>bash      python --version      pip --version</code></li> <li>Voc\u00ea deve ver as vers\u00f5es instaladas</li> </ol>"},{"location":"backend/ambiente/instalacao-python.html#linux-ubuntudebian","title":"Linux (Ubuntu/Debian)","text":"<ol> <li> <p>Atualizar os Reposit\u00f3rios <code>bash    sudo apt update</code></p> </li> <li> <p>Instalar o Python <code>bash    sudo apt install python3 python3-pip python3-venv</code></p> </li> <li> <p>Verificar a Instala\u00e7\u00e3o <code>bash    python3 --version    pip3 --version</code></p> </li> </ol>"},{"location":"backend/ambiente/instalacao-python.html#macos","title":"macOS","text":"<ol> <li> <p>Instalar o Homebrew (se n\u00e3o tiver)    <code>bash    /bin/bash -c \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)\"</code></p> </li> <li> <p>Instalar o Python <code>bash    brew install python</code></p> </li> <li> <p>Verificar a Instala\u00e7\u00e3o <code>bash    python3 --version    pip3 --version</code></p> </li> </ol>"},{"location":"backend/ambiente/instalacao-python.html#resolucao-de-problemas","title":"Resolu\u00e7\u00e3o de Problemas","text":""},{"location":"backend/ambiente/instalacao-python.html#windows_1","title":"Windows","text":"<ol> <li>Python n\u00e3o encontrado</li> <li>Verifique se marcou \"Add Python to PATH\"</li> <li>Reinicie o computador</li> <li> <p>Reinstale o Python</p> </li> <li> <p>M\u00faltiplas vers\u00f5es</p> </li> <li>Use o Python Launcher: <code>py -3.8</code></li> <li>Especifique a vers\u00e3o: <code>python3.8</code></li> </ol>"},{"location":"backend/ambiente/instalacao-python.html#linuxmacos","title":"Linux/macOS","text":"<ol> <li>Comando n\u00e3o encontrado</li> <li>Use <code>python3</code> em vez de <code>python</code></li> <li> <p>Use <code>pip3</code> em vez de <code>pip</code></p> </li> <li> <p>Permiss\u00f5es</p> </li> <li>Adicione <code>sudo</code> antes dos comandos</li> <li>Verifique as permiss\u00f5es da pasta</li> </ol>"},{"location":"backend/ambiente/instalacao-python.html#proximos-passos","title":"Pr\u00f3ximos Passos","text":"<p>Ap\u00f3s instalar o Python com sucesso, continue para a Configura\u00e7\u00e3o do Projeto.</p>"},{"location":"backend/ambiente/vscode.html","title":"Configura\u00e7\u00e3o do VS Code","text":""},{"location":"backend/ambiente/vscode.html#extensoes-necessarias","title":"Extens\u00f5es Necess\u00e1rias","text":""},{"location":"backend/ambiente/vscode.html#python","title":"Python","text":"<ol> <li>Python (Microsoft)</li> <li>IntelliSense</li> <li>Debugging</li> <li>Linting</li> <li>Jupyter Notebooks</li> <li> <p>Instala\u00e7\u00e3o: <code>ext install ms-python.python</code></p> </li> <li> <p>Pylance</p> </li> <li>Language server</li> <li>Type checking</li> <li>Import organization</li> <li> <p>Instala\u00e7\u00e3o: <code>ext install ms-python.vscode-pylance</code></p> </li> <li> <p>Django</p> </li> <li>Syntax highlighting</li> <li>Snippets</li> <li>Template support</li> <li>Instala\u00e7\u00e3o: <code>ext install batisteo.vscode-django</code></li> </ol>"},{"location":"backend/ambiente/vscode.html#configuracoes-recomendadas","title":"Configura\u00e7\u00f5es Recomendadas","text":""},{"location":"backend/ambiente/vscode.html#settingsjson","title":"settings.json","text":"<pre><code>{\n    \"python.defaultInterpreterPath\": \"./venv/bin/python\",\n    \"python.linting.enabled\": true,\n    \"python.linting.pylintEnabled\": true,\n    \"python.formatting.provider\": \"black\",\n    \"editor.formatOnSave\": true,\n    \"files.exclude\": {\n        \"**/__pycache__\": true,\n        \"**/*.pyc\": true\n    }\n}\n</code></pre>"},{"location":"backend/ambiente/vscode.html#configuracao-do-debugger","title":"Configura\u00e7\u00e3o do Debugger","text":""},{"location":"backend/ambiente/vscode.html#launchjson","title":"launch.json","text":"<pre><code>{\n    \"version\": \"0.2.0\",\n    \"configurations\": [\n        {\n            \"name\": \"Django\",\n            \"type\": \"python\",\n            \"request\": \"launch\",\n            \"program\": \"${workspaceFolder}/manage.py\",\n            \"args\": [\"runserver\"],\n            \"django\": true,\n            \"justMyCode\": true\n        },\n        {\n            \"name\": \"Django Shell\",\n            \"type\": \"python\",\n            \"request\": \"launch\",\n            \"program\": \"${workspaceFolder}/manage.py\",\n            \"args\": [\"shell\"],\n            \"django\": true\n        }\n    ]\n}\n</code></pre>"},{"location":"backend/ambiente/vscode.html#atalhos-uteis","title":"Atalhos \u00dateis","text":""},{"location":"backend/ambiente/vscode.html#geral","title":"Geral","text":"<ul> <li><code>Ctrl+Shift+P</code>: Command Palette</li> <li><code>Ctrl+P</code>: Quick Open</li> <li><code>F5</code>: Start Debugging</li> <li><code>Ctrl+F5</code>: Run Without Debugging</li> </ul>"},{"location":"backend/ambiente/vscode.html#python-especifico","title":"Python Espec\u00edfico","text":"<ul> <li><code>Ctrl+Space</code>: IntelliSense</li> <li><code>Shift+Alt+F</code>: Format Document</li> <li><code>F12</code>: Go to Definition</li> <li><code>Alt+F12</code>: Peek Definition</li> </ul>"},{"location":"backend/ambiente/vscode.html#dicas-de-produtividade","title":"Dicas de Produtividade","text":""},{"location":"backend/ambiente/vscode.html#1-python-environment-manager","title":"1. Python Environment Manager","text":"<ul> <li>Selecione o interpretador Python correto</li> <li>Use o bot\u00e3o na barra de status</li> <li>Certifique-se de que est\u00e1 usando o venv</li> </ul>"},{"location":"backend/ambiente/vscode.html#2-integracao-com-git","title":"2. Integra\u00e7\u00e3o com Git","text":"<ul> <li>Source Control view (<code>Ctrl+Shift+G</code>)</li> <li>Git Lens para hist\u00f3rico</li> <li>Git Graph para visualiza\u00e7\u00e3o</li> </ul>"},{"location":"backend/ambiente/vscode.html#3-terminal-integrado","title":"3. Terminal Integrado","text":"<ul> <li>Use <code>Ctrl+</code> para abrir/fechar</li> <li>M\u00faltiplos terminais simult\u00e2neos</li> <li>PowerShell/Bash conforme necess\u00e1rio</li> </ul>"},{"location":"backend/ambiente/vscode.html#4-snippets","title":"4. Snippets","text":"<ul> <li><code>def</code>: Criar fun\u00e7\u00e3o</li> <li><code>class</code>: Criar classe</li> <li><code>try</code>: Bloco try/except</li> </ul>"},{"location":"backend/conceitos/index.html","title":"Vis\u00e3o Geral","text":"<p>com# Conceitos Fundamentais</p>"},{"location":"backend/conceitos/index.html#visao-geral","title":"Vis\u00e3o Geral","text":"<p>Esta se\u00e7\u00e3o explica os conceitos fundamentais do desenvolvimento Django/Python, fazendo paralelos com C#/ASP.NET Core para facilitar o entendimento de desenvolvedores vindos desse background.</p>"},{"location":"backend/conceitos/index.html#principais-conceitos","title":"Principais Conceitos","text":""},{"location":"backend/conceitos/index.html#models-e-banco-de-dados","title":"Models e Banco de Dados","text":"<ul> <li>ORM do Django vs Entity Framework</li> <li>Mapeamento objeto-relacional</li> <li>Queries e consultas</li> <li>Relacionamentos entre tabelas</li> </ul>"},{"location":"backend/conceitos/index.html#sistema-de-migrations","title":"Sistema de Migrations","text":"<ul> <li>Versionamento de banco de dados</li> <li>Gera\u00e7\u00e3o autom\u00e1tica de migrations</li> <li>Aplica\u00e7\u00e3o e revers\u00e3o de mudan\u00e7as</li> <li>Compara\u00e7\u00e3o com EF Migrations</li> </ul>"},{"location":"backend/conceitos/index.html#estrutura-do-projeto","title":"Estrutura do Projeto","text":"<ul> <li>Organiza\u00e7\u00e3o de diret\u00f3rios</li> <li>M\u00f3dulos e apps Django</li> <li>Separa\u00e7\u00e3o de responsabilidades</li> <li>Equival\u00eancias com ASP.NET Core</li> </ul>"},{"location":"backend/conceitos/index.html#como-os-conceitos-se-relacionam","title":"Como os Conceitos se Relacionam","text":""},{"location":"backend/conceitos/index.html#camada-de-dados","title":"Camada de Dados","text":"<pre><code>Models (Django)          Entity Framework (C#)\n    \u2193                           \u2193\nMigrations               EF Migrations\n    \u2193                           \u2193\nBanco de Dados          Banco de Dados\n</code></pre>"},{"location":"backend/conceitos/index.html#camada-de-api","title":"Camada de API","text":"<pre><code>Serializers (Django)     DTOs (C#)\n    \u2193                           \u2193\nViews                    Controllers\n    \u2193                           \u2193\nURLs                     Routes\n</code></pre>"},{"location":"backend/conceitos/index.html#diferencas-principais","title":"Diferen\u00e7as Principais","text":""},{"location":"backend/conceitos/index.html#django-vs-aspnet-core","title":"Django vs ASP.NET Core","text":"<ol> <li>Arquitetura</li> <li>Django: MTV (Model-Template-View)</li> <li> <p>ASP.NET Core: MVC</p> </li> <li> <p>ORM</p> </li> <li>Django: ORM integrado</li> <li> <p>C#: Entity Framework</p> </li> <li> <p>Roteamento</p> </li> <li>Django: URLs expl\u00edcitas</li> <li>ASP.NET Core: Conven\u00e7\u00f5es de rota</li> </ol>"},{"location":"backend/conceitos/index.html#por-que-estes-conceitos-sao-importantes","title":"Por Que Estes Conceitos S\u00e3o Importantes","text":"<ol> <li>Produtividade</li> <li>Entender os paralelos acelera o aprendizado</li> <li>Aproveitar conhecimento existente</li> <li> <p>Reduzir curva de aprendizado</p> </li> <li> <p>Manutenibilidade</p> </li> <li>Organiza\u00e7\u00e3o consistente</li> <li>Padr\u00f5es estabelecidos</li> <li> <p>C\u00f3digo previs\u00edvel</p> </li> <li> <p>Escalabilidade</p> </li> <li>Estrutura modular</li> <li>Separa\u00e7\u00e3o de responsabilidades</li> <li>F\u00e1cil de expandir</li> </ol>"},{"location":"backend/conceitos/index.html#como-estudar-os-conceitos","title":"Como Estudar os Conceitos","text":"<ol> <li>Ordem Recomendada</li> <li>Comece com Models e ORM</li> <li>Avance para Migrations</li> <li>Explore a estrutura do projeto</li> <li> <p>Aprofunde em boas pr\u00e1ticas</p> </li> <li> <p>Pr\u00e1tica</p> </li> <li>Experimente os exemplos</li> <li>Compare com C#</li> <li> <p>Crie pequenos projetos</p> </li> <li> <p>Recursos</p> </li> <li>Documenta\u00e7\u00e3o oficial</li> <li>Exemplos pr\u00e1ticos</li> <li>Paralelos com C#</li> </ol>"},{"location":"backend/conceitos/boas-praticas.html","title":"Boas Pr\u00e1ticas","text":""},{"location":"backend/conceitos/boas-praticas.html#organizacao-de-codigo","title":"Organiza\u00e7\u00e3o de C\u00f3digo","text":""},{"location":"backend/conceitos/boas-praticas.html#python-vs-c","title":"Python vs C","text":""},{"location":"backend/conceitos/boas-praticas.html#nomenclatura","title":"Nomenclatura","text":"<pre><code># Python/Django - snake_case\nclass ClienteModel(models.Model):\n    data_criacao = models.DateTimeField()\n\n    def calcular_idade(self):\n        return datetime.now() - self.data_criacao\n</code></pre> <pre><code>// C# - PascalCase/camelCase\npublic class ClienteModel\n{\n    public DateTime DataCriacao { get; set; }\n\n    public TimeSpan CalcularIdade()\n    {\n        return DateTime.Now - DataCriacao;\n    }\n}\n</code></pre>"},{"location":"backend/conceitos/boas-praticas.html#estrutura-de-arquivos","title":"Estrutura de Arquivos","text":"<pre><code># Python/Django\nmodels/\n    __init__.py\n    cliente.py\n    pedido.py\n\n# C#\nModels/\n    Cliente.cs\n    Pedido.cs\n</code></pre>"},{"location":"backend/conceitos/boas-praticas.html#padroes-django","title":"Padr\u00f5es Django","text":""},{"location":"backend/conceitos/boas-praticas.html#fat-models-thin-views","title":"Fat Models, Thin Views","text":"<pre><code># Bom - L\u00f3gica no Model\nclass Pedido(models.Model):\n    def calcular_total(self):\n        return self.items.aggregate(total=Sum('valor'))['total']\n\n# Ruim - L\u00f3gica na View\ndef view_pedido(request, pk):\n    pedido = Pedido.objects.get(pk=pk)\n    total = sum(item.valor for item in pedido.items.all())\n</code></pre>"},{"location":"backend/conceitos/boas-praticas.html#managers-customizados","title":"Managers Customizados","text":"<pre><code># Django\nclass PublishedManager(models.Manager):\n    def get_queryset(self):\n        return super().get_queryset().filter(status='published')\n\nclass Post(models.Model):\n    objects = models.Manager()\n    published = PublishedManager()\n</code></pre> <pre><code>// C# Equivalente\npublic class PublishedPostsRepository : IPostRepository\n{\n    private readonly DbContext _context;\n\n    public IQueryable&lt;Post&gt; GetAll()\n    {\n        return _context.Posts.Where(p =&gt; p.Status == \"published\");\n    }\n}\n</code></pre>"},{"location":"backend/conceitos/boas-praticas.html#convencoes-de-codigo","title":"Conven\u00e7\u00f5es de C\u00f3digo","text":""},{"location":"backend/conceitos/boas-praticas.html#imports","title":"Imports","text":"<pre><code># Python - ordem dos imports\n# 1. Stdlib\nfrom datetime import datetime\nfrom decimal import Decimal\n\n# 2. Third-party\nfrom django.db import models\nfrom rest_framework import serializers\n\n# 3. Local\nfrom .models import Cliente\nfrom .serializers import ClienteSerializer\n</code></pre> <pre><code>// C# - using statements\nusing System;\nusing System.Linq;\nusing Microsoft.EntityFrameworkCore;\nusing MinhaApp.Models;\n</code></pre>"},{"location":"backend/conceitos/boas-praticas.html#documentacao","title":"Documenta\u00e7\u00e3o","text":"<pre><code># Python - Docstrings\ndef calcular_desconto(valor: Decimal, percentual: Decimal) -&gt; Decimal:\n    \"\"\"\n    Calcula o desconto baseado no valor e percentual.\n\n    Args:\n        valor: Valor base para c\u00e1lculo\n        percentual: Percentual de desconto (0-100)\n\n    Returns:\n        Decimal: Valor do desconto calculado\n    \"\"\"\n    return valor * (percentual / 100)\n</code></pre> <pre><code>// C# - XML Comments\n/// &lt;summary&gt;\n/// Calcula o desconto baseado no valor e percentual.\n/// &lt;/summary&gt;\n/// &lt;param name=\"valor\"&gt;Valor base para c\u00e1lculo&lt;/param&gt;\n/// &lt;param name=\"percentual\"&gt;Percentual de desconto (0-100)&lt;/param&gt;\n/// &lt;returns&gt;Valor do desconto calculado&lt;/returns&gt;\npublic decimal CalcularDesconto(decimal valor, decimal percentual)\n{\n    return valor * (percentual / 100);\n}\n</code></pre>"},{"location":"backend/conceitos/boas-praticas.html#dry-dont-repeat-yourself","title":"DRY (Don't Repeat Yourself)","text":""},{"location":"backend/conceitos/boas-praticas.html#mixins-e-heranca","title":"Mixins e Heran\u00e7a","text":"<pre><code># Django\nclass TimestampMixin(models.Model):\n    created_at = models.DateTimeField(auto_now_add=True)\n    updated_at = models.DateTimeField(auto_now=True)\n\n    class Meta:\n        abstract = True\n\nclass Cliente(TimestampMixin):\n    nome = models.CharField(max_length=100)\n</code></pre> <pre><code>// C#\npublic abstract class TimestampEntity\n{\n    public DateTime CreatedAt { get; set; }\n    public DateTime UpdatedAt { get; set; }\n}\n\npublic class Cliente : TimestampEntity\n{\n    public string Nome { get; set; }\n}\n</code></pre>"},{"location":"backend/conceitos/boas-praticas.html#seguranca","title":"Seguran\u00e7a","text":""},{"location":"backend/conceitos/boas-praticas.html#validacao-de-dados","title":"Valida\u00e7\u00e3o de Dados","text":"<pre><code># Django\nfrom django.core.validators import MinValueValidator\n\nclass Produto(models.Model):\n    preco = models.DecimalField(\n        validators=[MinValueValidator(0)]\n    )\n</code></pre> <pre><code>// C#\npublic class Produto\n{\n    [Range(0, double.MaxValue)]\n    public decimal Preco { get; set; }\n}\n</code></pre>"},{"location":"backend/conceitos/boas-praticas.html#sql-injection-prevention","title":"SQL Injection Prevention","text":"<pre><code># Django - Seguro por padr\u00e3o\nCliente.objects.filter(nome__contains=nome_busca)\n\n# SQL Raw - Use sempre par\u00e2metros\nwith connection.cursor() as cursor:\n    cursor.execute(\n        \"SELECT * FROM cliente WHERE nome LIKE %s\",\n        [f\"%{nome_busca}%\"]\n    )\n</code></pre> <pre><code>// C# - Entity Framework\n_context.Clientes.Where(c =&gt; c.Nome.Contains(nomeBusca));\n\n// SQL Raw - Parametrizado\nusing (var cmd = connection.CreateCommand())\n{\n    cmd.CommandText = \"SELECT * FROM cliente WHERE nome LIKE @nome\";\n    cmd.Parameters.AddWithValue(\"@nome\", $\"%{nomeBusca}%\");\n}\n</code></pre>"},{"location":"backend/conceitos/estrutura.html","title":"Estrutura do Projeto","text":""},{"location":"backend/conceitos/estrutura.html#organizacao-de-diretorios","title":"Organiza\u00e7\u00e3o de Diret\u00f3rios","text":"<pre><code>backend/\n\u251c\u2500\u2500 app/                    # Configura\u00e7\u00f5es principais\n\u2502   \u251c\u2500\u2500 settings.py        # Similar ao appsettings.json\n\u2502   \u251c\u2500\u2500 urls.py            # Rotas principais\n\u2502   \u2514\u2500\u2500 wsgi.py            # Configura\u00e7\u00e3o de deploy\n\u251c\u2500\u2500 access/                # M\u00f3dulo de autentica\u00e7\u00e3o\n\u2502   \u251c\u2500\u2500 models/           # Models do m\u00f3dulo\n\u2502   \u251c\u2500\u2500 api/              # Endpoints da API\n\u2502   \u2502   \u251c\u2500\u2500 views/       # Similar aos Controllers\n\u2502   \u2502   \u2514\u2500\u2500 serializers/ # Similar aos DTOs\n\u2502   \u2514\u2500\u2500 migrations/      # Similar \u00e0s Migrations do EF\n\u251c\u2500\u2500 inventario/           # M\u00f3dulo de invent\u00e1rio\n\u251c\u2500\u2500 incidentes/          # M\u00f3dulo de incidentes\n\u251c\u2500\u2500 manage.py            # CLI do Django\n\u2514\u2500\u2500 requirements.txt     # Depend\u00eancias do projeto\n</code></pre>"},{"location":"backend/conceitos/estrutura.html#paralelo-com-estrutura-caspnet","title":"Paralelo com Estrutura C#/ASP.NET","text":"Django ASP.NET Core app/ Startup.cs + Program.cs settings.py appsettings.json urls.py Startup.Configure() models/ Models/ api/views/ Controllers/ api/serializers/ DTOs/ migrations/ Migrations/"},{"location":"backend/conceitos/estrutura.html#modulos-principais","title":"M\u00f3dulos Principais","text":""},{"location":"backend/conceitos/estrutura.html#1-app-configuracao","title":"1. App (Configura\u00e7\u00e3o)","text":"<ul> <li>Configura\u00e7\u00f5es globais</li> <li>Rotas principais</li> <li>Middleware</li> <li>Similar ao projeto principal do ASP.NET Core</li> </ul>"},{"location":"backend/conceitos/estrutura.html#2-access-autenticacao","title":"2. Access (Autentica\u00e7\u00e3o)","text":"<ul> <li>Gest\u00e3o de usu\u00e1rios</li> <li>Autentica\u00e7\u00e3o</li> <li>Permiss\u00f5es</li> <li>Similar ao Identity no ASP.NET Core</li> </ul>"},{"location":"backend/conceitos/estrutura.html#3-inventario","title":"3. Invent\u00e1rio","text":"<ul> <li>Gest\u00e3o de itens</li> <li>Categorias</li> <li>Movimenta\u00e7\u00f5es</li> <li>Similar a um m\u00f3dulo de dom\u00ednio no DDD</li> </ul>"},{"location":"backend/conceitos/estrutura.html#4-incidentes","title":"4. Incidentes","text":"<ul> <li>Registro de ocorr\u00eancias</li> <li>Acompanhamento</li> <li>Relat\u00f3rios</li> <li>Similar a um m\u00f3dulo de servi\u00e7o no DDD</li> </ul>"},{"location":"backend/conceitos/estrutura.html#organizacao-de-codigo","title":"Organiza\u00e7\u00e3o de C\u00f3digo","text":""},{"location":"backend/conceitos/estrutura.html#models","title":"Models","text":"<pre><code># Django\nmodels/\n\u251c\u2500\u2500 __init__.py\n\u251c\u2500\u2500 cliente.py\n\u2514\u2500\u2500 pedido.py\n</code></pre> <pre><code>// C# Equivalente\nModels/\n\u251c\u2500\u2500 Cliente.cs\n\u2514\u2500\u2500 Pedido.cs\n</code></pre>"},{"location":"backend/conceitos/estrutura.html#views-controllers","title":"Views (Controllers)","text":"<pre><code># Django\napi/views/\n\u251c\u2500\u2500 __init__.py\n\u251c\u2500\u2500 cliente_views.py\n\u2514\u2500\u2500 pedido_views.py\n</code></pre> <pre><code>// C# Equivalente\nControllers/\n\u251c\u2500\u2500 ClienteController.cs\n\u2514\u2500\u2500 PedidoController.cs\n</code></pre>"},{"location":"backend/conceitos/estrutura.html#boas-praticas","title":"Boas Pr\u00e1ticas","text":"<ol> <li>Separa\u00e7\u00e3o de Responsabilidades</li> <li>Models apenas com l\u00f3gica de dados</li> <li>Views apenas com l\u00f3gica de controle</li> <li> <p>Serializers para transforma\u00e7\u00e3o de dados</p> </li> <li> <p>Organiza\u00e7\u00e3o de Imports</p> </li> <li>Imports da stdlib primeiro</li> <li>Imports de terceiros depois</li> <li> <p>Imports locais por \u00faltimo</p> </li> <li> <p>Nomenclatura</p> </li> <li>Models: singular, PascalCase</li> <li>Views: plural, snake_case</li> <li> <p>URLs: plural, kebab-case</p> </li> <li> <p>M\u00f3dulos</p> </li> <li>Autocontidos</li> <li>Baixo acoplamento</li> <li>Alta coes\u00e3o</li> </ol>"},{"location":"backend/conceitos/estrutura.html#detalhamento-dos-modulos","title":"Detalhamento dos M\u00f3dulos","text":""},{"location":"backend/conceitos/estrutura.html#modulo-inventario","title":"M\u00f3dulo Invent\u00e1rio","text":"<pre><code>inventario/\n\u251c\u2500\u2500 api/\n\u2502   \u251c\u2500\u2500 serializers/      # DTOs para API\n\u2502   \u2502   \u251c\u2500\u2500 __init__.py\n\u2502   \u2502   \u251c\u2500\u2500 cliente.py    # Serializa\u00e7\u00e3o de clientes\n\u2502   \u2502   \u251c\u2500\u2500 site.py       # Serializa\u00e7\u00e3o de sites\n\u2502   \u2502   \u2514\u2500\u2500 equipamento.py # Serializa\u00e7\u00e3o de equipamentos\n\u2502   \u251c\u2500\u2500 views/           # Controllers da API\n\u2502   \u2502   \u251c\u2500\u2500 __init__.py\n\u2502   \u2502   \u251c\u2500\u2500 cliente_views.py\n\u2502   \u2502   \u251c\u2500\u2500 site_views.py\n\u2502   \u2502   \u2514\u2500\u2500 equipamento_views.py\n\u2502   \u2514\u2500\u2500 urls.py          # Rotas da API\n\u251c\u2500\u2500 models/              # Models do m\u00f3dulo\n\u2502   \u251c\u2500\u2500 __init__.py\n\u2502   \u251c\u2500\u2500 cliente.py      # Model de Cliente\n\u2502   \u251c\u2500\u2500 site.py         # Model de Site\n\u2502   \u2514\u2500\u2500 equipamento.py  # Model de Equipamento\n\u2514\u2500\u2500 migrations/         # Migra\u00e7\u00f5es do banco\n    \u251c\u2500\u2500 __init__.py\n    \u2514\u2500\u2500 0001_initial.py\n</code></pre>"},{"location":"backend/conceitos/estrutura.html#equivalente-em-caspnet","title":"Equivalente em C#/ASP.NET","text":"<pre><code>Inventario/\n\u251c\u2500\u2500 Controllers/        # Similar \u00e0s views do Django\n\u2502   \u251c\u2500\u2500 ClienteController.cs\n\u2502   \u251c\u2500\u2500 SiteController.cs\n\u2502   \u2514\u2500\u2500 EquipamentoController.cs\n\u251c\u2500\u2500 Models/\n\u2502   \u251c\u2500\u2500 Cliente.cs\n\u2502   \u251c\u2500\u2500 Site.cs\n\u2502   \u2514\u2500\u2500 Equipamento.cs\n\u251c\u2500\u2500 DTOs/              # Similar aos serializers\n\u2502   \u251c\u2500\u2500 ClienteDTO.cs\n\u2502   \u2514\u2500\u2500 SiteDTO.cs\n\u2514\u2500\u2500 Migrations/        # Migrations do EF\n</code></pre>"},{"location":"backend/conceitos/estrutura.html#modulo-incidentes","title":"M\u00f3dulo Incidentes","text":"<pre><code>incidentes/\n\u251c\u2500\u2500 api/\n\u2502   \u251c\u2500\u2500 serializers/\n\u2502   \u2502   \u251c\u2500\u2500 __init__.py\n\u2502   \u2502   \u2514\u2500\u2500 incidente_serializer.py\n\u2502   \u251c\u2500\u2500 views/\n\u2502   \u2502   \u251c\u2500\u2500 __init__.py\n\u2502   \u2502   \u2514\u2500\u2500 incidente_view.py\n\u2502   \u2514\u2500\u2500 urls.py\n\u251c\u2500\u2500 models/\n\u2502   \u251c\u2500\u2500 __init__.py\n\u2502   \u2514\u2500\u2500 incidente.py\n\u2514\u2500\u2500 migrations/\n    \u251c\u2500\u2500 __init__.py\n    \u2514\u2500\u2500 0001_initial.py\n</code></pre>"},{"location":"backend/conceitos/estrutura.html#equivalente-em-caspnet_1","title":"Equivalente em C#/ASP.NET","text":"<pre><code>Incidentes/\n\u251c\u2500\u2500 Controllers/\n\u2502   \u2514\u2500\u2500 IncidentesController.cs\n\u251c\u2500\u2500 Models/\n\u2502   \u2514\u2500\u2500 Incidente.cs\n\u251c\u2500\u2500 DTOs/\n\u2502   \u2514\u2500\u2500 IncidenteDTO.cs\n\u2514\u2500\u2500 Migrations/\n</code></pre>"},{"location":"backend/conceitos/estrutura.html#responsabilidades-dos-diretorios","title":"Responsabilidades dos Diret\u00f3rios","text":""},{"location":"backend/conceitos/estrutura.html#apiserializers","title":"api/serializers/","text":"<ul> <li>Convers\u00e3o de models para JSON e vice-versa</li> <li>Valida\u00e7\u00e3o de dados da API</li> <li>Similar aos DTOs em C#</li> </ul>"},{"location":"backend/conceitos/estrutura.html#apiviews","title":"api/views/","text":"<ul> <li>L\u00f3gica de neg\u00f3cios da API</li> <li>Manipula\u00e7\u00e3o de requisi\u00e7\u00f5es HTTP</li> <li>Similar aos Controllers em C#</li> </ul>"},{"location":"backend/conceitos/estrutura.html#models_1","title":"models/","text":"<ul> <li>Defini\u00e7\u00e3o das entidades</li> <li>L\u00f3gica de dom\u00ednio</li> <li>Similar aos Models em C#</li> </ul>"},{"location":"backend/conceitos/estrutura.html#migrations","title":"migrations/","text":"<ul> <li>Versionamento do banco de dados</li> <li>Altera\u00e7\u00f5es no esquema</li> <li>Similar \u00e0s Migrations do Entity Framework</li> </ul>"},{"location":"backend/conceitos/estrutura.html#arquivos-principais","title":"Arquivos Principais","text":""},{"location":"backend/conceitos/estrutura.html#initpy","title":"init.py","text":"<ul> <li>Define um diret\u00f3rio como pacote Python</li> <li>Permite importa\u00e7\u00e3o de m\u00f3dulos</li> <li>Sem equivalente direto em C#</li> </ul>"},{"location":"backend/conceitos/estrutura.html#urlspy","title":"urls.py","text":"<pre><code># Django\nurlpatterns = [\n    path('clientes/', views.cliente_list),\n    path('clientes/&lt;int:pk&gt;/', views.cliente_detail),\n]\n</code></pre> <pre><code>// C# Equivalente\napp.MapControllerRoute(\n    name: \"clientes\",\n    pattern: \"clientes/{id?}\",\n    defaults: new { controller = \"Clientes\", action = \"Index\" }\n);\n</code></pre>"},{"location":"backend/conceitos/migrations.html","title":"Sistema de Migrations","text":""},{"location":"backend/conceitos/migrations.html#visao-geral","title":"Vis\u00e3o Geral","text":"<p>Migrations s\u00e3o como um sistema de controle de vers\u00e3o para seu banco de dados. Elas permitem modificar o esquema do banco de dados de forma consistente e compartilh\u00e1vel.</p>"},{"location":"backend/conceitos/migrations.html#criacao-de-migrations","title":"Cria\u00e7\u00e3o de Migrations","text":""},{"location":"backend/conceitos/migrations.html#django-vs-entity-framework-vs-sql-puro","title":"Django vs Entity Framework vs SQL Puro","text":""},{"location":"backend/conceitos/migrations.html#django","title":"Django","text":"<pre><code># Criar migration\npython manage.py makemigrations\n\n# Migration gerada:\nclass Migration(migrations.Migration):\n    dependencies = [\n        ('app', '0001_initial'),\n    ]\n\n    operations = [\n        migrations.AddField(\n            model_name='cliente',\n            name='telefone',\n            field=models.CharField(max_length=20, null=True),\n        ),\n    ]\n</code></pre>"},{"location":"backend/conceitos/migrations.html#entity-framework","title":"Entity Framework","text":"<pre><code>// Criar migration\nAdd-Migration AddTelefoneToCliente\n\npublic partial class AddTelefoneToCliente : Migration\n{\n    protected override void Up(MigrationBuilder migrationBuilder)\n    {\n        migrationBuilder.AddColumn&lt;string&gt;(\n            name: \"Telefone\",\n            table: \"Clientes\",\n            type: \"nvarchar(20)\",\n            nullable: true);\n    }\n\n    protected override void Down(MigrationBuilder migrationBuilder)\n    {\n        migrationBuilder.DropColumn(\n            name: \"Telefone\",\n            table: \"Clientes\");\n    }\n}\n</code></pre>"},{"location":"backend/conceitos/migrations.html#sql-puro","title":"SQL Puro","text":"<pre><code>-- V1_2__add_telefone_to_cliente.sql\nALTER TABLE clientes ADD telefone VARCHAR(20) NULL;\n\n-- V1_2__rollback.sql\nALTER TABLE clientes DROP COLUMN telefone;\n</code></pre>"},{"location":"backend/conceitos/migrations.html#tipos-de-migrations","title":"Tipos de Migrations","text":""},{"location":"backend/conceitos/migrations.html#1-schema-migrations","title":"1. Schema Migrations","text":"<pre><code># Django\nmigrations.CreateModel(\n    name='Produto',\n    fields=[\n        ('id', models.AutoField(primary_key=True)),\n        ('nome', models.CharField(max_length=100)),\n        ('preco', models.DecimalField(max_digits=10, decimal_places=2)),\n    ],\n)\n</code></pre> <pre><code>// Entity Framework\nmigrationBuilder.CreateTable(\n    name: \"Produtos\",\n    columns: table =&gt; new\n    {\n        Id = table.Column&lt;int&gt;(nullable: false)\n            .Annotation(\"SqlServer:Identity\", \"1, 1\"),\n        Nome = table.Column&lt;string&gt;(maxLength: 100),\n        Preco = table.Column&lt;decimal&gt;(type: \"decimal(10,2)\")\n    });\n</code></pre>"},{"location":"backend/conceitos/migrations.html#2-data-migrations","title":"2. Data Migrations","text":"<pre><code># Django\ndef criar_categorias_padrao(apps, schema_editor):\n    Categoria = apps.get_model('app', 'Categoria')\n    categorias = ['Eletr\u00f4nicos', 'M\u00f3veis', 'Vestu\u00e1rio']\n    for nome in categorias:\n        Categoria.objects.create(nome=nome)\n\nclass Migration(migrations.Migration):\n    dependencies = [('app', '0001_initial')]\n    operations = [\n        migrations.RunPython(criar_categorias_padrao),\n    ]\n</code></pre> <pre><code>// Entity Framework\nprotected override void Up(MigrationBuilder migrationBuilder)\n{\n    migrationBuilder.InsertData(\n        table: \"Categorias\",\n        columns: new[] { \"Nome\" },\n        values: new object[,]\n        {\n            { \"Eletr\u00f4nicos\" },\n            { \"M\u00f3veis\" },\n            { \"Vestu\u00e1rio\" }\n        });\n}\n</code></pre>"},{"location":"backend/conceitos/migrations.html#gerenciamento-de-dependencias","title":"Gerenciamento de Depend\u00eancias","text":""},{"location":"backend/conceitos/migrations.html#django_1","title":"Django","text":"<pre><code>class Migration(migrations.Migration):\n    dependencies = [\n        ('app', '0001_initial'),\n        ('outra_app', '0002_alguma_mudanca'),\n    ]\n</code></pre>"},{"location":"backend/conceitos/migrations.html#entity-framework_1","title":"Entity Framework","text":"<pre><code>// Gerenciado automaticamente pelo EF\nmodelBuilder.HasAnnotation(\n    \"ProductVersion\",\n    \"7.0.0\");\n</code></pre>"},{"location":"backend/conceitos/migrations.html#estrategias-de-migracao","title":"Estrat\u00e9gias de Migra\u00e7\u00e3o","text":""},{"location":"backend/conceitos/migrations.html#1-desenvolvimento","title":"1. Desenvolvimento","text":"<pre><code># Django - Resetar migrations\npython manage.py migrate app_name zero\npython manage.py makemigrations app_name --empty\n</code></pre> <pre><code># Entity Framework - Resetar migrations\nDrop-Database\nRemove-Migration\n</code></pre>"},{"location":"backend/conceitos/migrations.html#2-producao","title":"2. Produ\u00e7\u00e3o","text":"<pre><code># Django - Verificar SQL antes\npython manage.py sqlmigrate app_name 0001\npython manage.py migrate --plan\n</code></pre> <pre><code># Entity Framework\nScript-Migration -Idempotent\n</code></pre>"},{"location":"backend/conceitos/migrations.html#resolucao-de-problemas-comuns","title":"Resolu\u00e7\u00e3o de Problemas Comuns","text":""},{"location":"backend/conceitos/migrations.html#1-conflitos-de-merge","title":"1. Conflitos de Merge","text":"<pre><code># Django\npython manage.py makemigrations --merge\n</code></pre> <pre><code># Entity Framework\nAdd-Migration MergeFix\n</code></pre>"},{"location":"backend/conceitos/migrations.html#2-migrations-faltando","title":"2. Migrations Faltando","text":"<pre><code># Django - Verificar estado\npython manage.py showmigrations --list\n</code></pre> <pre><code># Entity Framework\nGet-Migration\n</code></pre>"},{"location":"backend/conceitos/migrations.html#3-rollback-seguro","title":"3. Rollback Seguro","text":"<pre><code># Django - Operations com revers\u00e3o\noperations = [\n    migrations.RunPython(\n        forwards_func,\n        reverse_func\n    )\n]\n</code></pre> <pre><code>// Entity Framework\nprotected override void Down(MigrationBuilder migrationBuilder)\n{\n    // Opera\u00e7\u00f5es de revers\u00e3o\n}\n</code></pre>"},{"location":"backend/conceitos/migrations.html#melhores-praticas","title":"Melhores Pr\u00e1ticas","text":"<ol> <li>Versionamento</li> <li>Nunca editar migrations aplicadas</li> <li>Manter hist\u00f3rico completo</li> <li> <p>Usar migrations para todas as mudan\u00e7as</p> </li> <li> <p>Nomenclatura</p> </li> <li>Nomes descritivos (ex: add_field_to_model)</li> <li>Prefixos num\u00e9ricos consistentes</li> <li> <p>Documentar mudan\u00e7as complexas</p> </li> <li> <p>Teste</p> </li> <li>Testar migrations em desenvolvimento</li> <li>Verificar SQL gerado</li> <li> <p>Manter scripts de rollback</p> </li> <li> <p>Backup</p> </li> <li>Backup antes de migrar em produ\u00e7\u00e3o</li> <li>Testar procedimento de rollback</li> <li>Documentar processo de recupera\u00e7\u00e3o</li> </ol>"},{"location":"backend/conceitos/migrations.html#comandos-principais","title":"Comandos Principais","text":""},{"location":"backend/conceitos/migrations.html#aplicar-migrations","title":"Aplicar Migrations","text":"<pre><code># Django\npython manage.py migrate\n\n# Entity Framework\nUpdate-Database\n\n# SQL Manual\npsql -d database -f 001_create_tables.sql\n</code></pre>"},{"location":"backend/conceitos/migrations.html#reverter-migrations","title":"Reverter Migrations","text":"<pre><code># Django\npython manage.py migrate app_name 0001_previous\n\n# Entity Framework\nUpdate-Database 0001_PreviousMigration\n\n# SQL Manual\npsql -d database -f 001_rollback.sql\n</code></pre>"},{"location":"backend/conceitos/migrations.html#listar-migrations","title":"Listar Migrations","text":"<pre><code># Django\npython manage.py showmigrations\n\n# Entity Framework\nGet-Migration\n\n# SQL Manual\nSELECT * FROM __MigrationHistory;\n</code></pre>"},{"location":"backend/conceitos/migrations.html#boas-praticas","title":"Boas Pr\u00e1ticas","text":"<ol> <li>Nomea\u00e7\u00e3o <code>python    # Django    python manage.py makemigrations --name create_cliente_table</code></li> </ol> <p><code>csharp    // Entity Framework    Add-Migration CreateClienteTable</code></p> <ol> <li>Backup</li> <li>Sempre fazer backup antes de migrar em produ\u00e7\u00e3o</li> <li>Testar migrations em ambiente de desenvolvimento</li> <li> <p>Ter scripts de rollback prontos</p> </li> <li> <p>Versionamento</p> </li> <li>Commitar migrations junto com c\u00f3digo</li> <li>N\u00e3o modificar migrations j\u00e1 aplicadas</li> <li> <p>Usar migrations para mudan\u00e7as no esquema</p> </li> <li> <p>Dados    ```python    # Django - Data Migration    from django.db import migrations</p> </li> </ol> <p>def adicionar_dados(apps, schema_editor):        Cliente = apps.get_model('app', 'Cliente')        Cliente.objects.create(nome='Admin')</p> <p>class Migration(migrations.Migration):        dependencies = [            ('app', '0001_initial'),        ]</p> <pre><code>   operations = [\n       migrations.RunPython(adicionar_dados),\n   ]\n</code></pre> <p>```</p> <p><code>csharp    // Entity Framework - Seed Data    modelBuilder.Entity&lt;Cliente&gt;()        .HasData(new Cliente { Id = 1, Nome = \"Admin\" });</code></p>"},{"location":"backend/conceitos/migrations.html#resolucao-de-problemas","title":"Resolu\u00e7\u00e3o de Problemas","text":"<ol> <li>Conflitos</li> <li>Resolver conflitos de merge</li> <li>N\u00e3o pular n\u00fameros de migrations</li> <li> <p>Manter depend\u00eancias corretas</p> </li> <li> <p>Performance</p> </li> <li>Dividir migrations grandes</li> <li>Executar em hor\u00e1rios de baixo uso</li> <li>Monitorar tempo de execu\u00e7\u00e3o</li> </ol>"},{"location":"backend/conceitos/models-db.html","title":"Models e Banco de Dados","text":""},{"location":"backend/conceitos/models-db.html#models-do-django-vs-classes-c","title":"Models do Django vs Classes C","text":""},{"location":"backend/conceitos/models-db.html#django-python","title":"Django (Python)","text":"<pre><code>from django.db import models\n\nclass Cliente(models.Model):\n    nome = models.CharField(max_length=100)\n    email = models.EmailField(unique=True)\n    data_cadastro = models.DateTimeField(auto_now_add=True)\n\n    class Meta:\n        db_table = 'clientes'\n        ordering = ['-data_cadastro']\n</code></pre>"},{"location":"backend/conceitos/models-db.html#c-entity-framework","title":"C# (Entity Framework)","text":"<pre><code>public class Cliente\n{\n    public int Id { get; set; }\n    public string Nome { get; set; }\n    public string Email { get; set; }\n    public DateTime DataCadastro { get; set; }\n}\n\npublic class ClienteConfiguration : IEntityTypeConfiguration&lt;Cliente&gt;\n{\n    public void Configure(EntityTypeBuilder&lt;Cliente&gt; builder)\n    {\n        builder.ToTable(\"clientes\");\n        builder.HasIndex(c =&gt; c.Email).IsUnique();\n        builder.Property(c =&gt; c.DataCadastro).HasDefaultValueSql(\"GETDATE()\");\n    }\n}\n</code></pre>"},{"location":"backend/conceitos/models-db.html#tipos-de-campos","title":"Tipos de Campos","text":"Django C# SQL Server CharField string NVARCHAR TextField string NTEXT IntegerField int INT BooleanField bool BIT DateTimeField DateTime DATETIME DecimalField decimal DECIMAL ForeignKey virtual Class INT + FK ManyToManyField ICollection Tabela Jun\u00e7\u00e3o"},{"location":"backend/conceitos/models-db.html#relacionamentos","title":"Relacionamentos","text":""},{"location":"backend/conceitos/models-db.html#one-to-many","title":"One-to-Many","text":"<pre><code># Django\nclass Pedido(models.Model):\n    cliente = models.ForeignKey(Cliente, on_delete=models.CASCADE)\n</code></pre> <pre><code>// C#\npublic class Pedido\n{\n    public int ClienteId { get; set; }\n    public virtual Cliente Cliente { get; set; }\n}\n</code></pre>"},{"location":"backend/conceitos/models-db.html#many-to-many","title":"Many-to-Many","text":"<pre><code># Django\nclass Produto(models.Model):\n    categorias = models.ManyToManyField('Categoria')\n</code></pre> <pre><code>// C#\npublic class Produto\n{\n    public ICollection&lt;Categoria&gt; Categorias { get; set; }\n}\n</code></pre>"},{"location":"backend/conceitos/models-db.html#queries","title":"Queries","text":""},{"location":"backend/conceitos/models-db.html#django-orm","title":"Django ORM","text":"<pre><code># Busca simples\nclientes = Cliente.objects.filter(nome__contains='Jo\u00e3o')\n\n# Join\npedidos = Pedido.objects.select_related('cliente').all()\n\n# Agrega\u00e7\u00e3o\nfrom django.db.models import Count, Avg\ntotal = Pedido.objects.aggregate(\n    total=Count('id'),\n    media=Avg('valor')\n)\n</code></pre>"},{"location":"backend/conceitos/models-db.html#linq-c","title":"LINQ (C#)","text":"<pre><code>// Busca simples\nvar clientes = _context.Clientes.Where(c =&gt; c.Nome.Contains(\"Jo\u00e3o\"));\n\n// Join\nvar pedidos = _context.Pedidos.Include(p =&gt; p.Cliente).ToList();\n\n// Agrega\u00e7\u00e3o\nvar total = _context.Pedidos.GroupBy(p =&gt; 1).Select(g =&gt; new {\n    Total = g.Count(),\n    Media = g.Average(p =&gt; p.Valor)\n}).First();\n</code></pre>"},{"location":"backend/conceitos/models-db.html#sql-puro","title":"SQL Puro","text":"<pre><code>-- Busca simples\nSELECT * FROM clientes WHERE nome LIKE '%Jo\u00e3o%'\n\n-- Join\nSELECT p.*, c.* \nFROM pedidos p\nINNER JOIN clientes c ON p.cliente_id = c.id\n\n-- Agrega\u00e7\u00e3o\nSELECT \n    COUNT(*) as total,\n    AVG(valor) as media\nFROM pedidos\n</code></pre>"},{"location":"backend/conceitos/models-db.html#boas-praticas","title":"Boas Pr\u00e1ticas","text":"<ol> <li>Valida\u00e7\u00e3o <code>python    # Django    def clean(self):        if self.email and not self.email.endswith('@empresa.com'):            raise ValidationError('Email inv\u00e1lido')</code></li> </ol> <p><code>csharp    // C#    public class ClienteValidator : AbstractValidator&lt;Cliente&gt;    {        public ClienteValidator()        {            RuleFor(x =&gt; x.Email).Must(e =&gt; e.EndsWith(\"@empresa.com\"));        }    }</code></p> <ol> <li>\u00cdndices <code>python    # Django    class Meta:        indexes = [            models.Index(fields=['nome', 'email'])        ]</code></li> </ol> <p><code>csharp    // C#    modelBuilder.Entity&lt;Cliente&gt;()        .HasIndex(c =&gt; new { c.Nome, c.Email });</code></p>"},{"location":"backend/conceitos/queries.html","title":"Queries e Views","text":""},{"location":"backend/conceitos/queries.html#visao-geral","title":"Vis\u00e3o Geral","text":"<p>O Django oferece diferentes maneiras de consultar e retornar dados atrav\u00e9s do ORM. Vamos comparar com SQL puro e C# para entender melhor cada abordagem.</p>"},{"location":"backend/conceitos/queries.html#consultas-basicas","title":"Consultas B\u00e1sicas","text":""},{"location":"backend/conceitos/queries.html#django-orm","title":"Django ORM","text":"<pre><code># models.py\nclass Cliente(models.Model):\n    nome = models.CharField(max_length=100)\n    email = models.EmailField()\n    data_cadastro = models.DateTimeField(auto_now_add=True)\n    ativo = models.BooleanField(default=True)\n\n# views.py\nfrom rest_framework.generics import ListAPIView\nfrom rest_framework.permissions import IsAuthenticated\n\nclass ClienteListView(ListAPIView):\n    serializer_class = ClienteSerializer\n    permission_classes = [IsAuthenticated]\n\n    def get_queryset(self):\n        return Cliente.objects.filter(\n            ativo=True\n        ).order_by('-data_cadastro')\n</code></pre>"},{"location":"backend/conceitos/queries.html#sql-equivalente","title":"SQL Equivalente","text":"<pre><code>SELECT \n    id,\n    nome,\n    email,\n    data_cadastro\nFROM clientes\nWHERE ativo = 1\nORDER BY data_cadastro DESC;\n</code></pre>"},{"location":"backend/conceitos/queries.html#c-equivalente","title":"C# Equivalente","text":"<pre><code>// Controller\n[ApiController]\n[Route(\"api/[controller]\")]\npublic class ClientesController : ControllerBase\n{\n    private readonly ApplicationDbContext _context;\n\n    [HttpGet]\n    [Authorize]\n    public async Task&lt;ActionResult&lt;IEnumerable&lt;ClienteDto&gt;&gt;&gt; GetClientes()\n    {\n        var clientes = await _context.Clientes\n            .Where(c =&gt; c.Ativo)\n            .OrderByDescending(c =&gt; c.DataCadastro)\n            .ToListAsync();\n\n        return Ok(_mapper.Map&lt;List&lt;ClienteDto&gt;&gt;(clientes));\n    }\n}\n</code></pre>"},{"location":"backend/conceitos/queries.html#consultas-com-relacionamentos","title":"Consultas com Relacionamentos","text":""},{"location":"backend/conceitos/queries.html#django-orm_1","title":"Django ORM","text":"<pre><code># models.py\nclass Pedido(models.Model):\n    cliente = models.ForeignKey(Cliente, on_delete=models.CASCADE)\n    data_pedido = models.DateTimeField(auto_now_add=True)\n    valor_total = models.DecimalField(max_digits=10, decimal_places=2)\n\nclass PedidoListView(ListAPIView):\n    serializer_class = PedidoSerializer\n\n    def get_queryset(self):\n        return Pedido.objects.select_related('cliente').filter(\n            valor_total__gt=1000\n        ).prefetch_related('itens')\n</code></pre>"},{"location":"backend/conceitos/queries.html#sql-equivalente_1","title":"SQL Equivalente","text":"<pre><code>SELECT \n    p.*,\n    c.nome as cliente_nome,\n    c.email as cliente_email\nFROM pedidos p\nINNER JOIN clientes c ON p.cliente_id = c.id\nWHERE p.valor_total &gt; 1000;\n</code></pre>"},{"location":"backend/conceitos/queries.html#c-equivalente_1","title":"C# Equivalente","text":"<pre><code>var pedidos = await _context.Pedidos\n    .Include(p =&gt; p.Cliente)\n    .Include(p =&gt; p.Itens)\n    .Where(p =&gt; p.ValorTotal &gt; 1000)\n    .ToListAsync();\n</code></pre>"},{"location":"backend/conceitos/queries.html#configuracao-de-urls","title":"Configura\u00e7\u00e3o de URLs","text":""},{"location":"backend/conceitos/queries.html#django","title":"Django","text":"<pre><code># urls.py\nfrom django.urls import path\nfrom .views import ClienteListView\n\nurlpatterns = [\n    path('clientes/', ClienteListView.as_view(), name='cliente-list'),\n]\n</code></pre>"},{"location":"backend/conceitos/queries.html#c-startupcs-ou-programcs","title":"C# (Startup.cs ou Program.cs)","text":"<pre><code>app.MapControllerRoute(\n    name: \"clientes\",\n    pattern: \"api/clientes\",\n    defaults: new { controller = \"Clientes\", action = \"GetClientes\" }\n);\n</code></pre>"},{"location":"backend/conceitos/queries.html#vantagens-do-orm","title":"Vantagens do ORM","text":"<ol> <li>Seguran\u00e7a    ```python    # Django - Prote\u00e7\u00e3o autom\u00e1tica contra SQL Injection    Cliente.objects.filter(nome__icontains=nome_busca)</li> </ol> <p># SQL - Vulner\u00e1vel se n\u00e3o parametrizado    f\"SELECT * FROM clientes WHERE nome LIKE '%{nome_busca}%'\"  # N\u00c3O FA\u00c7A ISSO!    ```</p> <ol> <li>Produtividade    ```python    # Django - Uma linha    clientes = Cliente.objects.all()</li> </ol> <p># SQL - Mais verboso    \"\"\"    SELECT id, nome, email, data_cadastro, ativo     FROM clientes    \"\"\"    ```</p> <ol> <li>Portabilidade</li> <li>Mesmo c\u00f3digo funciona com diferentes bancos</li> <li>Migrations autom\u00e1ticas</li> <li>Abstra\u00e7\u00e3o do banco de dados</li> </ol>"},{"location":"backend/conceitos/queries.html#queries-avancadas","title":"Queries Avan\u00e7adas","text":""},{"location":"backend/conceitos/queries.html#agregacoes","title":"Agrega\u00e7\u00f5es","text":"<pre><code># Django\nfrom django.db.models import Count, Avg, Sum\n\nclass ClienteStatsView(APIView):\n    def get(self, request):\n        stats = Cliente.objects.aggregate(\n            total_clientes=Count('id'),\n            media_pedidos=Avg('pedido__valor_total'),\n            soma_pedidos=Sum('pedido__valor_total')\n        )\n        return Response(stats)\n</code></pre>"},{"location":"backend/conceitos/queries.html#sql-equivalente_2","title":"SQL Equivalente","text":"<pre><code>SELECT \n    COUNT(id) as total_clientes,\n    AVG(p.valor_total) as media_pedidos,\n    SUM(p.valor_total) as soma_pedidos\nFROM clientes c\nLEFT JOIN pedidos p ON p.cliente_id = c.id;\n</code></pre>"},{"location":"backend/conceitos/queries.html#c-equivalente_2","title":"C# Equivalente","text":"<pre><code>var stats = await _context.Clientes\n    .GroupBy(c =&gt; 1)\n    .Select(g =&gt; new\n    {\n        TotalClientes = g.Count(),\n        MediaPedidos = g.Average(c =&gt; c.Pedidos.Average(p =&gt; p.ValorTotal)),\n        SomaPedidos = g.Sum(c =&gt; c.Pedidos.Sum(p =&gt; p.ValorTotal))\n    })\n    .FirstOrDefaultAsync();\n</code></pre>"},{"location":"backend/conceitos/queries.html#boas-praticas","title":"Boas Pr\u00e1ticas","text":"<ol> <li>Otimiza\u00e7\u00e3o de Queries    ```python    # Ruim - N+1 queries    pedidos = Pedido.objects.all()    for pedido in pedidos:        print(pedido.cliente.nome)  # Query adicional para cada pedido</li> </ol> <p># Bom - Uma \u00fanica query    pedidos = Pedido.objects.select_related('cliente').all()    for pedido in pedidos:        print(pedido.cliente.nome)  # N\u00e3o faz query adicional    ```</p> <ol> <li>Consultas Espec\u00edficas    ```python    # Ruim - Traz todos os campos    Cliente.objects.all()</li> </ol> <p># Bom - Traz apenas campos necess\u00e1rios    Cliente.objects.values('id', 'nome', 'email')    ```</p> <ol> <li>Queries Complexas    ```python    # Usando Q objects para queries complexas    from django.db.models import Q</li> </ol> <p>Cliente.objects.filter(        Q(nome__icontains='silva') |         Q(email__icontains='silva')    )    ```</p>"},{"location":"backend/conceitos/queries.html#viewsets-e-routers","title":"ViewSets e Routers","text":""},{"location":"backend/conceitos/queries.html#django-rest-framework","title":"Django REST Framework","text":"<pre><code># views.py\nfrom rest_framework import viewsets\n\nclass ClienteViewSet(viewsets.ModelViewSet):\n    queryset = Cliente.objects.all()\n    serializer_class = ClienteSerializer\n\n# urls.py\nfrom rest_framework.routers import DefaultRouter\n\nrouter = DefaultRouter()\nrouter.register('clientes', ClienteViewSet)\nurlpatterns = router.urls\n</code></pre>"},{"location":"backend/conceitos/queries.html#c-equivalente_3","title":"C# Equivalente","text":"<pre><code>[ApiController]\n[Route(\"api/[controller]\")]\npublic class ClientesController : ControllerBase\n{\n    [HttpGet]\n    public async Task&lt;ActionResult&lt;IEnumerable&lt;Cliente&gt;&gt;&gt; Get()\n    {\n        return await _context.Clientes.ToListAsync();\n    }\n\n    [HttpGet(\"{id}\")]\n    public async Task&lt;ActionResult&lt;Cliente&gt;&gt; GetById(int id)\n    {\n        return await _context.Clientes.FindAsync(id);\n    }\n\n    // Outros m\u00e9todos CRUD\n}\n</code></pre>"},{"location":"backend/modulos/access/access.html","title":"M\u00f3dulo Access","text":""},{"location":"backend/modulos/access/access.html#visao-geral","title":"Vis\u00e3o Geral","text":"<p>O m\u00f3dulo <code>access</code> \u00e9 respons\u00e1vel por toda a gest\u00e3o de autentica\u00e7\u00e3o, autoriza\u00e7\u00e3o e perfis de usu\u00e1rio no sistema.</p>"},{"location":"backend/modulos/access/access.html#componentes-principais","title":"Componentes Principais","text":""},{"location":"backend/modulos/access/access.html#autenticacao","title":"Autentica\u00e7\u00e3o","text":"<ul> <li>Sistema de login via token</li> <li>Gest\u00e3o de sess\u00f5es</li> <li>Altera\u00e7\u00e3o de senha</li> <li>Valida\u00e7\u00e3o de credenciais</li> </ul>"},{"location":"backend/modulos/access/access.html#perfil-de-usuario","title":"Perfil de Usu\u00e1rio","text":"<ul> <li>Dados b\u00e1sicos do usu\u00e1rio</li> <li>Informa\u00e7\u00f5es da empresa</li> <li>Prefer\u00eancias do sistema</li> </ul>"},{"location":"backend/modulos/access/access.html#sistema-de-permissoes","title":"Sistema de Permiss\u00f5es","text":"<ul> <li>Grupos de usu\u00e1rios</li> <li>Permiss\u00f5es granulares</li> <li>N\u00edveis de acesso</li> </ul>"},{"location":"backend/modulos/access/access.html#documentacao-detalhada","title":"Documenta\u00e7\u00e3o Detalhada","text":"<p>Para informa\u00e7\u00f5es mais detalhadas sobre cada componente, consulte:</p> <ul> <li>Login e Autentica\u00e7\u00e3o</li> <li>Perfil de Usu\u00e1rio</li> <li>Sistema de Permiss\u00f5es</li> </ul>"},{"location":"backend/modulos/access/login.html","title":"Sistema de Login - Backend","text":""},{"location":"backend/modulos/access/login.html#visao-geral","title":"Vis\u00e3o Geral","text":"<p>O sistema de autentica\u00e7\u00e3o foi implementado utilizando Django Rest Framework com autentica\u00e7\u00e3o via Token. Este documento explica a implementa\u00e7\u00e3o em Python/Django e faz um paralelo com C#/SQL para facilitar o entendimento.</p>"},{"location":"backend/modulos/access/login.html#modelo-de-usuario-user-model","title":"Modelo de Usu\u00e1rio (User Model)","text":""},{"location":"backend/modulos/access/login.html#implementacao-django","title":"Implementa\u00e7\u00e3o Django","text":"<pre><code># Em Python/Django, herdamos de AbstractUser para estender o modelo base de usu\u00e1rio\nclass User(AbstractUser):\n    username = models.CharField(\n        max_length=150,\n        unique=True,\n    )\n    full_name = models.CharField(max_length=255)\n    company_name = models.CharField(max_length=255, blank=True)\n\n    # O Django gerencia automaticamente as tabelas de permiss\u00f5es\n    groups = models.ManyToManyField(\"auth.Group\")\n    user_permissions = models.ManyToManyField(\"auth.Permission\")\n</code></pre>"},{"location":"backend/modulos/access/login.html#equivalente-em-c","title":"Equivalente em C","text":"<pre><code>// Em C#, precisar\u00edamos criar as tabelas manualmente\npublic class User\n{\n    public int Id { get; set; }\n    public string Username { get; set; }\n    public string PasswordHash { get; set; }\n    public string FullName { get; set; }\n    public string CompanyName { get; set; }\n}\n\n// SQL para criar a tabela\n/*\nCREATE TABLE Users (\n    Id INT IDENTITY(1,1) PRIMARY KEY,\n    Username NVARCHAR(150) UNIQUE NOT NULL,\n    PasswordHash NVARCHAR(MAX) NOT NULL,\n    FullName NVARCHAR(255) NOT NULL,\n    CompanyName NVARCHAR(255) NULL\n)\n*/\n</code></pre>"},{"location":"backend/modulos/access/login.html#endpoint-de-login","title":"Endpoint de Login","text":""},{"location":"backend/modulos/access/login.html#implementacao-django_1","title":"Implementa\u00e7\u00e3o Django","text":"<pre><code>@csrf_exempt\n@require_http_methods([\"POST\"])\ndef api_login(request):\n    data = json.loads(request.body)\n    username = data.get(\"username\")\n    password = data.get(\"password\")\n\n    # Django gerencia automaticamente a verifica\u00e7\u00e3o de senha\n    user = authenticate(request, username=username, password=password)\n    if user is not None:\n        # Token \u00e9 gerado/recuperado automaticamente\n        token, created = Token.objects.get_or_create(user=user)\n        return JsonResponse({\"token\": token.key})\n</code></pre>"},{"location":"backend/modulos/access/login.html#equivalente-em-c_1","title":"Equivalente em C","text":"<pre><code>[ApiController]\n[Route(\"api/[controller]\")]\npublic class AuthController : ControllerBase\n{\n    private readonly IConfiguration _configuration;\n    private readonly SqlConnection _connection;\n\n    [HttpPost(\"login\")]\n    public IActionResult Login([FromBody] LoginModel model)\n    {\n        using (var conn = new SqlConnection(_configuration.GetConnectionString(\"Default\")))\n        {\n            conn.Open();\n            // Precisamos escrever o SQL manualmente\n            var cmd = new SqlCommand(@\"\n                SELECT Id, PasswordHash \n                FROM Users \n                WHERE Username = @Username\", conn);\n\n            cmd.Parameters.AddWithValue(\"@Username\", model.Username);\n\n            using (var reader = cmd.ExecuteReader())\n            {\n                if (reader.Read())\n                {\n                    var storedHash = reader.GetString(1);\n                    // Precisamos implementar a verifica\u00e7\u00e3o de senha\n                    if (VerifyPassword(model.Password, storedHash))\n                    {\n                        // Precisamos implementar a gera\u00e7\u00e3o de token\n                        var token = GenerateJwtToken(reader.GetInt32(0));\n                        return Ok(new { token });\n                    }\n                }\n            }\n        }\n        return Unauthorized();\n    }\n}\n</code></pre>"},{"location":"backend/modulos/access/login.html#principais-diferencas","title":"Principais Diferen\u00e7as","text":"<ol> <li>ORM vs SQL Puro</li> <li>Django: Usa ORM que abstrai o SQL</li> <li> <p>C#: Tradicionalmente usa SQL puro ou Entity Framework</p> </li> <li> <p>Autentica\u00e7\u00e3o</p> </li> <li>Django: Sistema built-in de auth</li> <li> <p>C#: Precisa implementar manualmente ou usar Identity</p> </li> <li> <p>Gerenciamento de Senha</p> </li> <li>Django: Hash e verifica\u00e7\u00e3o autom\u00e1ticos</li> <li> <p>C#: Precisa implementar manualmente (ou usar Identity)</p> </li> <li> <p>Tokens</p> </li> <li>Django: DRF fornece sistema de token</li> <li>C#: Precisa implementar JWT ou outro sistema</li> </ol>"},{"location":"backend/modulos/access/login.html#fluxo-de-autenticacao","title":"Fluxo de Autentica\u00e7\u00e3o","text":"<ol> <li>Cliente envia credenciais (username/password)</li> <li>Backend valida credenciais</li> <li>Se v\u00e1lido, gera/recupera token</li> <li>Token \u00e9 retornado ao cliente</li> <li>Cliente usa token nas requisi\u00e7\u00f5es subsequentes</li> </ol>"},{"location":"backend/modulos/access/login.html#seguranca","title":"Seguran\u00e7a","text":"<ul> <li>Senhas s\u00e3o sempre hasheadas antes de armazenadas</li> <li>Tokens t\u00eam tempo de expira\u00e7\u00e3o</li> <li>HTTPS \u00e9 obrigat\u00f3rio em produ\u00e7\u00e3o</li> <li>Prote\u00e7\u00e3o contra CSRF implementada</li> </ul>"},{"location":"backend/modulos/access/permissions.html","title":"Sistema de Permiss\u00f5es","text":""},{"location":"backend/modulos/access/permissions.html#visao-geral","title":"Vis\u00e3o Geral","text":"<p>O sistema de permiss\u00f5es controla o acesso dos usu\u00e1rios \u00e0s funcionalidades.</p>"},{"location":"backend/modulos/access/permissions.html#grupos-e-permissoes","title":"Grupos e Permiss\u00f5es","text":""},{"location":"backend/modulos/access/permissions.html#django","title":"Django","text":"<pre><code># Gerenciado automaticamente pelo Django Admin\ngroups = models.ManyToManyField(\"auth.Group\")\nuser_permissions = models.ManyToManyField(\"auth.Permission\")\n</code></pre>"},{"location":"backend/modulos/access/permissions.html#equivalente-sql","title":"Equivalente SQL","text":"<pre><code>CREATE TABLE UserGroups (\n    UserId INT,\n    GroupId INT,\n    PRIMARY KEY (UserId, GroupId)\n)\n\nCREATE TABLE UserPermissions (\n    UserId INT,\n    PermissionId INT,\n    PRIMARY KEY (UserId, PermissionId)\n)\n</code></pre>"},{"location":"backend/modulos/access/permissions.html#niveis-de-acesso","title":"N\u00edveis de Acesso","text":"<ol> <li>Administrador (staff)</li> <li>Usu\u00e1rio Padr\u00e3o</li> <li>Usu\u00e1rio Limitado</li> </ol>"},{"location":"backend/modulos/access/permissions.html#decoradores-de-permissao","title":"Decoradores de Permiss\u00e3o","text":"<pre><code>@permission_classes([IsAuthenticated])\n@permission_classes([IsAdminUser])\n@permission_classes([IsStaffUser])\n</code></pre>"},{"location":"backend/modulos/access/permissions.html#verificacoes-de-permissao","title":"Verifica\u00e7\u00f5es de Permiss\u00e3o","text":"<pre><code>if request.user.is_staff:\n    # Acesso administrativo\nif request.user.has_perm('app.view_model'):\n    # Permiss\u00e3o espec\u00edfica\n</code></pre>"},{"location":"backend/modulos/access/profile.html","title":"Perfil de Usu\u00e1rio","text":""},{"location":"backend/modulos/access/profile.html#visao-geral","title":"Vis\u00e3o Geral","text":"<p>O sistema de perfil permite gerenciar informa\u00e7\u00f5es do usu\u00e1rio e suas prefer\u00eancias.</p>"},{"location":"backend/modulos/access/profile.html#endpoints","title":"Endpoints","text":""},{"location":"backend/modulos/access/profile.html#visualizar-perfil","title":"Visualizar Perfil","text":"<pre><code>@api_view([\"GET\"])\n@permission_classes([IsAuthenticated])\ndef profile_view(request):\n    # Retorna dados do usu\u00e1rio logado\n</code></pre>"},{"location":"backend/modulos/access/profile.html#atualizar-perfil","title":"Atualizar Perfil","text":"<pre><code>@api_view([\"PUT\"])\n@permission_classes([IsAuthenticated])\ndef profile_update(request):\n    # Atualiza dados do usu\u00e1rio\n</code></pre>"},{"location":"backend/modulos/access/profile.html#equivalente-em-c","title":"Equivalente em C","text":"<pre><code>[ApiController]\n[Route(\"api/[controller]\")]\npublic class ProfileController : ControllerBase\n{\n    [HttpGet]\n    [Authorize]\n    public IActionResult GetProfile()\n    {\n        // Implementa\u00e7\u00e3o do perfil\n    }\n\n    [HttpPut]\n    [Authorize]\n    public IActionResult UpdateProfile([FromBody] ProfileUpdateModel model)\n    {\n        // Implementa\u00e7\u00e3o da atualiza\u00e7\u00e3o\n    }\n}\n</code></pre>"},{"location":"backend/modulos/access/profile.html#campos-do-perfil","title":"Campos do Perfil","text":"<ul> <li>Username (\u00fanico)</li> <li>Nome Completo</li> <li>Nome da Empresa</li> <li>Status Staff</li> <li>Grupos</li> <li>Permiss\u00f5es</li> </ul>"},{"location":"backend/modulos/access/urls.html","title":"Rotas do M\u00f3dulo Access (urls.py)","text":""},{"location":"backend/modulos/access/urls.html#visao-geral","title":"Vis\u00e3o Geral","text":"<p>O arquivo <code>urls.py</code> no m\u00f3dulo Access define todas as rotas relacionadas \u00e0 autentica\u00e7\u00e3o e gerenciamento de usu\u00e1rios.</p>"},{"location":"backend/modulos/access/urls.html#implementacao-django","title":"Implementa\u00e7\u00e3o Django","text":"<pre><code>urlpatterns = [\n    path(\"login/\", views.api_login, name=\"api_login\"),\n    path(\"logout/\", views.api_logout, name=\"api_logout\"),\n    path(\"signup/\", views.signup, name=\"signup\"),\n    path(\"check-username/&lt;str:username&gt;/\", views.check_username, name=\"check-username\"),\n    path(\"change-password/\", views.change_password, name=\"change-password\"),\n    path(\"profile/\", views.profile_view, name=\"profile\"),\n    path(\"profile/update/\", views.profile_update, name=\"profile-update\"),\n    path(\"api-token-auth/\", obtain_auth_token, name=\"api_token_auth\"),\n    re_path(r\"^docs/(?P&lt;path&gt;.*)$\", views.docs_proxy, name=\"docs-proxy\"),\n]\n</code></pre>"},{"location":"backend/modulos/access/urls.html#equivalente-em-c-aspnet-core","title":"Equivalente em C# (ASP.NET Core)","text":"<pre><code>public class Startup\n{\n    public void Configure(IApplicationBuilder app)\n    {\n        app.UseEndpoints(endpoints =&gt;\n        {\n            endpoints.MapControllerRoute(\n                name: \"login\",\n                pattern: \"api/auth/login\",\n                defaults: new { controller = \"Auth\", action = \"Login\" }\n            );\n\n            endpoints.MapControllerRoute(\n                name: \"logout\",\n                pattern: \"api/auth/logout\",\n                defaults: new { controller = \"Auth\", action = \"Logout\" }\n            );\n\n            // Demais rotas...\n        });\n    }\n}\n\n// Alternativamente, usando atributos nos controllers:\n[ApiController]\n[Route(\"api/[controller]\")]\npublic class AuthController : ControllerBase\n{\n    [HttpPost(\"login\")]\n    public IActionResult Login() { /*...*/ }\n\n    [HttpPost(\"logout\")]\n    public IActionResult Logout() { /*...*/ }\n\n    [HttpGet(\"check-username/{username}\")]\n    public IActionResult CheckUsername(string username) { /*...*/ }\n}\n</code></pre>"},{"location":"backend/modulos/access/urls.html#comparacao-de-abordagens","title":"Compara\u00e7\u00e3o de Abordagens","text":""},{"location":"backend/modulos/access/urls.html#django-python","title":"Django (Python)","text":"<ul> <li>Roteamento centralizado em urls.py</li> <li>Padr\u00f5es de URL definidos via express\u00f5es regulares ou path strings</li> <li>Nomea\u00e7\u00e3o de rotas para refer\u00eancia em templates</li> <li>Mapeamento direto para fun\u00e7\u00f5es de view</li> </ul>"},{"location":"backend/modulos/access/urls.html#aspnet-core-c","title":"ASP.NET Core (C#)","text":"<ul> <li>Roteamento via atributos nos controllers</li> <li>Conven\u00e7\u00f5es de rota configur\u00e1veis</li> <li>Suporte a rotas com par\u00e2metros tipados</li> <li>Integra\u00e7\u00e3o com inje\u00e7\u00e3o de depend\u00eancias</li> </ul>"},{"location":"backend/modulos/access/urls.html#endpoints-disponiveis","title":"Endpoints Dispon\u00edveis","text":"Endpoint M\u00e9todo Descri\u00e7\u00e3o Equivalente SQL (quando aplic\u00e1vel) <code>/login/</code> POST Autentica\u00e7\u00e3o do usu\u00e1rio <code>SELECT * FROM Users WHERE username = @username</code> <code>/logout/</code> POST Encerra a sess\u00e3o <code>UPDATE UserSessions SET active = 0 WHERE token = @token</code> <code>/signup/</code> POST Cadastro de usu\u00e1rio <code>INSERT INTO Users (username, password) VALUES (@username, @password)</code> <code>/check-username/&lt;username&gt;/</code> GET Verifica disponibilidade <code>SELECT COUNT(*) FROM Users WHERE username = @username</code> <code>/change-password/</code> POST Altera senha <code>UPDATE Users SET password = @newPassword WHERE id = @userId</code> <code>/profile/</code> GET Visualiza perfil <code>SELECT * FROM Users WHERE id = @userId</code> <code>/profile/update/</code> PUT Atualiza perfil <code>UPDATE Users SET field = @value WHERE id = @userId</code>"},{"location":"backend/modulos/access/urls.html#seguranca","title":"Seguran\u00e7a","text":"<ul> <li>Todas as rotas (exceto login/signup) requerem autentica\u00e7\u00e3o</li> <li>Tokens s\u00e3o validados em cada requisi\u00e7\u00e3o</li> <li>CSRF protection ativado para rotas n\u00e3o-GET</li> <li>Rate limiting para tentativas de login</li> </ul>"},{"location":"backend/modulos/access/urls.html#diferencas-principais","title":"Diferen\u00e7as Principais","text":"<ol> <li>Organiza\u00e7\u00e3o do C\u00f3digo</li> <li>Django: Rotas centralizadas em urls.py</li> <li> <p>C#: Rotas definidas nos controllers</p> </li> <li> <p>Tipo de Roteamento</p> </li> <li>Django: Pattern matching com strings/regex</li> <li> <p>C#: Attribute routing ou conven\u00e7\u00f5es</p> </li> <li> <p>Autentica\u00e7\u00e3o</p> </li> <li>Django: Middleware e decorators</li> <li> <p>C#: Filters e attributes</p> </li> <li> <p>Manuten\u00e7\u00e3o</p> </li> <li>Django: Altera\u00e7\u00f5es em um arquivo central</li> <li>C#: Altera\u00e7\u00f5es distribu\u00eddas nos controllers</li> </ol>"},{"location":"backend/modulos/app/app.html","title":"M\u00f3dulo App","text":""},{"location":"backend/modulos/app/app.html#visao-geral","title":"Vis\u00e3o Geral","text":"<p>O m\u00f3dulo <code>app</code> \u00e9 o m\u00f3dulo principal do projeto Django, respons\u00e1vel pelas configura\u00e7\u00f5es globais do sistema.</p>"},{"location":"backend/modulos/app/app.html#estrutura-do-modulo","title":"Estrutura do M\u00f3dulo","text":"<pre><code>app/\n\u251c\u2500\u2500 __init__.py\n\u251c\u2500\u2500 settings.py\n\u251c\u2500\u2500 urls.py\n\u2514\u2500\u2500 wsgi.py\n</code></pre>"},{"location":"backend/modulos/app/app.html#arquivos-principais","title":"Arquivos Principais","text":""},{"location":"backend/modulos/app/app.html#settingspy","title":"settings.py","text":"<p>Arquivo de configura\u00e7\u00f5es do Django contendo: - Configura\u00e7\u00f5es de banco de dados - Middleware - Apps instalados - Configura\u00e7\u00f5es de seguran\u00e7a - Configura\u00e7\u00f5es de CORS - Configura\u00e7\u00f5es do REST Framework</p>"},{"location":"backend/modulos/app/app.html#urlspy","title":"urls.py","text":"<p>Arquivo de roteamento principal que inclui: - Rotas administrativas - Rotas da API - Rotas de documenta\u00e7\u00e3o</p>"},{"location":"backend/modulos/app/app.html#wsgipy","title":"wsgi.py","text":"<p>Arquivo de configura\u00e7\u00e3o para deploy em servidores WSGI.</p>"},{"location":"backend/modulos/app/app.html#configuracoes-importantes","title":"Configura\u00e7\u00f5es Importantes","text":""},{"location":"backend/modulos/app/app.html#banco-de-dados","title":"Banco de Dados","text":"<p>Suporte para: - SQLite (desenvolvimento) - SQL Server (produ\u00e7\u00e3o)</p>"},{"location":"backend/modulos/app/app.html#seguranca","title":"Seguran\u00e7a","text":"<ul> <li>Token Authentication</li> <li>CSRF Protection</li> <li>CORS Configuration</li> </ul>"},{"location":"backend/modulos/app/app.html#rest-framework","title":"REST Framework","text":"<ul> <li>Pagina\u00e7\u00e3o</li> <li>Filtros</li> <li>Autentica\u00e7\u00e3o via Token</li> <li>Permiss\u00f5es</li> </ul>"},{"location":"backend/modulos/app/settings.html","title":"Configura\u00e7\u00f5es do Projeto (settings.py)","text":""},{"location":"backend/modulos/app/settings.html#visao-geral","title":"Vis\u00e3o Geral","text":"<p>O arquivo <code>settings.py</code> \u00e9 o cora\u00e7\u00e3o das configura\u00e7\u00f5es do Django, similar ao <code>appsettings.json</code> no ASP.NET Core.</p>"},{"location":"backend/modulos/app/settings.html#configuracoes-principais","title":"Configura\u00e7\u00f5es Principais","text":""},{"location":"backend/modulos/app/settings.html#banco-de-dados","title":"Banco de Dados","text":""},{"location":"backend/modulos/app/settings.html#django-python","title":"Django (Python)","text":"<pre><code>DATABASES = {\n    \"default\": {\n        \"ENGINE\": \"django.db.backends.sqlite3\",\n        \"NAME\": BASE_DIR / \"db.sqlite3\",\n    },\n    \"sql_server\": {\n        \"ENGINE\": \"mssql\",\n        \"NAME\": \"nome_do_banco\",\n        \"USER\": \"usuario\",\n        \"PASSWORD\": \"senha\",\n        \"HOST\": \"xxxx\",\n        \"PORT\": \"\",\n        \"OPTIONS\": {\n            \"driver\": \"ODBC Driver 17 for SQL Server\",\n        },\n    },\n}\n</code></pre>"},{"location":"backend/modulos/app/settings.html#equivalente-em-c-appsettingsjson","title":"Equivalente em C# (appsettings.json)","text":"<pre><code>{\n  \"ConnectionStrings\": {\n    \"DefaultConnection\": \"Data Source=app.db\",\n    \"SqlServerConnection\": \"Server=xxxx;Database=nome_do_banco;User Id=usuario;Password=senha;TrustServerCertificate=True\"\n  }\n}\n</code></pre>"},{"location":"backend/modulos/app/settings.html#autenticacao-e-seguranca","title":"Autentica\u00e7\u00e3o e Seguran\u00e7a","text":""},{"location":"backend/modulos/app/settings.html#django-python_1","title":"Django (Python)","text":"<pre><code>REST_FRAMEWORK = {\n    \"DEFAULT_AUTHENTICATION_CLASSES\": [\n        \"rest_framework.authentication.TokenAuthentication\",\n    ],\n    \"DEFAULT_PERMISSION_CLASSES\": [\n        \"rest_framework.permissions.IsAuthenticated\",\n    ],\n}\n\nAUTH_USER_MODEL = \"access.User\"\n</code></pre>"},{"location":"backend/modulos/app/settings.html#equivalente-em-c-startupcs","title":"Equivalente em C# (Startup.cs)","text":"<pre><code>public void ConfigureServices(IServiceCollection services)\n{\n    services.AddAuthentication(JwtBearerDefaults.AuthenticationScheme)\n        .AddJwtBearer(options =&gt; {\n            // Configura\u00e7\u00f5es do JWT\n        });\n\n    services.AddIdentity&lt;ApplicationUser, IdentityRole&gt;()\n        .AddEntityFrameworkStores&lt;ApplicationDbContext&gt;();\n}\n</code></pre>"},{"location":"backend/modulos/app/settings.html#cors","title":"CORS","text":""},{"location":"backend/modulos/app/settings.html#django-python_2","title":"Django (Python)","text":"<pre><code>CORS_ALLOWED_ORIGINS = [\n    \"http://localhost:5173\",\n]\n\nCORS_ALLOW_METHODS = [\n    \"DELETE\",\n    \"GET\",\n    \"OPTIONS\",\n    \"PATCH\",\n    \"POST\",\n    \"PUT\",\n]\n</code></pre>"},{"location":"backend/modulos/app/settings.html#equivalente-em-c-startupcs_1","title":"Equivalente em C# (Startup.cs)","text":"<pre><code>public void ConfigureServices(IServiceCollection services)\n{\n    services.AddCors(options =&gt;\n    {\n        options.AddPolicy(\"DefaultPolicy\",\n            builder =&gt; builder\n                .WithOrigins(\"http://localhost:5173\")\n                .AllowAnyMethod()\n                .AllowAnyHeader());\n    });\n}\n</code></pre>"},{"location":"backend/modulos/app/settings.html#diferencas-principais","title":"Diferen\u00e7as Principais","text":""},{"location":"backend/modulos/app/settings.html#1-configuracao-de-arquivos-estaticos","title":"1. Configura\u00e7\u00e3o de Arquivos Est\u00e1ticos","text":""},{"location":"backend/modulos/app/settings.html#django","title":"Django","text":"<pre><code>STATIC_URL = \"/static/\"\nSTATIC_ROOT = os.path.join(BASE_DIR, \"staticfiles\")\nMEDIA_URL = \"/media/\"\nMEDIA_ROOT = BASE_DIR / \"cadastro/arquivos\"\n</code></pre>"},{"location":"backend/modulos/app/settings.html#aspnet-core","title":"ASP.NET Core","text":"<pre><code>app.UseStaticFiles();\n// Configura\u00e7\u00e3o em wwwroot/\n</code></pre>"},{"location":"backend/modulos/app/settings.html#2-middleware","title":"2. Middleware","text":""},{"location":"backend/modulos/app/settings.html#django_1","title":"Django","text":"<pre><code>MIDDLEWARE = [\n    \"corsheaders.middleware.CorsMiddleware\",\n    \"django.middleware.security.SecurityMiddleware\",\n    // ...\n]\n</code></pre>"},{"location":"backend/modulos/app/settings.html#aspnet-core_1","title":"ASP.NET Core","text":"<pre><code>public void Configure(IApplicationBuilder app)\n{\n    app.UseMiddleware&lt;SecurityMiddleware&gt;();\n    app.UseCors();\n    // ...\n}\n</code></pre>"},{"location":"backend/modulos/app/settings.html#principais-diferencas-conceituais","title":"Principais Diferen\u00e7as Conceituais","text":"<ol> <li>Organiza\u00e7\u00e3o</li> <li>Django: Um \u00fanico arquivo de configura\u00e7\u00e3o</li> <li> <p>ASP.NET Core: Distribu\u00eddo entre appsettings.json e Startup.cs</p> </li> <li> <p>Banco de Dados</p> </li> <li>Django: ORM integrado</li> <li> <p>ASP.NET Core: Entity Framework precisa ser configurado</p> </li> <li> <p>Autentica\u00e7\u00e3o</p> </li> <li>Django: Sistema pr\u00f3prio com decoradores</li> <li> <p>ASP.NET Core: Identity Framework</p> </li> <li> <p>Servindo Arquivos</p> </li> <li>Django: Configura\u00e7\u00e3o expl\u00edcita de diret\u00f3rios</li> <li>ASP.NET Core: Conven\u00e7\u00e3o via wwwroot</li> </ol>"},{"location":"backend/modulos/app/urls.html","title":"Roteamento Principal (urls.py)","text":""},{"location":"backend/modulos/app/urls.html#visao-geral","title":"Vis\u00e3o Geral","text":"<p>O arquivo <code>urls.py</code> no m\u00f3dulo app \u00e9 o ponto central de roteamento, similar ao conceito de roteamento no ASP.NET Core.</p>"},{"location":"backend/modulos/app/urls.html#implementacao","title":"Implementa\u00e7\u00e3o","text":""},{"location":"backend/modulos/app/urls.html#django-python","title":"Django (Python)","text":"<pre><code>urlpatterns = [\n    path(\"admin/\", admin.site.urls),\n    path(\"api/access/\", include(\"access.urls\")),\n    path(\"api/inventario/\", include(\"inventario.api.urls\")),\n    path(\"api/incidentes/\", include(\"incidentes.api.urls\")),\n]\n</code></pre>"},{"location":"backend/modulos/app/urls.html#equivalente-em-c-aspnet-core","title":"Equivalente em C# (ASP.NET Core)","text":"<pre><code>public void Configure(IApplicationBuilder app)\n{\n    app.UseEndpoints(endpoints =&gt;\n    {\n        endpoints.MapControllerRoute(\n            name: \"admin\",\n            pattern: \"admin/{*catchall}\",\n            defaults: new { controller = \"Admin\", action = \"Index\" }\n        );\n\n        endpoints.MapControllerRoute(\n            name: \"api\",\n            pattern: \"api/{controller}/{action}/{id?}\"\n        );\n    });\n}\n</code></pre>"},{"location":"backend/modulos/app/urls.html#diferencas-principais","title":"Diferen\u00e7as Principais","text":"<ol> <li>Estrutura de Roteamento</li> <li>Django: Declarativa via URLs</li> <li> <p>ASP.NET Core: Conven\u00e7\u00e3o ou atributos</p> </li> <li> <p>Agrupamento</p> </li> <li>Django: <code>include()</code> para modulariza\u00e7\u00e3o</li> <li> <p>ASP.NET Core: Areas ou Controllers</p> </li> <li> <p>Par\u00e2metros</p> </li> <li>Django: Expressos na URL pattern</li> <li>ASP.NET Core: Route constraints</li> </ol>"},{"location":"backend/modulos/app/urls.html#exemplos-de-uso","title":"Exemplos de Uso","text":""},{"location":"backend/modulos/app/urls.html#django","title":"Django","text":"<pre><code># Rota com par\u00e2metro\npath(\"item/&lt;int:id&gt;/\", views.item_detail)\n\n# Rota com regex\nre_path(r\"^docs/(?P&lt;path&gt;.*)$\", views.docs_proxy)\n</code></pre>"},{"location":"backend/modulos/app/urls.html#aspnet-core","title":"ASP.NET Core","text":"<pre><code>// Rota com par\u00e2metro\n[Route(\"item/{id:int}\")]\npublic IActionResult ItemDetail(int id)\n\n// Rota com regex\n[Route(\"docs/{*path}\")]\npublic IActionResult DocsProxy(string path)\n</code></pre>"},{"location":"backend/modulos/app/urls.html#vantagens-e-desvantagens","title":"Vantagens e Desvantagens","text":""},{"location":"backend/modulos/app/urls.html#django_1","title":"Django","text":"<p>\u2705 Centralizado e expl\u00edcito \u2705 F\u00e1cil modulariza\u00e7\u00e3o \u274c Menos flex\u00edvel em runtime</p>"},{"location":"backend/modulos/app/urls.html#aspnet-core_1","title":"ASP.NET Core","text":"<p>\u2705 Flex\u00edvel e extens\u00edvel \u2705 Fortemente tipado \u274c Pode ficar disperso entre controllers</p>"},{"location":"backend/modulos/app/wsgi_asgi.html","title":"Configura\u00e7\u00e3o de Servidor (WSGI/ASGI)","text":""},{"location":"backend/modulos/app/wsgi_asgi.html#visao-geral","title":"Vis\u00e3o Geral","text":"<p>Os arquivos <code>wsgi.py</code> e <code>asgi.py</code> s\u00e3o pontos de entrada para servidores web, similar ao <code>Program.cs</code> no ASP.NET Core.</p>"},{"location":"backend/modulos/app/wsgi_asgi.html#wsgi-vs-asgi","title":"WSGI vs ASGI","text":""},{"location":"backend/modulos/app/wsgi_asgi.html#wsgi-wsgipy","title":"WSGI (wsgi.py)","text":""},{"location":"backend/modulos/app/wsgi_asgi.html#django-python","title":"Django (Python)","text":"<pre><code>import os\nfrom django.core.wsgi import get_wsgi_application\n\nos.environ.setdefault('DJANGO_SETTINGS_MODULE', 'app.settings')\napplication = get_wsgi_application()\n</code></pre>"},{"location":"backend/modulos/app/wsgi_asgi.html#equivalente-em-c-programcs","title":"Equivalente em C# (Program.cs)","text":"<pre><code>public class Program\n{\n    public static void Main(string[] args)\n    {\n        CreateHostBuilder(args).Build().Run();\n    }\n\n    public static IHostBuilder CreateHostBuilder(string[] args) =&gt;\n        Host.CreateDefaultBuilder(args)\n            .ConfigureWebHostDefaults(webBuilder =&gt;\n            {\n                webBuilder.UseStartup&lt;Startup&gt;();\n            });\n}\n</code></pre>"},{"location":"backend/modulos/app/wsgi_asgi.html#asgi-asgipy","title":"ASGI (asgi.py)","text":""},{"location":"backend/modulos/app/wsgi_asgi.html#django-python_1","title":"Django (Python)","text":"<pre><code>import os\nfrom django.core.asgi import get_asgi_application\n\nos.environ.setdefault('DJANGO_SETTINGS_MODULE', 'app.settings')\napplication = get_asgi_application()\n</code></pre>"},{"location":"backend/modulos/app/wsgi_asgi.html#equivalente-moderno-em-c-net-6","title":"Equivalente Moderno em C# (.NET 6+)","text":"<pre><code>var builder = WebApplication.CreateBuilder(args);\nvar app = builder.Build();\n\nawait app.RunAsync();\n</code></pre>"},{"location":"backend/modulos/app/wsgi_asgi.html#diferencas-principais","title":"Diferen\u00e7as Principais","text":"<ol> <li>Modelo de Execu\u00e7\u00e3o</li> <li>Django: WSGI (s\u00edncrono) ou ASGI (ass\u00edncrono)</li> <li> <p>ASP.NET Core: Sempre ass\u00edncrono</p> </li> <li> <p>Configura\u00e7\u00e3o</p> </li> <li>Django: Separada em wsgi.py/asgi.py</li> <li> <p>ASP.NET Core: Unificada em Program.cs</p> </li> <li> <p>Deployment</p> </li> <li>Django: Gunicorn, uWSGI, Daphne</li> <li>ASP.NET Core: IIS, Kestrel</li> </ol>"},{"location":"backend/modulos/app/wsgi_asgi.html#deployment","title":"Deployment","text":""},{"location":"backend/modulos/app/wsgi_asgi.html#django","title":"Django","text":"<pre><code># Usando Gunicorn (WSGI)\ngunicorn app.wsgi:application\n\n# Usando Daphne (ASGI)\ndaphne app.asgi:application\n</code></pre>"},{"location":"backend/modulos/app/wsgi_asgi.html#aspnet-core","title":"ASP.NET Core","text":"<pre><code># Publica\u00e7\u00e3o\ndotnet publish -c Release\n\n# Execu\u00e7\u00e3o\ndotnet MyApp.dll\n</code></pre>"},{"location":"backend/modulos/docs/docs.html","title":"M\u00f3dulo Docs","text":""},{"location":"backend/modulos/docs/docs.html#visao-geral","title":"Vis\u00e3o Geral","text":"<p>O m\u00f3dulo <code>docs</code> gerencia a documenta\u00e7\u00e3o do sistema, utilizando MkDocs para gerar documenta\u00e7\u00e3o est\u00e1tica.</p>"},{"location":"backend/modulos/docs/docs.html#estrutura-do-modulo","title":"Estrutura do M\u00f3dulo","text":"<pre><code>docs/\n\u251c\u2500\u2500 backend/\n\u251c\u2500\u2500 frontend/\n\u251c\u2500\u2500 manual/\n\u2514\u2500\u2500 mkdocs.yml\n</code></pre>"},{"location":"backend/modulos/docs/docs.html#funcionalidades","title":"Funcionalidades","text":""},{"location":"backend/modulos/docs/docs.html#documentacao-estatica","title":"Documenta\u00e7\u00e3o Est\u00e1tica","text":"<ul> <li>Gera\u00e7\u00e3o autom\u00e1tica via MkDocs</li> <li>Integra\u00e7\u00e3o com Django para servir documenta\u00e7\u00e3o</li> </ul>"},{"location":"backend/modulos/docs/docs.html#controle-de-acesso","title":"Controle de Acesso","text":"<ul> <li>Acesso restrito a usu\u00e1rios staff</li> <li>Proxy de documenta\u00e7\u00e3o via API</li> </ul>"},{"location":"backend/modulos/docs/docs.html#tipos-de-documentacao","title":"Tipos de Documenta\u00e7\u00e3o","text":"<ol> <li>Manual do Usu\u00e1rio</li> <li>Guias de uso</li> <li> <p>Tutoriais</p> </li> <li> <p>Documenta\u00e7\u00e3o T\u00e9cnica</p> </li> <li>Backend</li> <li>Frontend</li> <li>APIs</li> </ol>"},{"location":"backend/modulos/docs/docs.html#configuracao","title":"Configura\u00e7\u00e3o","text":"<ul> <li>Build autom\u00e1tico</li> <li>Servido atrav\u00e9s do Django</li> <li>Prote\u00e7\u00e3o de rotas</li> </ul>"},{"location":"backend/modulos/incidentes/api.html","title":"API de Incidentes","text":""},{"location":"backend/modulos/incidentes/api.html#implementacao-django","title":"Implementa\u00e7\u00e3o Django","text":""},{"location":"backend/modulos/incidentes/api.html#view-de-listagem","title":"View de Listagem","text":"<pre><code>class IncidenteListView(APIView):\n    permission_classes = [IsAuthenticated]\n    pagination_class = CustomPagination\n\n    def get(self, request):\n        queryset = Incidente.objects.all()\n        # ...l\u00f3gica de filtros...\n</code></pre>"},{"location":"backend/modulos/incidentes/api.html#equivalente-em-c","title":"Equivalente em C","text":""},{"location":"backend/modulos/incidentes/api.html#controller","title":"Controller","text":"<pre><code>[ApiController]\n[Route(\"api/[controller]\")]\npublic class IncidentesController : ControllerBase\n{\n    private readonly ApplicationDbContext _context;\n\n    public IncidentesController(ApplicationDbContext context)\n    {\n        _context = context;\n    }\n\n    [HttpGet]\n    [Authorize]\n    public async Task&lt;ActionResult&lt;IEnumerable&lt;Incidente&gt;&gt;&gt; GetIncidentes([FromQuery] IncidenteFilter filter)\n    {\n        var query = _context.Incidentes.AsQueryable();\n\n        // Filtros de data\n        if (filter.DataAberturaInicio.HasValue)\n            query = query.Where(i =&gt; i.DataAbertura &gt;= filter.DataAberturaInicio);\n\n        if (filter.DataAberturaFim.HasValue)\n            query = query.Where(i =&gt; i.DataAbertura &lt;= filter.DataAberturaFim);\n\n        // Busca em texto\n        if (!string.IsNullOrEmpty(filter.Search))\n        {\n            query = query.Where(i =&gt; \n                i.Origem.Contains(filter.Search) ||\n                i.Categoria.Contains(filter.Search) ||\n                i.Subcategoria.Contains(filter.Search) ||\n                i.Descricao.Contains(filter.Search)\n            );\n        }\n\n        // Pagina\u00e7\u00e3o\n        var pageSize = 10;\n        var page = await query\n            .Skip((filter.Page - 1) * pageSize)\n            .Take(pageSize)\n            .ToListAsync();\n\n        return Ok(new {\n            Items = page,\n            TotalCount = await query.CountAsync()\n        });\n    }\n}\n</code></pre>"},{"location":"backend/modulos/incidentes/api.html#sql-equivalente","title":"SQL Equivalente","text":"<pre><code>-- Exemplo de consulta com filtros\nDECLARE @search NVARCHAR(100) = '%termo%'\nDECLARE @dataInicio DATETIME = '2024-01-01'\nDECLARE @dataFim DATETIME = '2024-12-31'\n\nSELECT *\nFROM f_incidente\nWHERE \n    (data_abertura BETWEEN @dataInicio AND @dataFim)\n    AND (\n        origem LIKE @search OR\n        categoria LIKE @search OR\n        subcategoria LIKE @search OR\n        descricao LIKE @search\n    )\nORDER BY data_abertura DESC\nOFFSET 0 ROWS\nFETCH NEXT 10 ROWS ONLY\n</code></pre>"},{"location":"backend/modulos/incidentes/api.html#principais-diferencas","title":"Principais Diferen\u00e7as","text":"<ol> <li>Roteamento</li> <li>Django: Definido em urls.py</li> <li> <p>C#: Atributos no controller</p> </li> <li> <p>Autentica\u00e7\u00e3o</p> </li> <li>Django: <code>permission_classes</code></li> <li> <p>C#: Atributo <code>[Authorize]</code></p> </li> <li> <p>Pagina\u00e7\u00e3o</p> </li> <li>Django: Classe customizada de pagina\u00e7\u00e3o</li> <li>C#: Skip/Take manualmente</li> <li> <p>SQL: OFFSET/FETCH</p> </li> <li> <p>Filtros</p> </li> <li>Django: Q objects para queries complexas</li> <li>C#: LINQ</li> <li>SQL: WHERE clauses</li> </ol>"},{"location":"backend/modulos/incidentes/incidentes.html","title":"M\u00f3dulo Incidentes","text":""},{"location":"backend/modulos/incidentes/incidentes.html#visao-geral","title":"Vis\u00e3o Geral","text":"<p>O m\u00f3dulo <code>incidentes</code> gerencia o registro e acompanhamento de incidentes no sistema.</p>"},{"location":"backend/modulos/incidentes/incidentes.html#estrutura-do-modulo","title":"Estrutura do M\u00f3dulo","text":"<pre><code>incidentes/\n\u251c\u2500\u2500 __init__.py\n\u251c\u2500\u2500 models/\n\u2502   \u251c\u2500\u2500 __init__.py\n\u2502   \u2514\u2500\u2500 incidente.py\n\u251c\u2500\u2500 views.py\n\u251c\u2500\u2500 urls.py\n\u2514\u2500\u2500 serializers.py\n</code></pre>"},{"location":"backend/modulos/incidentes/incidentes.html#componentes-principais","title":"Componentes Principais","text":""},{"location":"backend/modulos/incidentes/incidentes.html#modelos","title":"Modelos","text":"<ul> <li>Incidente</li> <li>Tipo</li> <li>Status</li> <li>Descri\u00e7\u00e3o</li> <li>Data/Hora</li> <li>Respons\u00e1vel</li> <li>Item associado</li> </ul>"},{"location":"backend/modulos/incidentes/incidentes.html#views","title":"Views","text":"<ul> <li>CRUD de incidentes</li> <li>Filtros e buscas</li> <li>Relat\u00f3rios</li> </ul>"},{"location":"backend/modulos/incidentes/incidentes.html#api-endpoints","title":"API Endpoints","text":"<ul> <li>GET/POST <code>/api/incidentes/</code></li> <li>GET/PUT/DELETE <code>/api/incidentes/&lt;id&gt;/</code></li> <li>GET <code>/api/incidentes/relatorios/</code></li> </ul>"},{"location":"backend/modulos/incidentes/incidentes.html#funcionalidades","title":"Funcionalidades","text":"<ul> <li>Registro de incidentes</li> <li>Acompanhamento de status</li> <li>Hist\u00f3rico de altera\u00e7\u00f5es</li> <li>Relat\u00f3rios gerenciais</li> </ul>"},{"location":"backend/modulos/incidentes/init.html","title":"Inicializa\u00e7\u00e3o do M\u00f3dulo Incidentes","text":""},{"location":"backend/modulos/incidentes/init.html#arquivos-initpy","title":"Arquivos init.py","text":"<p>Os arquivos <code>__init__.py</code> no Python s\u00e3o similares aos <code>namespace</code> em C#. Eles marcam um diret\u00f3rio como um pacote Python.</p>"},{"location":"backend/modulos/incidentes/init.html#estrutura","title":"Estrutura","text":"<pre><code>incidentes/\n\u251c\u2500\u2500 __init__.py                  # Marca o m\u00f3dulo principal\n\u251c\u2500\u2500 api/\n\u2502   \u251c\u2500\u2500 __init__.py             # Inicializa\u00e7\u00e3o da API\n\u2502   \u251c\u2500\u2500 serializers/\n\u2502   \u2502   \u2514\u2500\u2500 __init__.py         # Exporta serializers\n\u2502   \u2514\u2500\u2500 view/\n\u2502       \u2514\u2500\u2500 __init__.py         # Exporta views\n\u2514\u2500\u2500 models/\n    \u2514\u2500\u2500 __init__.py             # Exporta models\n</code></pre>"},{"location":"backend/modulos/incidentes/init.html#implementacao","title":"Implementa\u00e7\u00e3o","text":""},{"location":"backend/modulos/incidentes/init.html#models-initpy","title":"Models init.py","text":"<pre><code>from .incidente import Incidente\n\n__all__ = ['Incidente']\n</code></pre>"},{"location":"backend/modulos/incidentes/init.html#equivalente-em-c-conceitual","title":"Equivalente em C# (conceitual)","text":"<pre><code>namespace Incidentes.Models\n{\n    public class Incidente { }\n}\n</code></pre>"},{"location":"backend/modulos/incidentes/init.html#registro-do-app","title":"Registro do App","text":""},{"location":"backend/modulos/incidentes/init.html#django-appspy","title":"Django (apps.py)","text":"<pre><code>from django.apps import AppConfig\n\nclass IncidentesConfig(AppConfig):\n    name = 'incidentes'\n</code></pre>"},{"location":"backend/modulos/incidentes/init.html#equivalente-em-c-startupcs","title":"Equivalente em C# (Startup.cs)","text":"<pre><code>public void ConfigureServices(IServiceCollection services)\n{\n    services.AddDbContext&lt;IncidentesContext&gt;();\n    services.AddScoped&lt;IIncidenteService, IncidenteService&gt;();\n}\n</code></pre>"},{"location":"backend/modulos/incidentes/init.html#inicializacao-automatica","title":"Inicializa\u00e7\u00e3o Autom\u00e1tica","text":""},{"location":"backend/modulos/incidentes/init.html#django-settingspy","title":"Django (settings.py)","text":"<pre><code>INSTALLED_APPS = [\n    # ...\n    'incidentes',\n]\n</code></pre>"},{"location":"backend/modulos/incidentes/init.html#c-programcs-ou-startupcs","title":"C# (Program.cs ou Startup.cs)","text":"<pre><code>var builder = WebApplication.CreateBuilder(args);\nbuilder.Services.AddControllers()\n    .AddApplicationPart(typeof(IncidentesController).Assembly);\n</code></pre>"},{"location":"backend/modulos/incidentes/init.html#diferencas-principais","title":"Diferen\u00e7as Principais","text":"<ol> <li>Organiza\u00e7\u00e3o de M\u00f3dulos</li> <li>Python: Usa <code>__init__.py</code> para marcar pacotes</li> <li> <p>C#: Usa namespaces e assembly references</p> </li> <li> <p>Registro de Componentes</p> </li> <li>Django: Lista em INSTALLED_APPS</li> <li> <p>C#: Registro via DI container</p> </li> <li> <p>Importa\u00e7\u00e3o</p> </li> <li>Python: <code>from module import Class</code></li> <li>C#: <code>using Namespace;</code></li> </ol>"},{"location":"backend/modulos/incidentes/migrations.html","title":"Migrations do M\u00f3dulo Incidentes","text":""},{"location":"backend/modulos/incidentes/migrations.html#estrutura-das-migrations","title":"Estrutura das Migrations","text":""},{"location":"backend/modulos/incidentes/migrations.html#django-python","title":"Django (Python)","text":"<pre><code># 0001_initial.py\nclass Migration(migrations.Migration):\n    initial = True\n\n    operations = [\n        migrations.CreateModel(\n            name='Incidente',\n            fields=[\n                ('id', models.BigAutoField(auto_created=True, primary_key=True)),\n                ('categoria', models.CharField(max_length=100)),\n                # ...outros campos...\n            ],\n        ),\n    ]\n</code></pre>"},{"location":"backend/modulos/incidentes/migrations.html#entity-framework-c","title":"Entity Framework (C#)","text":"<pre><code>public partial class InitialCreate : Migration\n{\n    protected override void Up(MigrationBuilder migrationBuilder)\n    {\n        migrationBuilder.CreateTable(\n            name: \"Incidentes\",\n            columns: table =&gt; new\n            {\n                Id = table.Column&lt;int&gt;(nullable: false)\n                    .Annotation(\"SqlServer:Identity\", \"1, 1\"),\n                Categoria = table.Column&lt;string&gt;(maxLength: 100, nullable: false),\n                // ...outros campos...\n            });\n    }\n\n    protected override void Down(MigrationBuilder migrationBuilder)\n    {\n        migrationBuilder.DropTable(name: \"Incidentes\");\n    }\n}\n</code></pre>"},{"location":"backend/modulos/incidentes/migrations.html#sql-puro","title":"SQL Puro","text":"<pre><code>-- V1__Create_Incidente_Table.sql\nCREATE TABLE Incidentes (\n    Id INT IDENTITY(1,1) PRIMARY KEY,\n    Categoria NVARCHAR(100) NOT NULL,\n    -- ...outros campos...\n);\n\n-- V1__Rollback.sql\nDROP TABLE Incidentes;\n</code></pre>"},{"location":"backend/modulos/incidentes/migrations.html#gerenciamento-de-migrations","title":"Gerenciamento de Migrations","text":""},{"location":"backend/modulos/incidentes/migrations.html#django","title":"Django","text":"<pre><code># Criar nova migration\npython manage.py makemigrations incidentes\n\n# Aplicar migrations\npython manage.py migrate incidentes\n\n# Ver SQL que ser\u00e1 executado\npython manage.py sqlmigrate incidentes 0001\n</code></pre>"},{"location":"backend/modulos/incidentes/migrations.html#entity-framework","title":"Entity Framework","text":"<pre><code># Criar migration\nAdd-Migration CreateIncidenteTable -Context IncidenteContext\n\n# Aplicar migration\nUpdate-Database -Context IncidenteContext\n\n# Ver SQL que ser\u00e1 executado\nScript-Migration\n</code></pre>"},{"location":"backend/modulos/incidentes/migrations.html#sql-puro_1","title":"SQL Puro","text":"<ul> <li>Precisa gerenciar manualmente os scripts</li> <li>Usar ferramentas como Flyway ou Liquibase</li> <li>Manter controle de vers\u00e3o dos scripts</li> </ul>"},{"location":"backend/modulos/incidentes/migrations.html#boas-praticas","title":"Boas Pr\u00e1ticas","text":"<ol> <li>Nomear Migrations    ```bash    # Django    python manage.py makemigrations incidentes --name create_incidente_table</li> </ol> <p># EF    Add-Migration CreateIncidenteTable    ```</p> <ol> <li>Dados Iniciais    ```python    # Django - data migration    from django.db import migrations</li> </ol> <p>def criar_dados_iniciais(apps, schema_editor):        Incidente = apps.get_model('incidentes', 'Incidente')        Incidente.objects.create(            categoria='Urgente',            status='Aberto'        )</p> <p>class Migration(migrations.Migration):        dependencies = [            ('incidentes', '0001_initial'),        ]</p> <pre><code>   operations = [\n       migrations.RunPython(criar_dados_iniciais),\n   ]\n</code></pre> <p>```</p> <ol> <li>Revers\u00e3o de Migrations    ```python    # Django    python manage.py migrate incidentes 0001</li> </ol> <p># EF    Update-Database -Migration CreateIncidenteTable    ```</p>"},{"location":"backend/modulos/incidentes/modelo.html","title":"Modelo de Incidentes","text":""},{"location":"backend/modulos/incidentes/modelo.html#implementacao-django","title":"Implementa\u00e7\u00e3o Django","text":"<p>O modelo de incidentes \u00e9 implementado usando o ORM do Django.</p> <pre><code>class Incidente(models.Model):\n    aberto_por = models.CharField(max_length=50)\n    categoria = models.CharField(max_length=100)\n    # ...outros campos...\n\n    class Meta:\n        db_table = \"f_incidente\"\n</code></pre>"},{"location":"backend/modulos/incidentes/modelo.html#equivalente-em-c","title":"Equivalente em C","text":""},{"location":"backend/modulos/incidentes/modelo.html#modelo-em-c-entity-framework","title":"Modelo em C# (Entity Framework)","text":"<pre><code>public class Incidente\n{\n    public int Id { get; set; }\n    public string AbertoPor { get; set; }\n    public string Categoria { get; set; }\n    public string CodigoEquipamento { get; set; }\n    public string CodigoServico { get; set; }\n    public DateTime DataAbertura { get; set; }\n    public DateTime? DataFechamento { get; set; }\n    public DateTime? DataResolucao { get; set; }\n    public TimeSpan Duracao { get; set; }\n    public string Descricao { get; set; }\n    public string Fila { get; set; }\n    public string IncidenteNumero { get; set; }\n    public string Origem { get; set; }\n    public string Status { get; set; }\n    public string Subcategoria { get; set; }\n    public string SubcategoriaDetalhe { get; set; }\n    public string TipoContato { get; set; }\n\n    public DateTime CreatedAt { get; set; }\n    public DateTime UpdatedAt { get; set; }\n}\n</code></pre>"},{"location":"backend/modulos/incidentes/modelo.html#sql-puro","title":"SQL Puro","text":"<pre><code>CREATE TABLE f_incidente (\n    id INT IDENTITY(1,1) PRIMARY KEY,\n    aberto_por NVARCHAR(50) NOT NULL,\n    categoria NVARCHAR(100) NOT NULL,\n    codigo_equipamento NVARCHAR(50) NOT NULL,\n    codigo_servico NVARCHAR(50) NOT NULL,\n    data_abertura DATETIME NOT NULL,\n    data_fechamento DATETIME NULL,\n    data_resolucao DATETIME NULL,\n    duracao TIME NOT NULL,\n    descricao NTEXT NOT NULL,\n    fila NVARCHAR(50) NOT NULL,\n    incidente NVARCHAR(50) NOT NULL,\n    origem NVARCHAR(100) NOT NULL,\n    status NVARCHAR(20) NOT NULL,\n    subcategoria NVARCHAR(100) NOT NULL,\n    subcategoria_detalhe NVARCHAR(200) NOT NULL,\n    tipo_contato NVARCHAR(50) NOT NULL,\n    created_at DATETIME NOT NULL DEFAULT GETDATE(),\n    updated_at DATETIME NOT NULL DEFAULT GETDATE()\n)\n</code></pre>"},{"location":"backend/modulos/incidentes/modelo.html#principais-diferencas","title":"Principais Diferen\u00e7as","text":"<ol> <li>Defini\u00e7\u00e3o de Campo</li> <li>Django: Usa classes do models para definir campos</li> <li>C#/EF: Usa propriedades com DataAnnotations</li> <li> <p>SQL: Defini\u00e7\u00e3o direta dos tipos de dados</p> </li> <li> <p>Nomenclatura</p> </li> <li>Django: snake_case (padr\u00e3o Python)</li> <li>C#: PascalCase</li> <li> <p>SQL: Geralmente snake_case</p> </li> <li> <p>Timestamps Autom\u00e1ticos</p> </li> <li>Django: <code>auto_now_add</code> e <code>auto_now</code></li> <li>C#/EF: Precisa implementar manualmente</li> <li> <p>SQL: Usa DEFAULT GETDATE()</p> </li> <li> <p>Campos Nulos</p> </li> <li>Django: <code>null=True, blank=True</code></li> <li>C#: Tipo nullable (<code>DateTime?</code>)</li> <li>SQL: NULL/NOT NULL</li> </ol>"},{"location":"backend/modulos/incidentes/serializacao.html","title":"Serializa\u00e7\u00e3o de Incidentes","text":""},{"location":"backend/modulos/incidentes/serializacao.html#implementacao-django","title":"Implementa\u00e7\u00e3o Django","text":"<p>Usamos serializers do DRF para converter modelos em JSON.</p> <pre><code>class IncidenteSerializer(serializers.ModelSerializer):\n    data_abertura = serializers.DateTimeField(format=\"%Y-%m-%d %H:%M:%S\")\n\n    class Meta:\n        model = Incidente\n        fields = \"__all__\"\n</code></pre>"},{"location":"backend/modulos/incidentes/serializacao.html#equivalente-em-c","title":"Equivalente em C","text":""},{"location":"backend/modulos/incidentes/serializacao.html#dto","title":"DTO","text":"<pre><code>public class IncidenteDTO\n{\n    public string AbertoPor { get; set; }\n    public string Categoria { get; set; }\n    public string CodigoEquipamento { get; set; }\n    public string CodigoServico { get; set; }\n\n    [JsonConverter(typeof(CustomDateTimeConverter))]\n    public DateTime DataAbertura { get; set; }\n\n    [JsonConverter(typeof(CustomDateTimeConverter))]\n    public DateTime? DataFechamento { get; set; }\n\n    // ... outros campos ...\n}\n\npublic class CustomDateTimeConverter : JsonConverter&lt;DateTime&gt;\n{\n    public override DateTime Read(ref Utf8JsonReader reader, Type typeToConvert, JsonSerializerOptions options)\n    {\n        return DateTime.Parse(reader.GetString());\n    }\n\n    public override void Write(Utf8JsonWriter writer, DateTime value, JsonSerializerOptions options)\n    {\n        writer.WriteStringValue(value.ToString(\"yyyy-MM-dd HH:mm:ss\"));\n    }\n}\n</code></pre>"},{"location":"backend/modulos/incidentes/serializacao.html#automapper-opcional","title":"AutoMapper (opcional)","text":"<pre><code>public class IncidenteMappingProfile : Profile\n{\n    public IncidenteMappingProfile()\n    {\n        CreateMap&lt;Incidente, IncidenteDTO&gt;();\n        CreateMap&lt;IncidenteDTO, Incidente&gt;();\n    }\n}\n</code></pre>"},{"location":"backend/modulos/incidentes/serializacao.html#principais-diferencas","title":"Principais Diferen\u00e7as","text":"<ol> <li>Serializa\u00e7\u00e3o</li> <li>Django: Autom\u00e1tica via ModelSerializer</li> <li> <p>C#: DTOs + JsonConverter ou AutoMapper</p> </li> <li> <p>Formata\u00e7\u00e3o de Data</p> </li> <li>Django: Definido no serializer</li> <li> <p>C#: JsonConverter customizado</p> </li> <li> <p>Campos</p> </li> <li>Django: Todos os campos via <code>fields = \"__all__\"</code></li> <li> <p>C#: Precisa definir explicitamente</p> </li> <li> <p>Valida\u00e7\u00e3o</p> </li> <li>Django: Integrada no serializer</li> <li>C#: DataAnnotations ou FluentValidation</li> </ol>"},{"location":"backend/modulos/inventario/init.html","title":"Inicializa\u00e7\u00e3o do M\u00f3dulo de Invent\u00e1rio","text":"<p>O m\u00f3dulo de invent\u00e1rio utiliza um arquivo <code>__init__.py</code> para exportar seus modelos e componentes principais, facilitando a importa\u00e7\u00e3o em outras partes do sistema.</p>"},{"location":"backend/modulos/inventario/init.html#estrutura-do-initpy","title":"Estrutura do init.py","text":""},{"location":"backend/modulos/inventario/init.html#models","title":"Models","text":"<p>O arquivo <code>models/__init__.py</code> exporta os seguintes modelos:</p> <pre><code>from .cliente import Cliente\nfrom .equipamento import Equipamento\nfrom .servico import Servico\nfrom .site import Site\n</code></pre>"},{"location":"backend/modulos/inventario/init.html#views","title":"Views","text":"<p>O arquivo <code>api/view/__init__.py</code> exporta as views:</p> <pre><code>from .cliente import ClienteListCreate, ClienteUpdate\nfrom .equipamento import EquipamentoListCreate, EquipamentoUpdate\nfrom .servico import ServicoListCreate, ServicoUpdate\nfrom .site import SiteListCreate, SiteUpdate\n</code></pre>"},{"location":"backend/modulos/inventario/init.html#serializers","title":"Serializers","text":"<p>O arquivo <code>api/serializers/__init__.py</code> exporta os serializers:</p> <pre><code>from .cliente_serializer import ClienteSerializer\nfrom .equipamento_serializer import EquipamentoSerializer\nfrom .servico_serializer import ServicoSerializer\nfrom .site_serializer import SiteSerializer\n</code></pre>"},{"location":"backend/modulos/inventario/init.html#uso","title":"Uso","text":"<p>Para importar os componentes em outras partes do projeto, utilize:</p> <pre><code>from inventario.models import Cliente, Equipamento, Servico, Site\nfrom inventario.api.view import ClienteListCreate, ClienteUpdate\nfrom inventario.api.serializers import ClienteSerializer\n</code></pre> <p>Esta estrutura de inicializa\u00e7\u00e3o permite uma organiza\u00e7\u00e3o clara e facilita a manuten\u00e7\u00e3o do c\u00f3digo.</p>"},{"location":"backend/modulos/inventario/inventario.html","title":"M\u00f3dulo Invent\u00e1rio","text":""},{"location":"backend/modulos/inventario/inventario.html#visao-geral","title":"Vis\u00e3o Geral","text":"<p>O m\u00f3dulo <code>inventario</code> \u00e9 respons\u00e1vel pelo gerenciamento do invent\u00e1rio de clientes, sites, equipamentos e servi\u00e7os.</p>"},{"location":"backend/modulos/inventario/inventario.html#estrutura-do-modulo","title":"Estrutura do M\u00f3dulo","text":"<pre><code>inventario/\n\u251c\u2500\u2500 __init__.py\n\u251c\u2500\u2500 models/\n\u2502   \u251c\u2500\u2500 __init__.py\n\u2502   \u251c\u2500\u2500 cliente.py\n\u2502   \u251c\u2500\u2500 site.py\n\u2502   \u251c\u2500\u2500 equipamento.py\n\u2502   \u2514\u2500\u2500 servico.py\n\u251c\u2500\u2500 api/\n\u2502   \u251c\u2500\u2500 __init__.py\n\u2502   \u251c\u2500\u2500 views.py\n\u2502   \u251c\u2500\u2500 urls.py\n\u2502   \u2514\u2500\u2500 serializers.py\n\u2514\u2500\u2500 migrations/\n</code></pre>"},{"location":"backend/modulos/inventario/inventario.html#componentes-principais","title":"Componentes Principais","text":""},{"location":"backend/modulos/inventario/inventario.html#modelos","title":"Modelos","text":"<ol> <li>Cliente</li> <li>Vantive ID</li> <li>Raz\u00e3o Social</li> <li>C\u00f3digo</li> <li>Status</li> <li> <p>CNPJ</p> </li> <li> <p>Site</p> </li> <li>Cliente (FK)</li> <li>CEP</li> <li>N\u00famero</li> <li>Complemento</li> <li>C\u00f3digo Sistema Cliente</li> <li>C\u00f3digo Vivo</li> <li>Status</li> <li>Tipo Site</li> <li> <p>Tipo Neg\u00f3cio</p> </li> <li> <p>Equipamento</p> </li> <li>Site (FK)</li> <li>C\u00f3digo</li> <li>Status</li> <li>Designador</li> <li> <p>Tipo</p> </li> <li> <p>Servi\u00e7o</p> </li> <li>Equipamento (FK)</li> <li>C\u00f3digo</li> <li>Status</li> <li>Designador</li> <li>Tipo</li> </ol>"},{"location":"backend/modulos/inventario/inventario.html#views","title":"Views","text":"<ol> <li>ClienteListCreate/Update</li> <li>Listagem paginada</li> <li>Filtros por raz\u00e3o social, CNPJ, c\u00f3digo</li> <li> <p>CRUD completo</p> </li> <li> <p>SiteListCreate/Update</p> </li> <li>Listagem por cliente</li> <li>Filtros por c\u00f3digo e tipo</li> <li> <p>CRUD completo</p> </li> <li> <p>EquipamentoListCreate/Update</p> </li> <li>Listagem hier\u00e1rquica</li> <li>Filtros por site</li> <li> <p>CRUD completo</p> </li> <li> <p>ServicoListCreate/Update</p> </li> <li>Listagem hier\u00e1rquica</li> <li>Filtros por equipamento</li> <li>CRUD completo</li> </ol>"},{"location":"backend/modulos/inventario/inventario.html#serializers","title":"Serializers","text":"<ol> <li>ClienteSerializer</li> <li>Serializa\u00e7\u00e3o b\u00e1sica do modelo Cliente</li> <li> <p>Todos os campos s\u00e3o expostos</p> </li> <li> <p>SiteSerializer</p> </li> <li>Serializa\u00e7\u00e3o b\u00e1sica do modelo Site</li> <li> <p>Inclui valida\u00e7\u00e3o de relacionamentos</p> </li> <li> <p>EquipamentoSerializer</p> </li> <li>Serializa\u00e7\u00e3o com dados do Site relacionado</li> <li> <p>Campo calculado site_codigo_vivo</p> </li> <li> <p>ServicoSerializer</p> </li> <li>Serializa\u00e7\u00e3o com dados do Equipamento e Site</li> <li>Campos calculados para c\u00f3digos relacionados</li> </ol>"},{"location":"backend/modulos/inventario/inventario.html#migrations","title":"Migrations","text":"<ul> <li>Migration inicial (0001_initial)</li> <li>Cria\u00e7\u00e3o das tabelas principais</li> <li>Defini\u00e7\u00e3o de relacionamentos</li> <li>Configura\u00e7\u00e3o de constraints</li> <li>\u00cdndices autom\u00e1ticos</li> </ul>"},{"location":"backend/modulos/inventario/inventario.html#apis-disponiveis","title":"APIs Dispon\u00edveis","text":"<ul> <li>Clientes</li> <li>GET/POST <code>/api/inventario/clientes/</code></li> <li> <p>GET/PUT/PATCH/DELETE <code>/api/inventario/clientes/&lt;id&gt;/</code></p> </li> <li> <p>Sites</p> </li> <li>GET/POST <code>/api/inventario/sites/</code></li> <li> <p>GET/PUT/PATCH/DELETE <code>/api/inventario/sites/&lt;id&gt;/</code></p> </li> <li> <p>Equipamentos</p> </li> <li>GET/POST <code>/api/inventario/equipamentos/</code></li> <li> <p>GET/PUT/PATCH/DELETE <code>/api/inventario/equipamentos/&lt;id&gt;/</code></p> </li> <li> <p>Servi\u00e7os</p> </li> <li>GET/POST <code>/api/inventario/servicos/</code></li> <li>GET/PUT/PATCH/DELETE <code>/api/inventario/servicos/&lt;id&gt;/</code></li> </ul>"},{"location":"backend/modulos/inventario/inventario.html#funcionalidades","title":"Funcionalidades","text":"<ul> <li>Cadastro e gest\u00e3o de clientes</li> <li>Gerenciamento de sites por cliente</li> <li>Controle de equipamentos por site</li> <li>Gest\u00e3o de servi\u00e7os por equipamento</li> <li>Hist\u00f3rico de altera\u00e7\u00f5es</li> <li>Consultas hier\u00e1rquicas</li> <li>Filtros avan\u00e7ados por status e tipo</li> </ul>"},{"location":"backend/modulos/inventario/migrations.html","title":"Migrations do M\u00f3dulo Invent\u00e1rio","text":""},{"location":"backend/modulos/inventario/migrations.html#migration-inicial-0001_initial","title":"Migration Inicial (0001_initial)","text":"<p>A migration inicial cria a estrutura base do banco de dados para o m\u00f3dulo de invent\u00e1rio.</p>"},{"location":"backend/modulos/inventario/migrations.html#estrutura-criada","title":"Estrutura Criada","text":"<ol> <li>Tabela Cliente (d_cliente)</li> </ol> <pre><code>CREATE TABLE d_cliente (\n    id BIGINT PRIMARY KEY AUTO_INCREMENT,\n    vantive_id INTEGER NOT NULL,\n    razao_social VARCHAR(255) NOT NULL,\n    codigo VARCHAR(30) NOT NULL,\n    status BOOLEAN NOT NULL,\n    cnpj VARCHAR(18) NOT NULL\n);\n</code></pre> <ol> <li>Tabela Site (d_site)</li> </ol> <pre><code>CREATE TABLE d_site (\n    id BIGINT PRIMARY KEY AUTO_INCREMENT,\n    cep VARCHAR(10) NOT NULL,\n    numero VARCHAR(10) NOT NULL,\n    complemento VARCHAR(255) NULL,\n    codigo_sys_cliente VARCHAR(30) NOT NULL,\n    codigo_vivo VARCHAR(30) NOT NULL,\n    status BOOLEAN NOT NULL,\n    tipo_site VARCHAR(50) NOT NULL,\n    tipo_negocio VARCHAR(50) NOT NULL,\n    cliente_id BIGINT NOT NULL,\n    FOREIGN KEY (cliente_id) REFERENCES d_cliente(id)\n);\n</code></pre> <ol> <li>Tabela Equipamento (d_equipamento)</li> </ol> <pre><code>CREATE TABLE d_equipamento (\n    id BIGINT PRIMARY KEY AUTO_INCREMENT,\n    codigo VARCHAR(30) NOT NULL,\n    status BOOLEAN NOT NULL,\n    designador VARCHAR(50) NOT NULL,\n    tipo VARCHAR(50) NOT NULL,\n    site_id BIGINT NOT NULL,\n    FOREIGN KEY (site_id) REFERENCES d_site(id)\n);\n</code></pre> <ol> <li>Tabela Servi\u00e7o (d_servico)</li> </ol> <pre><code>CREATE TABLE d_servico (\n    id BIGINT PRIMARY KEY AUTO_INCREMENT,\n    codigo VARCHAR(30) NOT NULL,\n    status BOOLEAN NOT NULL,\n    designador VARCHAR(50) NOT NULL,\n    tipo VARCHAR(50) NOT NULL,\n    equipamento_id BIGINT NOT NULL,\n    FOREIGN KEY (equipamento_id) REFERENCES d_equipamento(id)\n);\n</code></pre> <ol> <li>Tabela Grupo Econ\u00f4mico (d_grupo_economico)</li> </ol> <pre><code>CREATE TABLE d_grupo_economico (\n    id BIGINT PRIMARY KEY AUTO_INCREMENT,\n    nome VARCHAR(255) NOT NULL,\n    status BOOLEAN NOT NULL\n);\n</code></pre>"},{"location":"backend/modulos/inventario/migrations.html#equivalente-c-entity-framework","title":"Equivalente C# (Entity Framework)","text":"<pre><code>public class InventarioDbContext : DbContext\n{\n    protected override void OnModelCreating(ModelBuilder modelBuilder)\n    {\n        modelBuilder.Entity&lt;Cliente&gt;(entity =&gt;\n        {\n            entity.ToTable(\"d_cliente\");\n            entity.HasKey(e =&gt; e.Id);\n            entity.Property(e =&gt; e.VantiveId).IsRequired();\n            entity.Property(e =&gt; e.RazaoSocial).HasMaxLength(255).IsRequired();\n            entity.Property(e =&gt; e.Codigo).HasMaxLength(30).IsRequired();\n            entity.Property(e =&gt; e.Status).IsRequired();\n            entity.Property(e =&gt; e.Cnpj).HasMaxLength(18).IsRequired();\n        });\n\n        modelBuilder.Entity&lt;Site&gt;(entity =&gt;\n        {\n            entity.ToTable(\"d_site\");\n            entity.HasKey(e =&gt; e.Id);\n            entity.Property(e =&gt; e.Cep).HasMaxLength(10).IsRequired();\n            entity.Property(e =&gt; e.Numero).HasMaxLength(10).IsRequired();\n            entity.Property(e =&gt; e.Complemento).HasMaxLength(255);\n            entity.Property(e =&gt; e.CodigoSysCliente).HasMaxLength(30).IsRequired();\n            entity.Property(e =&gt; e.CodigoVivo).HasMaxLength(30).IsRequired();\n            entity.Property(e =&gt; e.Status).IsRequired();\n            entity.Property(e =&gt; e.TipoSite).HasMaxLength(50).IsRequired();\n            entity.Property(e =&gt; e.TipoNegocio).HasMaxLength(50).IsRequired();\n\n            entity.HasOne(e =&gt; e.Cliente)\n                  .WithMany(c =&gt; c.Sites)\n                  .HasForeignKey(e =&gt; e.ClienteId)\n                  .OnDelete(DeleteBehavior.Cascade);\n        });\n\n        modelBuilder.Entity&lt;GrupoEconomico&gt;(entity =&gt;\n        {\n            entity.ToTable(\"d_grupo_economico\");\n            entity.HasKey(e =&gt; e.Id);\n            entity.Property(e =&gt; e.Nome).HasMaxLength(255).IsRequired();\n            entity.Property(e =&gt; e.Status).IsRequired();\n        });\n\n        // Configura\u00e7\u00f5es similares para Equipamento e Servi\u00e7o\n    }\n}\n</code></pre>"},{"location":"backend/modulos/inventario/migrations.html#processo-de-aplicacao","title":"Processo de Aplica\u00e7\u00e3o","text":"<ol> <li>Gera\u00e7\u00e3o da Migration</li> </ol> <pre><code>python manage.py makemigrations inventario\n</code></pre> <ol> <li>Aplica\u00e7\u00e3o da Migration</li> </ol> <pre><code>python manage.py migrate inventario\n</code></pre>"},{"location":"backend/modulos/inventario/migrations.html#reversao-rollback","title":"Revers\u00e3o (Rollback)","text":"<p>Para reverter esta migration:</p> <pre><code>python manage.py migrate inventario zero\n</code></pre>"},{"location":"backend/modulos/inventario/migrations.html#dependencias","title":"Depend\u00eancias","text":"<p>Esta migration \u00e9 independente e n\u00e3o possui depend\u00eancias de outras migrations.</p>"},{"location":"backend/modulos/inventario/migrations.html#consideracoes","title":"Considera\u00e7\u00f5es","text":"<ol> <li>Cascading Deletes: Todas as foreign keys est\u00e3o configuradas com CASCADE</li> <li>Campos Obrigat\u00f3rios: Apenas o campo 'complemento' do Site permite NULL</li> <li>\u00cdndices: Criados automaticamente para as chaves prim\u00e1rias e foreign keys</li> <li>Conven\u00e7\u00e3o de Nomes: Prefixo 'd_' usado nas tabelas para indicar dom\u00ednio</li> </ol>"},{"location":"backend/modulos/inventario/models.html","title":"Models do M\u00f3dulo Invent\u00e1rio","text":""},{"location":"backend/modulos/inventario/models.html#visao-geral","title":"Vis\u00e3o Geral","text":"<p>O m\u00f3dulo de invent\u00e1rio \u00e9 composto por 5 models principais que representam a estrutura hier\u00e1rquica do invent\u00e1rio: - Grupo Econ\u00f4mico - Cliente - Site - Equipamento - Servi\u00e7o</p>"},{"location":"backend/modulos/inventario/models.html#model-grupo-economico","title":"Model Grupo Econ\u00f4mico","text":"<p>Representa os grupos econ\u00f4micos que agrupam clientes no sistema.</p>"},{"location":"backend/modulos/inventario/models.html#definicao-django","title":"Defini\u00e7\u00e3o Django","text":"<pre><code>class GrupoEconomico(models.Model):\n    nome = models.CharField(max_length=255)\n    codigo = models.CharField(max_length=30)\n    status = models.BooleanField()\n\n    class Meta:\n        db_table = 'd_grupo_economico'\n</code></pre>"},{"location":"backend/modulos/inventario/models.html#sql-equivalente","title":"SQL Equivalente","text":"<pre><code>CREATE TABLE d_grupo_economico (\n    id BIGINT PRIMARY KEY AUTO_INCREMENT,\n    nome VARCHAR(255) NOT NULL,\n    codigo VARCHAR(30) NOT NULL,\n    status BOOLEAN NOT NULL\n);\n</code></pre>"},{"location":"backend/modulos/inventario/models.html#c-equivalente","title":"C# Equivalente","text":"<pre><code>public class GrupoEconomico\n{\n    public long Id { get; set; }\n    public string Nome { get; set; }\n    public string Codigo { get; set; }\n    public bool Status { get; set; }\n}\n</code></pre>"},{"location":"backend/modulos/inventario/models.html#model-cliente","title":"Model Cliente","text":"<p>Representa os clientes no sistema.</p>"},{"location":"backend/modulos/inventario/models.html#definicao-django_1","title":"Defini\u00e7\u00e3o Django","text":"<pre><code>class Cliente(models.Model):\n    grupo_economico = models.ForeignKey(GrupoEconomico, on_delete=models.CASCADE)\n    vantive_id = models.IntegerField()\n    razao_social = models.CharField(max_length=255)\n    codigo = models.CharField(max_length=30)\n    status = models.BooleanField()\n    cnpj = models.CharField(max_length=18)\n\n    class Meta:\n        db_table = 'd_cliente'\n</code></pre>"},{"location":"backend/modulos/inventario/models.html#sql-equivalente_1","title":"SQL Equivalente","text":"<pre><code>CREATE TABLE d_cliente (\n    id BIGINT PRIMARY KEY AUTO_INCREMENT,\n    grupo_economico_id BIGINT NOT NULL,\n    vantive_id INT NOT NULL,\n    razao_social VARCHAR(255) NOT NULL,\n    codigo VARCHAR(30) NOT NULL,\n    status BOOLEAN NOT NULL,\n    cnpj VARCHAR(18) NOT NULL,\n    FOREIGN KEY (grupo_economico_id) REFERENCES d_grupo_economico(id)\n);\n</code></pre>"},{"location":"backend/modulos/inventario/models.html#c-equivalente_1","title":"C# Equivalente","text":"<pre><code>public class Cliente\n{\n    public long Id { get; set; }\n    public long GrupoEconomicoId { get; set; }\n    public GrupoEconomico GrupoEconomico { get; set; }\n    public int VantiveId { get; set; }\n    public string RazaoSocial { get; set; }\n    public string Codigo { get; set; }\n    public bool Status { get; set; }\n    public string Cnpj { get; set; }\n}\n</code></pre>"},{"location":"backend/modulos/inventario/models.html#model-site","title":"Model Site","text":"<p>Representa os locais f\u00edsicos vinculados a um cliente.</p>"},{"location":"backend/modulos/inventario/models.html#definicao-django_2","title":"Defini\u00e7\u00e3o Django","text":"<pre><code>class Site(models.Model):\n    cliente = models.ForeignKey(Cliente, on_delete=models.CASCADE)\n    cep = models.CharField(max_length=10)\n    numero = models.CharField(max_length=10)\n    complemento = models.CharField(max_length=255, null=True, blank=True)\n    codigo_sys_cliente = models.CharField(max_length=30)\n    codigo_vivo = models.CharField(max_length=30)\n    status = models.BooleanField()\n    tipo_site = models.CharField(max_length=50)\n    tipo_negocio = models.CharField(max_length=50)\n\n    class Meta:\n        db_table = 'd_site'\n</code></pre>"},{"location":"backend/modulos/inventario/models.html#sql-equivalente_2","title":"SQL Equivalente","text":"<pre><code>CREATE TABLE d_site (\n    id BIGINT PRIMARY KEY AUTO_INCREMENT,\n    cliente_id BIGINT NOT NULL,\n    cep VARCHAR(10) NOT NULL,\n    numero VARCHAR(10) NOT NULL,\n    complemento VARCHAR(255),\n    codigo_sys_cliente VARCHAR(30) NOT NULL,\n    codigo_vivo VARCHAR(30) NOT NULL,\n    status BOOLEAN NOT NULL,\n    tipo_site VARCHAR(50) NOT NULL,\n    tipo_negocio VARCHAR(50) NOT NULL,\n    FOREIGN KEY (cliente_id) REFERENCES d_cliente(id)\n);\n</code></pre>"},{"location":"backend/modulos/inventario/models.html#c-equivalente_2","title":"C# Equivalente","text":"<pre><code>public class Site\n{\n    public long Id { get; set; }\n    public long ClienteId { get; set; }\n    public Cliente Cliente { get; set; }\n    public string Cep { get; set; }\n    public string Numero { get; set; }\n    public string? Complemento { get; set; }\n    public string CodigoSysCliente { get; set; }\n    public string CodigoVivo { get; set; }\n    public bool Status { get; set; }\n    public string TipoSite { get; set; }\n    public string TipoNegocio { get; set; }\n}\n</code></pre>"},{"location":"backend/modulos/inventario/models.html#model-equipamento","title":"Model Equipamento","text":"<p>Representa os equipamentos instalados em um site.</p>"},{"location":"backend/modulos/inventario/models.html#definicao-django_3","title":"Defini\u00e7\u00e3o Django","text":"<pre><code>class Equipamento(models.Model):\n    site = models.ForeignKey(Site, on_delete=models.CASCADE)\n    codigo = models.CharField(max_length=30)\n    status = models.BooleanField()\n    designador = models.CharField(max_length=50)\n    tipo = models.CharField(max_length=50)\n\n    class Meta:\n        db_table = \"d_equipamento\"\n</code></pre>"},{"location":"backend/modulos/inventario/models.html#sql-equivalente_3","title":"SQL Equivalente","text":"<pre><code>CREATE TABLE d_equipamento (\n    id BIGINT PRIMARY KEY AUTO_INCREMENT,\n    site_id BIGINT NOT NULL,\n    codigo VARCHAR(30) NOT NULL,\n    status BOOLEAN NOT NULL,\n    designador VARCHAR(50) NOT NULL,\n    tipo VARCHAR(50) NOT NULL,\n    FOREIGN KEY (site_id) REFERENCES d_site(id)\n);\n</code></pre>"},{"location":"backend/modulos/inventario/models.html#c-equivalente_3","title":"C# Equivalente","text":"<pre><code>public class Equipamento\n{\n    public long Id { get; set; }\n    public long SiteId { get; set; }\n    public Site Site { get; set; }\n    public string Codigo { get; set; }\n    public bool Status { get; set; }\n    public string Designador { get; set; }\n    public string Tipo { get; set; }\n}\n</code></pre>"},{"location":"backend/modulos/inventario/models.html#model-servico","title":"Model Servi\u00e7o","text":"<p>Representa os servi\u00e7os associados a um equipamento.</p>"},{"location":"backend/modulos/inventario/models.html#definicao-django_4","title":"Defini\u00e7\u00e3o Django","text":"<pre><code>class Servico(models.Model):\n    equipamento = models.ForeignKey(Equipamento, on_delete=models.CASCADE)\n    codigo = models.CharField(max_length=30)\n    status = models.BooleanField()\n    designador = models.CharField(max_length=50)\n    tipo = models.CharField(max_length=50)\n\n    class Meta:\n        db_table = \"d_servico\"\n</code></pre>"},{"location":"backend/modulos/inventario/models.html#sql-equivalente_4","title":"SQL Equivalente","text":"<pre><code>CREATE TABLE d_servico (\n    id BIGINT PRIMARY KEY AUTO_INCREMENT,\n    equipamento_id BIGINT NOT NULL,\n    codigo VARCHAR(30) NOT NULL,\n    status BOOLEAN NOT NULL,\n    designador VARCHAR(50) NOT NULL,\n    tipo VARCHAR(50) NOT NULL,\n    FOREIGN KEY (equipamento_id) REFERENCES d_equipamento(id)\n);\n</code></pre>"},{"location":"backend/modulos/inventario/models.html#c-equivalente_4","title":"C# Equivalente","text":"<pre><code>public class Servico\n{\n    public long Id { get; set; }\n    public long EquipamentoId { get; set; }\n    public Equipamento Equipamento { get; set; }\n    public string Codigo { get; set; }\n    public bool Status { get; set; }\n    public string Designador { get; set; }\n    public string Tipo { get; set; }\n}\n</code></pre>"},{"location":"backend/modulos/inventario/models.html#relacionamentos","title":"Relacionamentos","text":"<p>A estrutura do invent\u00e1rio segue uma hierarquia onde:</p> <ol> <li>Um Grupo Econ\u00f4mico pode ter v\u00e1rios Clientes</li> <li>Um Cliente pode ter v\u00e1rios Sites</li> <li>Um Site pode ter v\u00e1rios Equipamentos</li> <li>Um Equipamento pode ter v\u00e1rios Servi\u00e7os</li> </ol> <p>Todos os relacionamentos s\u00e3o do tipo CASCADE, significando que ao deletar um registro pai, todos os registros filhos ser\u00e3o automaticamente removidos.</p>"},{"location":"backend/modulos/inventario/serializers.html","title":"Serializers do M\u00f3dulo Invent\u00e1rio","text":""},{"location":"backend/modulos/inventario/serializers.html#clienteserializer","title":"ClienteSerializer","text":"<p>Respons\u00e1vel pela serializa\u00e7\u00e3o do modelo Cliente.</p> <pre><code>class ClienteSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = Cliente\n        fields = \"__all__\"\n</code></pre>"},{"location":"backend/modulos/inventario/serializers.html#equivalente-c","title":"Equivalente C","text":"<pre><code>public class ClienteDto\n{\n    public long Id { get; set; }\n    public int VantiveId { get; set; }\n    public string RazaoSocial { get; set; }\n    public string Codigo { get; set; }\n    public bool Status { get; set; }\n    public string Cnpj { get; set; }\n}\n\npublic class ClienteProfile : Profile\n{\n    public ClienteProfile()\n    {\n        CreateMap&lt;Cliente, ClienteDto&gt;();\n        CreateMap&lt;ClienteDto, Cliente&gt;();\n    }\n}\n</code></pre>"},{"location":"backend/modulos/inventario/serializers.html#siteserializer","title":"SiteSerializer","text":"<p>Respons\u00e1vel pela serializa\u00e7\u00e3o do modelo Site.</p> <pre><code>class SiteSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = Site\n        fields = \"__all__\"\n</code></pre>"},{"location":"backend/modulos/inventario/serializers.html#equivalente-c_1","title":"Equivalente C","text":"<pre><code>public class SiteDto\n{\n    public long Id { get; set; }\n    public long ClienteId { get; set; }\n    public string Cep { get; set; }\n    public string Numero { get; set; }\n    public string Complemento { get; set; }\n    public string CodigoSysCliente { get; set; }\n    public string CodigoVivo { get; set; }\n    public bool Status { get; set; }\n    public string TipoSite { get; set; }\n    public string TipoNegocio { get; set; }\n}\n\npublic class SiteProfile : Profile\n{\n    public SiteProfile()\n    {\n        CreateMap&lt;Site, SiteDto&gt;();\n        CreateMap&lt;SiteDto, Site&gt;();\n    }\n}\n</code></pre>"},{"location":"backend/modulos/inventario/serializers.html#equipamentoserializer","title":"EquipamentoSerializer","text":"<p>Respons\u00e1vel pela serializa\u00e7\u00e3o do modelo Equipamento, incluindo dados relacionados do Site.</p> <pre><code>class EquipamentoSerializer(serializers.ModelSerializer):\n    site_codigo_vivo = serializers.CharField(\n        source=\"site.codigo_vivo\", \n        read_only=True\n    )\n\n    class Meta:\n        model = Equipamento\n        fields = [\n            \"id\", \"site\", \"codigo\", \"status\",\n            \"designador\", \"tipo\", \"site_codigo_vivo\"\n        ]\n</code></pre>"},{"location":"backend/modulos/inventario/serializers.html#equivalente-c_2","title":"Equivalente C","text":"<pre><code>public class EquipamentoDto\n{\n    public long Id { get; set; }\n    public long SiteId { get; set; }\n    public string Codigo { get; set; }\n    public bool Status { get; set; }\n    public string Designador { get; set; }\n    public string Tipo { get; set; }\n    public string SiteCodigoVivo { get; set; }\n}\n\npublic class EquipamentoProfile : Profile\n{\n    public EquipamentoProfile()\n    {\n        CreateMap&lt;Equipamento, EquipamentoDto&gt;()\n            .ForMember(dest =&gt; dest.SiteCodigoVivo, \n                      opt =&gt; opt.MapFrom(src =&gt; src.Site.CodigoVivo));\n    }\n}\n</code></pre>"},{"location":"backend/modulos/inventario/serializers.html#servicoserializer","title":"ServicoSerializer","text":"<p>Respons\u00e1vel pela serializa\u00e7\u00e3o do modelo Servi\u00e7o, incluindo dados relacionados do Equipamento e Site.</p> <pre><code>class ServicoSerializer(serializers.ModelSerializer):\n    equipamento_codigo = serializers.CharField(\n        source=\"equipamento.codigo\",\n        read_only=True\n    )\n    site_codigo_vivo = serializers.CharField(\n        source=\"equipamento.site.codigo_vivo\",\n        read_only=True\n    )\n\n    class Meta:\n        model = Servico\n        fields = [\n            \"id\", \"equipamento\", \"codigo\", \"status\",\n            \"designador\", \"tipo\", \"equipamento_codigo\",\n            \"site_codigo_vivo\"\n        ]\n</code></pre>"},{"location":"backend/modulos/inventario/serializers.html#equivalente-c_3","title":"Equivalente C","text":"<pre><code>public class ServicoDto\n{\n    public long Id { get; set; }\n    public long EquipamentoId { get; set; }\n    public string Codigo { get; set; }\n    public bool Status { get; set; }\n    public string Designador { get; set; }\n    public string Tipo { get; set; }\n    public string EquipamentoCodigo { get; set; }\n    public string SiteCodigoVivo { get; set; }\n}\n\npublic class ServicoProfile : Profile\n{\n    public ServicoProfile()\n    {\n        CreateMap&lt;Servico, ServicoDto&gt;()\n            .ForMember(dest =&gt; dest.EquipamentoCodigo, \n                      opt =&gt; opt.MapFrom(src =&gt; src.Equipamento.Codigo))\n            .ForMember(dest =&gt; dest.SiteCodigoVivo, \n                      opt =&gt; opt.MapFrom(src =&gt; src.Equipamento.Site.CodigoVivo));\n    }\n}\n</code></pre>"},{"location":"backend/modulos/inventario/serializers.html#caracteristicas-principais","title":"Caracter\u00edsticas Principais","text":"<ol> <li>Serializa\u00e7\u00e3o Autom\u00e1tica</li> <li>Uso do ModelSerializer para mapeamento autom\u00e1tico</li> <li> <p>Campos relacionados s\u00e3o inclu\u00eddos quando necess\u00e1rio</p> </li> <li> <p>Campos Somente Leitura</p> </li> <li>Campos calculados s\u00e3o marcados como read_only</li> <li> <p>Dados relacionados s\u00e3o expostos de forma segura</p> </li> <li> <p>Valida\u00e7\u00e3o Integrada</p> </li> <li>Valida\u00e7\u00e3o autom\u00e1tica baseada no modelo</li> <li> <p>Relacionamentos s\u00e3o validados automaticamente</p> </li> <li> <p>Aninhamento de Dados</p> </li> <li>Acesso a dados de modelos relacionados</li> <li>Campos calculados baseados em relacionamentos</li> </ol>"},{"location":"backend/modulos/inventario/views.html","title":"Views do M\u00f3dulo Invent\u00e1rio","text":""},{"location":"backend/modulos/inventario/views.html#cliente-views","title":"Cliente Views","text":""},{"location":"backend/modulos/inventario/views.html#clientelistcreate","title":"ClienteListCreate","text":"<p>Endpoint para listar e criar clientes.</p>"},{"location":"backend/modulos/inventario/views.html#get-apiinventarioclientes","title":"GET /api/inventario/clientes/","text":"<ul> <li>Permiss\u00f5es: Requer autentica\u00e7\u00e3o</li> <li>Filtros:</li> <li>razao_social</li> <li>cnpj</li> <li>vantive_id</li> <li>codigo</li> <li>status</li> </ul>"},{"location":"backend/modulos/inventario/views.html#exemplo-sql-equivalente","title":"Exemplo SQL Equivalente","text":"<pre><code>SELECT * FROM d_cliente \nWHERE razao_social LIKE %?% \n  AND cnpj LIKE %?% \n  AND codigo LIKE %?% \n  AND vantive_id = ? \n  AND status = ?\nLIMIT 50 OFFSET ?;\n</code></pre>"},{"location":"backend/modulos/inventario/views.html#exemplo-c-equivalente","title":"Exemplo C# Equivalente","text":"<pre><code>public class ClienteController : ControllerBase\n{\n    [HttpGet]\n    [Authorize]\n    public async Task&lt;ActionResult&lt;PagedResult&lt;Cliente&gt;&gt;&gt; GetClientes(\n        [FromQuery] string razaoSocial,\n        [FromQuery] string cnpj,\n        [FromQuery] int? vantiveId,\n        [FromQuery] string codigo,\n        [FromQuery] bool? status,\n        [FromQuery] int page = 1)\n    {\n        var query = _context.Clientes.AsQueryable();\n\n        if (!string.IsNullOrEmpty(razaoSocial))\n            query = query.Where(c =&gt; c.RazaoSocial.Contains(razaoSocial));\n\n        if (!string.IsNullOrEmpty(cnpj))\n            query = query.Where(c =&gt; c.Cnpj.Contains(cnpj));\n\n        // ... outros filtros\n\n        return Ok(await query.ToPagedResultAsync(page, 50));\n    }\n}\n</code></pre>"},{"location":"backend/modulos/inventario/views.html#site-views","title":"Site Views","text":""},{"location":"backend/modulos/inventario/views.html#sitelistcreate","title":"SiteListCreate","text":"<p>Endpoint para listar e criar sites.</p>"},{"location":"backend/modulos/inventario/views.html#get-apiinventariosites","title":"GET /api/inventario/sites/","text":"<ul> <li>Filtros Obrigat\u00f3rios: cliente_id</li> <li>Filtros Opcionais: search (busca em codigo_vivo e tipo_negocio)</li> </ul>"},{"location":"backend/modulos/inventario/views.html#exemplo-sql-equivalente_1","title":"Exemplo SQL Equivalente","text":"<pre><code>SELECT s.* \nFROM d_site s\nWHERE s.cliente_id = ?\n  AND (s.codigo_vivo LIKE %?% OR s.tipo_negocio LIKE %?%)\nLIMIT 50 OFFSET ?;\n</code></pre>"},{"location":"backend/modulos/inventario/views.html#exemplo-c-equivalente_1","title":"Exemplo C# Equivalente","text":"<pre><code>[HttpGet]\npublic async Task&lt;ActionResult&lt;PagedResult&lt;Site&gt;&gt;&gt; GetSites(\n    [FromQuery] int clienteId,\n    [FromQuery] string search,\n    [FromQuery] int page = 1)\n{ \n    if (clienteId == 0)\n        return BadRequest(new { error = \"Cliente \u00e9 obrigat\u00f3rio\" });\n\n    var query = _context.Sites\n        .Where(s =&gt; s.ClienteId == clienteId);\n\n    if (!string.IsNullOrEmpty(search))\n    {\n        query = query.Where(s =&gt; \n            s.CodigoVivo.Contains(search) || \n            s.TipoNegocio.Contains(search));\n    }\n\n    return Ok(await query.ToPagedResultAsync(page, 50));\n}\n</code></pre>"},{"location":"backend/modulos/inventario/views.html#equipamento-views","title":"Equipamento Views","text":""},{"location":"backend/modulos/inventario/views.html#equipamentolistcreate","title":"EquipamentoListCreate","text":"<p>Endpoint para listar e criar equipamentos.</p>"},{"location":"backend/modulos/inventario/views.html#get-apiinventarioequipamentos","title":"GET /api/inventario/equipamentos/","text":"<ul> <li>Filtros Obrigat\u00f3rios: cliente_id</li> <li>Filtros Opcionais: </li> <li>site_id</li> <li>search (busca em designador e codigo)</li> </ul>"},{"location":"backend/modulos/inventario/views.html#exemplo-sql-equivalente_2","title":"Exemplo SQL Equivalente","text":"<pre><code>SELECT e.* \nFROM d_equipamento e\nINNER JOIN d_site s ON e.site_id = s.id\nWHERE s.cliente_id = ?\n  AND (e.site_id = ? OR ? IS NULL)\n  AND (e.designador LIKE %?% OR e.codigo LIKE %?%)\nLIMIT 50 OFFSET ?;\n</code></pre>"},{"location":"backend/modulos/inventario/views.html#exemplo-c-equivalente_2","title":"Exemplo C# Equivalente","text":"<pre><code>[HttpGet]\npublic async Task&lt;ActionResult&lt;PagedResult&lt;Equipamento&gt;&gt;&gt; GetEquipamentos(\n    [FromQuery] int clienteId,\n    [FromQuery] int? siteId,\n    [FromQuery] string search,\n    [FromQuery] int page = 1)\n{\n    if (clienteId == 0)\n        return BadRequest(new { error = \"Cliente \u00e9 obrigat\u00f3rio\" });\n\n    var query = _context.Equipamentos\n        .Include(e =&gt; e.Site)\n        .Where(e =&gt; e.Site.ClienteId == clienteId);\n\n    if (siteId.HasValue)\n        query = query.Where(e =&gt; e.SiteId == siteId);\n\n    if (!string.IsNullOrEmpty(search))\n    {\n        query = query.Where(e =&gt; \n            e.Designador.Contains(search) || \n            e.Codigo.Contains(search));\n    }\n\n    return Ok(await query.ToPagedResultAsync(page, 50));\n}\n</code></pre>"},{"location":"backend/modulos/inventario/views.html#servico-views","title":"Servi\u00e7o Views","text":""},{"location":"backend/modulos/inventario/views.html#servicolistcreate","title":"ServicoListCreate","text":"<p>Endpoint para listar e criar servi\u00e7os.</p>"},{"location":"backend/modulos/inventario/views.html#get-apiinventarioservicos","title":"GET /api/inventario/servicos/","text":"<ul> <li>Filtros Obrigat\u00f3rios: cliente_id</li> <li>Filtros Opcionais: </li> <li>site_id</li> <li>equipamento_id</li> <li>search (busca em designador e codigo)</li> </ul>"},{"location":"backend/modulos/inventario/views.html#exemplo-sql-equivalente_3","title":"Exemplo SQL Equivalente","text":"<pre><code>SELECT sv.* \nFROM d_servico sv\nINNER JOIN d_equipamento e ON sv.equipamento_id = e.id\nINNER JOIN d_site s ON e.site_id = s.id\nWHERE s.cliente_id = ?\n  AND (e.site_id = ? OR ? IS NULL)\n  AND (sv.equipamento_id = ? OR ? IS NULL)\n  AND (sv.designador LIKE %?% OR sv.codigo LIKE %?%)\nLIMIT 50 OFFSET ?;\n</code></pre>"},{"location":"backend/modulos/inventario/views.html#exemplo-c-equivalente_3","title":"Exemplo C# Equivalente","text":"<pre><code>[HttpGet]\npublic async Task&lt;ActionResult&lt;PagedResult&lt;Servico&gt;&gt;&gt; GetServicos(\n    [FromQuery] int clienteId,\n    [FromQuery] int? siteId,\n    [FromQuery] int? equipamentoId,\n    [FromQuery] string search,\n    [FromQuery] int page = 1)\n{\n    if (clienteId == 0)\n        return BadRequest(new { error = \"Cliente \u00e9 obrigat\u00f3rio\" });\n\n    var query = _context.Servicos\n        .Include(s =&gt; s.Equipamento)\n        .ThenInclude(e =&gt; e.Site)\n        .Where(s =&gt; s.Equipamento.Site.ClienteId == clienteId);\n\n    if (siteId.HasValue)\n        query = query.Where(s =&gt; s.Equipamento.SiteId == siteId);\n\n    if (equipamentoId.HasValue)\n        query = query.Where(s =&gt; s.EquipamentoId == equipamentoId);\n\n    if (!string.IsNullOrEmpty(search))\n    {\n        query = query.Where(s =&gt; \n            s.Designador.Contains(search) || \n            s.Codigo.Contains(search));\n    }\n\n    return Ok(await query.ToPagedResultAsync(page, 50));\n}\n</code></pre>"},{"location":"backend/tecnologias/index.html","title":"Tecnologias Utilizadas","text":""},{"location":"backend/tecnologias/index.html#visao-geral","title":"Vis\u00e3o Geral","text":"<p>Este projeto utiliza um conjunto moderno de tecnologias Python para desenvolvimento web, com foco em APIs REST. Para desenvolvedores vindos do mundo C#, fornecemos paralelos com tecnologias equivalentes do ecossistema .NET.</p>"},{"location":"backend/tecnologias/index.html#stack-principal","title":"Stack Principal","text":""},{"location":"backend/tecnologias/index.html#framework-web","title":"Framework Web","text":"<ul> <li>Django: Framework web full-stack</li> <li>Similar ao ASP.NET Core</li> <li>Inclui ORM, autentica\u00e7\u00e3o, admin</li> <li>Focado em produtividade</li> </ul>"},{"location":"backend/tecnologias/index.html#api-rest","title":"API REST","text":"<ul> <li>Django REST Framework (DRF)</li> <li>Similar ao ASP.NET Core Web API</li> <li>Serializa\u00e7\u00e3o autom\u00e1tica</li> <li>Documenta\u00e7\u00e3o interativa</li> </ul>"},{"location":"backend/tecnologias/index.html#comparativo-de-tecnologias","title":"Comparativo de Tecnologias","text":"Python/Django C#/.NET Fun\u00e7\u00e3o Django ASP.NET Core Framework Web Django REST Framework ASP.NET Core Web API API REST Django ORM Entity Framework ORM django-cors-headers CORS Middleware CORS django-filter LINQ Filtros djangorestframework-simplejwt JWT Bearer Autentica\u00e7\u00e3o python-dotenv User Secrets Configura\u00e7\u00f5es"},{"location":"backend/tecnologias/index.html#pacotes-essenciais","title":"Pacotes Essenciais","text":""},{"location":"backend/tecnologias/index.html#core","title":"Core","text":"<ul> <li>Django 4.2.10</li> <li>Django REST Framework 3.14.0</li> <li>django-cors-headers</li> <li>django-filter</li> </ul>"},{"location":"backend/tecnologias/index.html#banco-de-dados","title":"Banco de Dados","text":"<ul> <li>psycopg2-binary (PostgreSQL)</li> <li>mssql-django (SQL Server)</li> </ul>"},{"location":"backend/tecnologias/index.html#processamento","title":"Processamento","text":"<ul> <li>polars (an\u00e1lise de dados)</li> <li>validate-docbr (valida\u00e7\u00e3o BR)</li> </ul>"},{"location":"backend/tecnologias/index.html#desenvolvimento","title":"Desenvolvimento","text":"<ul> <li>python-dotenv</li> <li>black (formata\u00e7\u00e3o)</li> <li>pylint (linting)</li> </ul>"},{"location":"backend/tecnologias/index.html#como-a-documentacao-esta-organizada","title":"Como a Documenta\u00e7\u00e3o est\u00e1 Organizada","text":"<ol> <li>Django Framework</li> <li>Conceitos b\u00e1sicos</li> <li>Compara\u00e7\u00e3o com ASP.NET Core</li> <li> <p>Exemplos pr\u00e1ticos</p> </li> <li> <p>Django REST Framework</p> </li> <li>APIs REST</li> <li>Serializa\u00e7\u00e3o</li> <li> <p>Autentica\u00e7\u00e3o</p> </li> <li> <p>Pacotes Utilizados</p> </li> <li>Descri\u00e7\u00e3o detalhada</li> <li>Como utilizar</li> <li>Equivalentes em C#</li> </ol>"},{"location":"backend/tecnologias/django.html","title":"Django Framework","text":""},{"location":"backend/tecnologias/django.html#o-que-e-django","title":"O que \u00e9 Django?","text":"<p>Django \u00e9 um framework web Python de alto n\u00edvel, similar ao ASP.NET Core no mundo C#. Foi criado para ajudar desenvolvedores a construir aplica\u00e7\u00f5es web complexas de forma r\u00e1pida e eficiente.</p>"},{"location":"backend/tecnologias/django.html#por-que-django","title":"Por que Django?","text":""},{"location":"backend/tecnologias/django.html#para-desenvolvedores-c","title":"Para desenvolvedores C","text":"<ul> <li>ORM integrado: Similar ao Entity Framework</li> <li>Admin autom\u00e1tico: N\u00e3o existe equivalente direto no C#</li> <li>Sistema de templates: Similar ao Razor</li> <li>Gerenciamento de URLs: Similar ao sistema de rotas do ASP.NET</li> <li>Autentica\u00e7\u00e3o built-in: Similar ao Identity</li> </ul>"},{"location":"backend/tecnologias/django.html#principais-caracteristicas","title":"Principais Caracter\u00edsticas","text":"<ol> <li>Models (ORM)</li> </ol> <pre><code># Django\nclass Cliente(models.Model):\n    nome = models.CharField(max_length=100)\n    email = models.EmailField(unique=True)\n\n# Uso\nCliente.objects.filter(email__contains='@empresa.com')\n</code></pre> <pre><code>// C# Equivalente\npublic class Cliente\n{\n    public int Id { get; set; }\n    public string Nome { get; set; }\n    public string Email { get; set; }\n}\n\n// Uso\n_context.Clientes.Where(c =&gt; c.Email.Contains(\"@empresa.com\"))\n</code></pre> <ol> <li>Views</li> </ol> <pre><code># Django\n@api_view(['GET'])\ndef listar_clientes(request):\n    clientes = Cliente.objects.all()\n    return Response(ClienteSerializer(clientes, many=True).data)\n</code></pre> <pre><code>// C# Equivalente\n[HttpGet]\npublic IActionResult ListarClientes()\n{\n    var clientes = _context.Clientes.ToList();\n    return Ok(_mapper.Map&lt;List&lt;ClienteDto&gt;&gt;(clientes));\n}\n</code></pre> <ol> <li>URLs (Rotas)</li> </ol> <pre><code># Django\nurlpatterns = [\n    path('clientes/', views.listar_clientes),\n    path('clientes/&lt;int:pk&gt;/', views.detalhe_cliente),\n]\n</code></pre> <pre><code>// C# Equivalente\napp.MapControllerRoute(\n    name: \"clientes\",\n    pattern: \"clientes/{id?}\",\n    defaults: new { controller = \"Clientes\", action = \"Index\" }\n);\n</code></pre>"},{"location":"backend/tecnologias/django.html#arquitetura-mtv","title":"Arquitetura MTV","text":"<p>Django usa o padr\u00e3o MTV (Model-Template-View), similar ao MVC:</p> Django (MTV) C# (MVC) Fun\u00e7\u00e3o Model Model Dados e l\u00f3gica de neg\u00f3cios Template View Apresenta\u00e7\u00e3o View Controller L\u00f3gica de controle"},{"location":"backend/tecnologias/django.html#django-admin","title":"Django Admin","text":"<p>Um dos diferenciais do Django \u00e9 seu admin autom\u00e1tico:</p> <pre><code>from django.contrib import admin\n\n@admin.register(Cliente)\nclass ClienteAdmin(admin.ModelAdmin):\n    list_display = ['nome', 'email']\n    search_fields = ['nome', 'email']\n</code></pre> <p>N\u00e3o existe equivalente direto no C#, seria necess\u00e1rio criar uma interface administrativa manualmente.</p>"},{"location":"backend/tecnologias/django.html#links-uteis","title":"Links \u00dateis","text":"<ul> <li>Documenta\u00e7\u00e3o Oficial</li> <li>Django para Desenvolvedores .NET</li> <li>Tutorial Django</li> </ul>"},{"location":"backend/tecnologias/drf.html","title":"Django REST Framework (DRF)","text":""},{"location":"backend/tecnologias/drf.html#o-que-e-drf","title":"O que \u00e9 DRF?","text":"<p>Django REST Framework \u00e9 uma biblioteca poderosa para construir APIs Web, similar ao ASP.NET Core Web API. \u00c9 constru\u00eddo sobre o Django e adiciona funcionalidades espec\u00edficas para APIs REST.</p>"},{"location":"backend/tecnologias/drf.html#comparacao-com-aspnet-core-web-api","title":"Compara\u00e7\u00e3o com ASP.NET Core Web API","text":""},{"location":"backend/tecnologias/drf.html#serializers-vs-dtos","title":"Serializers vs DTOs","text":"<pre><code># DRF Serializer\nclass ClienteSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = Cliente\n        fields = ['id', 'nome', 'email']\n</code></pre> <pre><code>// C# DTO\npublic class ClienteDto\n{\n    public int Id { get; set; }\n    public string Nome { get; set; }\n    public string Email { get; set; }\n}\n</code></pre>"},{"location":"backend/tecnologias/drf.html#viewsets-vs-controllers","title":"ViewSets vs Controllers","text":"<pre><code># DRF ViewSet\nclass ClienteViewSet(viewsets.ModelViewSet):\n    queryset = Cliente.objects.all()\n    serializer_class = ClienteSerializer\n</code></pre> <pre><code>// C# Controller\n[ApiController]\n[Route(\"api/[controller]\")]\npublic class ClientesController : ControllerBase\n{\n    private readonly IClienteService _service;\n\n    // ... actions ...\n}\n</code></pre>"},{"location":"backend/tecnologias/drf.html#principais-funcionalidades","title":"Principais Funcionalidades","text":""},{"location":"backend/tecnologias/drf.html#1-autenticacao","title":"1. Autentica\u00e7\u00e3o","text":"<pre><code># DRF\nfrom rest_framework.permissions import IsAuthenticated\n\n@api_view(['GET'])\n@permission_classes([IsAuthenticated])\ndef protected_view(request):\n    return Response({\"message\": \"Protegido\"})\n</code></pre> <pre><code>// C# Equivalente\n[Authorize]\n[HttpGet]\npublic IActionResult ProtectedEndpoint()\n{\n    return Ok(new { message = \"Protegido\" });\n}\n</code></pre>"},{"location":"backend/tecnologias/drf.html#2-paginacao","title":"2. Pagina\u00e7\u00e3o","text":"<pre><code># settings.py\nREST_FRAMEWORK = {\n    'DEFAULT_PAGINATION_CLASS': 'rest_framework.pagination.PageNumberPagination',\n    'PAGE_SIZE': 10\n}\n</code></pre> <pre><code>// C# Equivalente\npublic class PaginationFilter\n{\n    public int PageNumber { get; set; }\n    public int PageSize { get; set; }\n}\n</code></pre>"},{"location":"backend/tecnologias/drf.html#3-filtros","title":"3. Filtros","text":"<pre><code># DRF\nfrom django_filters import rest_framework as filters\n\nclass ClienteFilter(filters.FilterSet):\n    email = filters.CharFilter(lookup_expr='icontains')\n\n    class Meta:\n        model = Cliente\n        fields = ['email']\n</code></pre> <pre><code>// C# Equivalente\npublic class ClienteFilter\n{\n    public string Email { get; set; }\n\n    public IQueryable&lt;Cliente&gt; Apply(IQueryable&lt;Cliente&gt; query)\n    {\n        if (!string.IsNullOrEmpty(Email))\n            query = query.Where(c =&gt; c.Email.Contains(Email));\n        return query;\n    }\n}\n</code></pre>"},{"location":"backend/tecnologias/drf.html#recursos-exclusivos-do-drf","title":"Recursos Exclusivos do DRF","text":""},{"location":"backend/tecnologias/drf.html#1-browsable-api","title":"1. Browsable API","text":"<ul> <li>Interface web autom\u00e1tica para sua API</li> <li>Documenta\u00e7\u00e3o interativa</li> <li>Formul\u00e1rios para teste</li> </ul>"},{"location":"backend/tecnologias/drf.html#2-format-suffixes","title":"2. Format Suffixes","text":"<pre><code>@api_view(['GET'])\n@renderer_classes([JSONRenderer, XMLRenderer])\ndef mixed_content(request, format=None):\n    # ...\n</code></pre>"},{"location":"backend/tecnologias/drf.html#3-generic-views","title":"3. Generic Views","text":"<pre><code>class ClienteList(generics.ListCreateAPIView):\n    queryset = Cliente.objects.all()\n    serializer_class = ClienteSerializer\n</code></pre>"},{"location":"backend/tecnologias/drf.html#links-uteis","title":"Links \u00dateis","text":"<ul> <li>DRF Documenta\u00e7\u00e3o</li> <li>Tutorial DRF</li> <li>Guia de Autentica\u00e7\u00e3o</li> </ul>"},{"location":"backend/tecnologias/pacotes.html","title":"Pacotes e Depend\u00eancias","text":""},{"location":"backend/tecnologias/pacotes.html#core-web-framework","title":"Core: Web Framework","text":""},{"location":"backend/tecnologias/pacotes.html#django","title":"Django","text":"<pre><code>Django==4.2.10  # Framework web principal\n</code></pre> <pre><code>// Equivalente C#\nInstall-Package Microsoft.AspNetCore\n</code></pre>"},{"location":"backend/tecnologias/pacotes.html#django-rest-framework","title":"Django REST Framework","text":"<pre><code>djangorestframework==3.14.0  # Framework API REST\ndjango-filter==23.5         # Sistema de filtros\n</code></pre> <pre><code>// Equivalente C#\nInstall-Package Microsoft.AspNetCore.WebApi\nInstall-Package System.Linq.Dynamic.Core\n</code></pre>"},{"location":"backend/tecnologias/pacotes.html#autenticacao-e-seguranca","title":"Autentica\u00e7\u00e3o e Seguran\u00e7a","text":""},{"location":"backend/tecnologias/pacotes.html#jwt-e-token","title":"JWT e Token","text":"<pre><code>django-rest-knox==4.2.0           # Token authentication\ndjangorestframework-simplejwt==5.3.1  # JWT authentication\n</code></pre> <pre><code>// Equivalente C#\nInstall-Package Microsoft.AspNetCore.Authentication.JwtBearer\n</code></pre>"},{"location":"backend/tecnologias/pacotes.html#cors","title":"CORS","text":"<pre><code>django-cors-headers==4.3.1  # CORS middleware\n</code></pre> <pre><code>// Equivalente C#\nservices.AddCors();  // Built-in no ASP.NET Core\n</code></pre>"},{"location":"backend/tecnologias/pacotes.html#banco-de-dados","title":"Banco de Dados","text":""},{"location":"backend/tecnologias/pacotes.html#postgresql","title":"PostgreSQL","text":"<pre><code>psycopg2-binary==2.9.9  # Driver PostgreSQL\n</code></pre> <pre><code>// Equivalente C#\nInstall-Package Npgsql.EntityFrameworkCore.PostgreSQL\n</code></pre>"},{"location":"backend/tecnologias/pacotes.html#sql-server","title":"SQL Server","text":"<pre><code>mssql-django  # Driver SQL Server\n</code></pre> <pre><code>// Equivalente C#\nInstall-Package Microsoft.EntityFrameworkCore.SqlServer\n</code></pre>"},{"location":"backend/tecnologias/pacotes.html#processamento-de-dados","title":"Processamento de Dados","text":""},{"location":"backend/tecnologias/pacotes.html#analise-de-dados","title":"An\u00e1lise de Dados","text":"<pre><code>polars==0.19.3  # Biblioteca de an\u00e1lise de dados\n</code></pre> <pre><code>// Equivalente C#\nusing System.Linq;  // LINQ built-in\nInstall-Package System.Linq.Dynamic.Core\n</code></pre>"},{"location":"backend/tecnologias/pacotes.html#validacao-e-utilidades","title":"Valida\u00e7\u00e3o e Utilidades","text":""},{"location":"backend/tecnologias/pacotes.html#validacao-de-documentos","title":"Valida\u00e7\u00e3o de Documentos","text":"<pre><code>validate-docbr==1.10.0  # Valida\u00e7\u00e3o de documentos BR\n</code></pre> <pre><code>// Equivalente C#\n// Normalmente implementado manualmente ou via Nuget espec\u00edfico\npublic class DocumentValidator\n{\n    public bool ValidateCPF(string cpf) { ... }\n}\n</code></pre>"},{"location":"backend/tecnologias/pacotes.html#desenvolvimento","title":"Desenvolvimento","text":""},{"location":"backend/tecnologias/pacotes.html#ambiente","title":"Ambiente","text":"<pre><code>python-dotenv==1.0.1  # Vari\u00e1veis de ambiente\n</code></pre> <pre><code>// Equivalente C#\nInstall-Package Microsoft.Extensions.Configuration.UserSecrets\n</code></pre>"},{"location":"backend/tecnologias/pacotes.html#documentacao","title":"Documenta\u00e7\u00e3o","text":"<pre><code>mkdocs==1.4.3           # Gera\u00e7\u00e3o de documenta\u00e7\u00e3o\nmkdocs-material==9.0.5  # Tema Material para MkDocs\n</code></pre> <pre><code>// Equivalente C#\nInstall-Package docfx.console\n</code></pre>"},{"location":"backend/tecnologias/pacotes.html#gerenciamento-de-dependencias","title":"Gerenciamento de Depend\u00eancias","text":""},{"location":"backend/tecnologias/pacotes.html#instalacao","title":"Instala\u00e7\u00e3o","text":""},{"location":"backend/tecnologias/pacotes.html#pythondjango","title":"Python/Django","text":"<pre><code># Instalar tudo\npip install -r requirements.txt\n\n# Instalar pacote espec\u00edfico\npip install Django==4.2.10\n</code></pre>"},{"location":"backend/tecnologias/pacotes.html#caspnet-core","title":"C#/ASP.NET Core","text":"<pre><code># Instalar tudo\ndotnet restore\n\n# Instalar pacote espec\u00edfico\ndotnet add package Microsoft.AspNetCore\n</code></pre>"},{"location":"backend/tecnologias/pacotes.html#atualizacao","title":"Atualiza\u00e7\u00e3o","text":""},{"location":"backend/tecnologias/pacotes.html#pythondjango_1","title":"Python/Django","text":"<pre><code># Atualizar requirements.txt\npip freeze &gt; requirements.txt\n\n# Verificar atualiza\u00e7\u00f5es dispon\u00edveis\npip list --outdated\n</code></pre>"},{"location":"backend/tecnologias/pacotes.html#caspnet-core_1","title":"C#/ASP.NET Core","text":"<pre><code># Verificar atualiza\u00e7\u00f5es\ndotnet list package --outdated\n\n# Atualizar pacote\ndotnet add package PackageName --version X.Y.Z\n</code></pre>"},{"location":"backend/tecnologias/pacotes.html#melhores-praticas","title":"Melhores Pr\u00e1ticas","text":"<ol> <li>Versionamento</li> <li>Especificar vers\u00f5es exatas em requirements.txt</li> <li>Usar ambientes virtuais por projeto</li> <li> <p>Documentar depend\u00eancias essenciais</p> </li> <li> <p>Seguran\u00e7a</p> </li> <li>Manter pacotes atualizados</li> <li>Verificar vulnerabilidades conhecidas</li> <li> <p>Usar fontes confi\u00e1veis (PyPI, NuGet)</p> </li> <li> <p>Performance</p> </li> <li>Minimizar n\u00famero de depend\u00eancias</li> <li>Usar vers\u00f5es otimizadas (ex: psycopg2-binary)</li> <li> <p>Avaliar impacto de cada pacote</p> </li> <li> <p>Compatibilidade</p> </li> <li>Testar combina\u00e7\u00f5es de vers\u00f5es</li> <li>Manter registro de problemas conhecidos</li> <li>Documentar requisitos espec\u00edficos</li> </ol>"},{"location":"frontend/index.html","title":"Documenta\u00e7\u00e3o Frontend","text":"<p>Esta se\u00e7\u00e3o cont\u00e9m a documenta\u00e7\u00e3o t\u00e9cnica do frontend do Sistema de Gest\u00e3o de Invent\u00e1rio.</p>"},{"location":"frontend/index.html#estrutura-do-projeto","title":"Estrutura do Projeto","text":"<p>O frontend est\u00e1 organizado nas seguintes se\u00e7\u00f5es principais:</p> <ul> <li>P\u00e1ginas: Documenta\u00e7\u00e3o detalhada de cada p\u00e1gina do sistema</li> <li>Componentes: Documenta\u00e7\u00e3o dos componentes reutiliz\u00e1veis</li> </ul>"},{"location":"frontend/componentes/index.html","title":"Componentes","text":"<p>Esta se\u00e7\u00e3o documenta os componentes reutiliz\u00e1veis do sistema.</p>"},{"location":"frontend/componentes/index.html#componentes-disponiveis","title":"Componentes Dispon\u00edveis","text":""},{"location":"frontend/componentes/index.html#tabelas","title":"Tabelas","text":"<ul> <li>Tabela de Invent\u00e1rio</li> <li>Tabela de Incidentes</li> </ul>"},{"location":"frontend/componentes/index.html#filtros-e-dropdowns","title":"Filtros e Dropdowns","text":"<ul> <li>Filtro de Invent\u00e1rio</li> <li>Filtro de Incidentes</li> </ul>"},{"location":"frontend/componentes/index.html#fluxo","title":"Fluxo","text":"<ul> <li>Cards de Fluxo</li> <li>Se\u00e7\u00f5es de Fluxo</li> </ul>"},{"location":"frontend/componentes/dropdown/filter-dropdown.html","title":"Componente de Filtros","text":""},{"location":"frontend/componentes/dropdown/filter-dropdown.html#visao-geral","title":"Vis\u00e3o Geral","text":"<p>O componente <code>FilterDropdown</code> permite filtrar os dados do invent\u00e1rio por diferentes crit\u00e9rios.</p>"},{"location":"frontend/componentes/dropdown/filter-dropdown.html#comparacao-angular-vs-react","title":"Compara\u00e7\u00e3o Angular vs React","text":""},{"location":"frontend/componentes/dropdown/filter-dropdown.html#react","title":"React","text":"<pre><code>function FilterDropdown({ filters, setFilters, onApply }) {\n  const [localFilters, setLocalFilters] = useState(filters);\n\n  return (\n    &lt;div className=\"filter-dropdown\"&gt;\n      {/* Campos de filtro */}\n    &lt;/div&gt;\n  );\n}\n</code></pre>"},{"location":"frontend/componentes/dropdown/filter-dropdown.html#angular","title":"Angular","text":"<pre><code>@Component({\n  selector: 'app-filter-dropdown',\n  template: `\n    &lt;div class=\"filter-dropdown\"&gt;\n      &lt;!-- Campos de filtro --&gt;\n    &lt;/div&gt;\n  `\n})\nexport class FilterDropdownComponent {\n  @Input() filters: any;\n  @Output() filtersChange = new EventEmitter&lt;any&gt;();\n  @Output() apply = new EventEmitter&lt;void&gt;();\n}\n</code></pre>"},{"location":"frontend/componentes/dropdown/filter-dropdown.html#funcionalidades","title":"Funcionalidades","text":""},{"location":"frontend/componentes/dropdown/filter-dropdown.html#1-gerenciamento-de-estado-local","title":"1. Gerenciamento de Estado Local","text":"<pre><code>// React - useState\nconst [localFilters, setLocalFilters] = useState(filters);\n\n// Angular - Two-way binding\n[(ngModel)]=\"localFilters\"\n</code></pre>"},{"location":"frontend/componentes/dropdown/filter-dropdown.html#2-aplicacao-de-filtros","title":"2. Aplica\u00e7\u00e3o de Filtros","text":"<pre><code>// React\nconst handleApply = () =&gt; {\n  setFilters(localFilters);\n  onApply();\n};\n\n// Angular\napplyFilters(): void {\n  this.filtersChange.emit(this.localFilters);\n  this.apply.emit();\n}\n</code></pre>"},{"location":"frontend/componentes/dropdown/filter-dropdown.html#3-limpeza-de-filtros","title":"3. Limpeza de Filtros","text":"<pre><code>// React\nconst clearFilters = () =&gt; {\n  setLocalFilters({});\n};\n\n// Angular\nclearFilters(): void {\n  this.localFilters = {};\n}\n</code></pre>"},{"location":"frontend/componentes/dropdown/filter-dropdown.html#propsinputs","title":"Props/Inputs","text":""},{"location":"frontend/componentes/dropdown/filter-dropdown.html#react-props","title":"React Props","text":"<pre><code>interface FilterDropdownProps {\n  filters: Record&lt;string, any&gt;;\n  setFilters: (filters: Record&lt;string, any&gt;) =&gt; void;\n  onApply: () =&gt; void;\n  onClose: () =&gt; void;\n}\n</code></pre>"},{"location":"frontend/componentes/dropdown/filter-dropdown.html#angular-inputsoutputs","title":"Angular Inputs/Outputs","text":"<pre><code>@Input() filters: Record&lt;string, any&gt;;\n@Output() filtersChange = new EventEmitter&lt;Record&lt;string, any&gt;&gt;();\n@Output() apply = new EventEmitter&lt;void&gt;();\n@Output() close = new EventEmitter&lt;void&gt;();\n</code></pre>"},{"location":"frontend/componentes/dropdown/filter-dropdown.html#dicas-de-migracao","title":"Dicas de Migra\u00e7\u00e3o","text":"<ol> <li>Estado do Formul\u00e1rio</li> <li>Angular: <code>ngModel</code></li> <li> <p>React: <code>useState</code> + <code>onChange</code></p> </li> <li> <p>Comunica\u00e7\u00e3o com Componente Pai</p> </li> <li>Angular: <code>@Output()</code> + <code>EventEmitter</code></li> <li> <p>React: Props de callback</p> </li> <li> <p>Valida\u00e7\u00e3o</p> </li> <li>Angular: Template-driven forms</li> <li>React: Valida\u00e7\u00e3o manual ou bibliotecas como Formik</li> </ol>"},{"location":"frontend/componentes/filtros/incident-filter.html","title":"Componente de Filtro de Incidentes","text":""},{"location":"frontend/componentes/filtros/incident-filter.html#visao-geral","title":"Vis\u00e3o Geral","text":"<p>O componente <code>IncidentFilterDropdown</code> permite filtrar incidentes por m\u00faltiplos crit\u00e9rios.</p>"},{"location":"frontend/componentes/filtros/incident-filter.html#comparacao-angular-vs-react","title":"Compara\u00e7\u00e3o Angular vs React","text":""},{"location":"frontend/componentes/filtros/incident-filter.html#react","title":"React","text":"<pre><code>function IncidentFilterDropdown({ filters, setFilters, onApply }) {\n  const [localFilters, setLocalFilters] = useState(filters);\n  const [dateRange, setDateRange] = useState([null, null]);\n\n  return (\n    &lt;div className=\"filter-dropdown\"&gt;\n      {/* Campos de filtro */}\n    &lt;/div&gt;\n  );\n}\n</code></pre>"},{"location":"frontend/componentes/filtros/incident-filter.html#angular","title":"Angular","text":"<pre><code>@Component({\n  selector: 'app-incident-filter',\n  template: `\n    &lt;div class=\"filter-dropdown\"&gt;\n      &lt;!-- Campos de filtro --&gt;\n    &lt;/div&gt;\n  `\n})\nexport class IncidentFilterComponent {\n  @Input() filters: any;\n  @Output() filtersChange = new EventEmitter&lt;any&gt;();\n  dateRange: [Date, Date] = [null, null];\n}\n</code></pre>"},{"location":"frontend/componentes/filtros/incident-filter.html#campos-de-filtro","title":"Campos de Filtro","text":""},{"location":"frontend/componentes/filtros/incident-filter.html#informacoes-basicas","title":"Informa\u00e7\u00f5es B\u00e1sicas","text":"<ol> <li>Incidente</li> <li>Tipo: <code>string</code></li> <li>Descri\u00e7\u00e3o: N\u00famero ou identificador do incidente</li> <li> <p>Exemplo: <code>INC123456</code></p> </li> <li> <p>Status</p> </li> <li>Tipo: <code>enum</code></li> <li> <p>Valores:</p> <ul> <li><code>PENDING</code>: Pendente</li> <li><code>IN_PROGRESS</code>: Em Andamento</li> <li><code>RESOLVED</code>: Resolvido</li> <li><code>CLOSED</code>: Fechado</li> </ul> </li> <li> <p>Origem</p> </li> <li>Tipo: <code>string</code></li> <li>Descri\u00e7\u00e3o: Sistema de origem do incidente</li> <li>Exemplo: <code>Vantive</code>, <code>ServiceNow</code></li> </ol>"},{"location":"frontend/componentes/filtros/incident-filter.html#categorizacao","title":"Categoriza\u00e7\u00e3o","text":"<ol> <li>Categoria</li> <li>Tipo: <code>string</code></li> <li>Descri\u00e7\u00e3o: Categoria principal do incidente</li> <li> <p>Exemplo: <code>Rede</code>, <code>Acesso</code></p> </li> <li> <p>Subcategoria</p> </li> <li>Tipo: <code>string</code></li> <li>Descri\u00e7\u00e3o: Subdivis\u00e3o da categoria</li> <li> <p>Exemplo: <code>Conectividade</code>, <code>Bloqueio</code></p> </li> <li> <p>Detalhe Subcategoria</p> </li> <li>Tipo: <code>string</code></li> <li>Descri\u00e7\u00e3o: Especifica\u00e7\u00e3o detalhada da subcategoria</li> <li>Exemplo: <code>Link Down</code>, <code>Senha Expirada</code></li> </ol>"},{"location":"frontend/componentes/filtros/incident-filter.html#periodos","title":"Per\u00edodos","text":"<ol> <li>Per\u00edodo de Abertura</li> <li>Tipo: <code>DateRange</code></li> <li>Campos:<ul> <li><code>data_abertura_inicio</code>: Data inicial</li> <li><code>data_abertura_fim</code>: Data final</li> </ul> </li> <li> <p>Formato: <code>DD/MM/YYYY</code></p> </li> <li> <p>Per\u00edodo de Fechamento</p> </li> <li>Tipo: <code>DateRange</code></li> <li>Campos:<ul> <li><code>data_fechamento_inicio</code>: Data inicial</li> <li><code>data_fechamento_fim</code>: Data final</li> </ul> </li> <li> <p>Formato: <code>DD/MM/YYYY</code></p> </li> <li> <p>Per\u00edodo de Resolu\u00e7\u00e3o</p> </li> <li>Tipo: <code>DateRange</code></li> <li>Campos:<ul> <li><code>data_resolucao_inicio</code>: Data inicial</li> <li><code>data_resolucao_fim</code>: Data final</li> </ul> </li> <li>Formato: <code>DD/MM/YYYY</code></li> </ol>"},{"location":"frontend/componentes/filtros/incident-filter.html#gerenciamento-de-estado-local","title":"Gerenciamento de Estado Local","text":""},{"location":"frontend/componentes/filtros/incident-filter.html#react_1","title":"React","text":"<pre><code>const [localFilters, setLocalFilters] = useState(filters);\nconst handleChange = (field, value) =&gt; {\n  setLocalFilters(prev =&gt; ({...prev, [field]: value}));\n};\n</code></pre>"},{"location":"frontend/componentes/filtros/incident-filter.html#angular_1","title":"Angular","text":"<pre><code>localFilters = {...this.filters};\nhandleChange(field: string, value: any): void {\n  this.localFilters[field] = value;\n}\n</code></pre>"},{"location":"frontend/componentes/filtros/incident-filter.html#selecao-de-datas","title":"Sele\u00e7\u00e3o de Datas","text":""},{"location":"frontend/componentes/filtros/incident-filter.html#react-com-react-datepicker","title":"React (com react-datepicker)","text":"<pre><code>import DatePicker from 'react-datepicker';\n\n&lt;DatePicker\n  selected={startDate}\n  onChange={handleDateChange}\n  selectsRange\n  startDate={startDate}\n  endDate={endDate}\n/&gt;\n</code></pre>"},{"location":"frontend/componentes/filtros/incident-filter.html#angular-com-ngx-datepicker","title":"Angular (com ngx-datepicker)","text":"<pre><code>import { NgxDaterangepickerMd } from 'ngx-daterangepicker-material';\n\n&lt;ngx-daterangepicker-material\n  [(ngModel)]=\"dateRange\"\n  (ngModelChange)=\"handleDateChange($event)\"\n&gt;\n&lt;/ngx-daterangepicker-material&gt;\n</code></pre>"},{"location":"frontend/componentes/filtros/incident-filter.html#implementacao-dos-campos","title":"Implementa\u00e7\u00e3o dos Campos","text":""},{"location":"frontend/componentes/filtros/incident-filter.html#react_2","title":"React","text":"<pre><code>// DatePicker com Range\nconst DateRangeField = ({ label, startDate, endDate, onChange }) =&gt; (\n  &lt;div className=\"incident-filter-field\"&gt;\n    &lt;label className=\"incident-filter-label\"&gt;{label}&lt;/label&gt;\n    &lt;DatePicker\n      selectsRange\n      startDate={startDate}\n      endDate={endDate}\n      onChange={onChange}\n      dateFormat=\"dd/MM/yyyy\"\n      className=\"incident-filter-input\"\n      placeholderText=\"Selecione o per\u00edodo\"\n    /&gt;\n  &lt;/div&gt;\n);\n\n// Campo de Texto\nconst TextField = ({ label, value, onChange, placeholder }) =&gt; (\n  &lt;div className=\"incident-filter-field\"&gt;\n    &lt;label className=\"incident-filter-label\"&gt;{label}&lt;/label&gt;\n    &lt;input\n      type=\"text\"\n      value={value}\n      onChange={onChange}\n      placeholder={placeholder}\n      className=\"incident-filter-input\"\n    /&gt;\n  &lt;/div&gt;\n);\n\n// Campo Select\nconst SelectField = ({ label, value, onChange, options }) =&gt; (\n  &lt;div className=\"incident-filter-field\"&gt;\n    &lt;label className=\"incident-filter-label\"&gt;{label}&lt;/label&gt;\n    &lt;select\n      value={value}\n      onChange={onChange}\n      className=\"incident-filter-input\"\n    &gt;\n      {options.map(opt =&gt; (\n        &lt;option key={opt.value} value={opt.value}&gt;\n          {opt.label}\n        &lt;/option&gt;\n      ))}\n    &lt;/select&gt;\n  &lt;/div&gt;\n);\n</code></pre>"},{"location":"frontend/componentes/filtros/incident-filter.html#angular_2","title":"Angular","text":"<pre><code>// Campo de Data\n&lt;mat-form-field&gt;\n  &lt;mat-label&gt;{{label}}&lt;/mat-label&gt;\n  &lt;mat-date-range-input [formGroup]=\"range\" [rangePicker]=\"picker\"&gt;\n    &lt;input matStartDate formControlName=\"start\" placeholder=\"Data inicial\"&gt;\n    &lt;input matEndDate formControlName=\"end\" placeholder=\"Data final\"&gt;\n  &lt;/mat-date-range-input&gt;\n  &lt;mat-datepicker-toggle matSuffix [for]=\"picker\"&gt;&lt;/mat-datepicker-toggle&gt;\n  &lt;mat-date-range-picker #picker&gt;&lt;/mat-date-range-picker&gt;\n&lt;/mat-form-field&gt;\n\n// Campo de Texto\n&lt;mat-form-field&gt;\n  &lt;mat-label&gt;{{label}}&lt;/mat-label&gt;\n  &lt;input matInput [formControl]=\"control\" [placeholder]=\"placeholder\"&gt;\n&lt;/mat-form-field&gt;\n\n// Campo Select\n&lt;mat-form-field&gt;\n  &lt;mat-label&gt;{{label}}&lt;/mat-label&gt;\n  &lt;mat-select [formControl]=\"control\"&gt;\n    &lt;mat-option *ngFor=\"let opt of options\" [value]=\"opt.value\"&gt;\n      {{opt.label}}\n    &lt;/mat-option&gt;\n  &lt;/mat-select&gt;\n&lt;/mat-form-field&gt;\n</code></pre>"},{"location":"frontend/componentes/filtros/incident-filter.html#interface-de-filtros","title":"Interface de Filtros","text":"<pre><code>interface IncidentFilters {\n  incidente?: string;\n  status?: 'PENDING' | 'IN_PROGRESS' | 'RESOLVED' | 'CLOSED';\n  origem?: string;\n  categoria?: string;\n  subcategoria?: string;\n  detalhe_subcategoria?: string;\n  data_abertura_inicio?: Date;\n  data_abertura_fim?: Date;\n  data_fechamento_inicio?: Date;\n  data_fechamento_fim?: Date;\n  data_resolucao_inicio?: Date;\n  data_resolucao_fim?: Date;\n}\n</code></pre>"},{"location":"frontend/componentes/filtros/incident-filter.html#propsinputs","title":"Props/Inputs","text":""},{"location":"frontend/componentes/filtros/incident-filter.html#react-props","title":"React Props","text":"<pre><code>interface IncidentFilterProps {\n  filters: FilterState;\n  setFilters: (filters: FilterState) =&gt; void;\n  onApply: () =&gt; void;\n  onClose: () =&gt; void;\n}\n</code></pre>"},{"location":"frontend/componentes/filtros/incident-filter.html#angular-inputsoutputs","title":"Angular Inputs/Outputs","text":"<pre><code>@Input() filters: FilterState;\n@Output() filtersChange = new EventEmitter&lt;FilterState&gt;();\n@Output() apply = new EventEmitter&lt;void&gt;();\n@Output() close = new EventEmitter&lt;void&gt;();\n</code></pre>"},{"location":"frontend/componentes/filtros/incident-filter.html#dicas-de-migracao","title":"Dicas de Migra\u00e7\u00e3o","text":"<ol> <li>Forms e Valida\u00e7\u00e3o    ```jsx    // React    const handleSubmit = (e) =&gt; {      e.preventDefault();      if (isValid) onApply();    };</li> </ol> <p>// Angular       ```  2. **Two-way Binding**    ```jsx    // React    value={value} onChange={e =&gt; setValue(e.target.value)}     // Angular    [(ngModel)]=\"value\"    ```  3. **Refer\u00eancias a Elementos**    ```jsx    // React    const inputRef = useRef();     // Angular    @ViewChild('input') inputRef: ElementRef;    ```"},{"location":"frontend/componentes/flow/flow-cards.html","title":"Componente de Cards de Fluxo","text":""},{"location":"frontend/componentes/flow/flow-cards.html#visao-geral","title":"Vis\u00e3o Geral","text":"<p>Os <code>FlowCards</code> s\u00e3o componentes visuais que representam itens no fluxo de invent\u00e1rio.</p>"},{"location":"frontend/componentes/flow/flow-cards.html#comparacao-angular-vs-react","title":"Compara\u00e7\u00e3o Angular vs React","text":""},{"location":"frontend/componentes/flow/flow-cards.html#react","title":"React","text":"<pre><code>function FlowCard({ item, type, selected, onSelect }) {\n  const Icon = getIcon(type);\n\n  return (\n    &lt;div \n      className={`flow-card ${selected ? 'selected' : ''}`}\n      onClick={() =&gt; onSelect(item)}\n    &gt;\n      &lt;Icon /&gt;\n      &lt;div className=\"content\"&gt;{/* ... */}&lt;/div&gt;\n    &lt;/div&gt;\n  );\n}\n</code></pre>"},{"location":"frontend/componentes/flow/flow-cards.html#angular","title":"Angular","text":"<pre><code>@Component({\n  selector: 'app-flow-card',\n  template: `\n    &lt;div \n      class=\"flow-card\"\n      [class.selected]=\"selected\"\n      (click)=\"select.emit(item)\"\n    &gt;\n      &lt;i [class]=\"icon\"&gt;&lt;/i&gt;\n      &lt;div class=\"content\"&gt;...&lt;/div&gt;\n    &lt;/div&gt;\n  `\n})\nexport class FlowCardComponent {\n  @Input() item: any;\n  @Input() type: string;\n  @Input() selected: boolean;\n  @Output() select = new EventEmitter&lt;any&gt;();\n}\n</code></pre>"},{"location":"frontend/componentes/flow/flow-cards.html#funcionalidades","title":"Funcionalidades","text":""},{"location":"frontend/componentes/flow/flow-cards.html#1-icones-dinamicos","title":"1. \u00cdcones Din\u00e2micos","text":"<pre><code>// React\nconst getIcon = (type) =&gt; {\n  switch(type) {\n    case 'client': return FaBuilding;\n    case 'site': return FaServer;\n    default: return FaCog;\n  }\n};\n\n// Angular\ngetIcon(type: string): string {\n  switch(type) {\n    case 'client': return 'building';\n    case 'site': return 'server';\n    default: return 'cog';\n  }\n}\n</code></pre>"},{"location":"frontend/componentes/flow/flow-cards.html#2-estados-visuais","title":"2. Estados Visuais","text":"<pre><code>// React\n&lt;div className={`flow-card ${status}`}&gt;\n\n// Angular\n&lt;div [ngClass]=\"['flow-card', status]\"&gt;\n</code></pre>"},{"location":"frontend/componentes/flow/flow-cards.html#propsinputs","title":"Props/Inputs","text":""},{"location":"frontend/componentes/flow/flow-cards.html#react-props","title":"React Props","text":"<pre><code>interface FlowCardProps {\n  item: any;\n  type: string;\n  selected: boolean;\n  onSelect: (item: any) =&gt; void;\n}\n</code></pre>"},{"location":"frontend/componentes/flow/flow-cards.html#angular-inputsoutputs","title":"Angular Inputs/Outputs","text":"<pre><code>@Input() item: any;\n@Input() type: string;\n@Input() selected: boolean;\n@Output() select = new EventEmitter&lt;any&gt;();\n</code></pre>"},{"location":"frontend/componentes/flow/flow-cards.html#dicas-de-migracao","title":"Dicas de Migra\u00e7\u00e3o","text":"<ol> <li>Manipula\u00e7\u00e3o de Classes</li> <li>Angular: <code>[ngClass]</code></li> <li> <p>React: Template literals ou classnames</p> </li> <li> <p>Eventos</p> </li> <li>Angular: <code>(click)=\"onSelect()\"</code></li> <li> <p>React: <code>onClick={() =&gt; onSelect()}</code></p> </li> <li> <p>Renderiza\u00e7\u00e3o Condicional</p> </li> <li>Angular: <code>*ngIf</code></li> <li>React: <code>&amp;&amp;</code> ou operador tern\u00e1rio</li> </ol>"},{"location":"frontend/componentes/flow/flow-sections.html","title":"Componente de Se\u00e7\u00f5es do Fluxo","text":""},{"location":"frontend/componentes/flow/flow-sections.html#visao-geral","title":"Vis\u00e3o Geral","text":"<p>O componente <code>FlowSection</code> organiza os cards em se\u00e7\u00f5es hier\u00e1rquicas do invent\u00e1rio.</p>"},{"location":"frontend/componentes/flow/flow-sections.html#comparacao-angular-vs-react","title":"Compara\u00e7\u00e3o Angular vs React","text":""},{"location":"frontend/componentes/flow/flow-sections.html#react","title":"React","text":"<pre><code>function FlowSection({ \n  title, \n  items, \n  onSearch, \n  onSelect \n}) {\n  return (\n    &lt;div className=\"flow-section\"&gt;\n      &lt;header&gt;\n        &lt;h3&gt;{title}&lt;/h3&gt;\n        &lt;SearchInput onSearch={onSearch} /&gt;\n      &lt;/header&gt;\n      &lt;div className=\"cards-container\"&gt;\n        {items.map(item =&gt; (\n          &lt;FlowCard \n            key={item.id} \n            item={item} \n            onSelect={onSelect} \n          /&gt;\n        ))}\n      &lt;/div&gt;\n    &lt;/div&gt;\n  );\n}\n</code></pre>"},{"location":"frontend/componentes/flow/flow-sections.html#angular","title":"Angular","text":"<pre><code>@Component({\n  selector: 'app-flow-section',\n  template: `\n    &lt;div class=\"flow-section\"&gt;\n      &lt;header&gt;\n        &lt;h3&gt;{{title}}&lt;/h3&gt;\n        &lt;app-search (search)=\"search.emit($event)\"&gt;&lt;/app-search&gt;\n      &lt;/header&gt;\n      &lt;div class=\"cards-container\"&gt;\n        &lt;app-flow-card\n          *ngFor=\"let item of items\"\n          [item]=\"item\"\n          (select)=\"select.emit($event)\"\n        &gt;\n        &lt;/app-flow-card&gt;\n      &lt;/div&gt;\n    &lt;/div&gt;\n  `\n})\nexport class FlowSectionComponent {\n  @Input() title: string;\n  @Input() items: any[];\n  @Output() search = new EventEmitter&lt;string&gt;();\n  @Output() select = new EventEmitter&lt;any&gt;();\n}\n</code></pre>"},{"location":"frontend/componentes/flow/flow-sections.html#funcionalidades","title":"Funcionalidades","text":""},{"location":"frontend/componentes/flow/flow-sections.html#1-pesquisa-contextual","title":"1. Pesquisa Contextual","text":"<pre><code>// React\nconst [searchTerm, setSearchTerm] = useState('');\nconst handleSearch = (term) =&gt; {\n  setSearchTerm(term);\n  onSearch(term);\n};\n\n// Angular\nsearchTerm: string = '';\nhandleSearch(term: string): void {\n  this.searchTerm = term;\n  this.search.emit(term);\n}\n</code></pre>"},{"location":"frontend/componentes/flow/flow-sections.html#2-filtragem","title":"2. Filtragem","text":"<pre><code>// React\nconst filteredItems = items.filter(item =&gt; \n  item.name.toLowerCase().includes(searchTerm.toLowerCase())\n);\n\n// Angular\nget filteredItems() {\n  return this.items.filter(item =&gt; \n    item.name.toLowerCase().includes(this.searchTerm.toLowerCase())\n  );\n}\n</code></pre>"},{"location":"frontend/componentes/flow/flow-sections.html#propsinputs","title":"Props/Inputs","text":""},{"location":"frontend/componentes/flow/flow-sections.html#react-props","title":"React Props","text":"<pre><code>interface FlowSectionProps {\n  title: string;\n  items: any[];\n  onSearch: (term: string) =&gt; void;\n  onSelect: (item: any) =&gt; void;\n}\n</code></pre>"},{"location":"frontend/componentes/flow/flow-sections.html#angular-inputsoutputs","title":"Angular Inputs/Outputs","text":"<pre><code>@Input() title: string;\n@Input() items: any[];\n@Output() search = new EventEmitter&lt;string&gt;();\n@Output() select = new EventEmitter&lt;any&gt;();\n</code></pre>"},{"location":"frontend/componentes/flow/flow-sections.html#dicas-de-migracao","title":"Dicas de Migra\u00e7\u00e3o","text":"<ol> <li>Composi\u00e7\u00e3o de Componentes</li> <li>Angular: Tags de componente</li> <li> <p>React: Componentes como elementos JSX</p> </li> <li> <p>Ciclo de Vida</p> </li> <li>Angular: <code>ngOnInit</code>, <code>ngOnChanges</code></li> <li> <p>React: <code>useEffect</code></p> </li> <li> <p>Comunica\u00e7\u00e3o entre Componentes</p> </li> <li>Angular: <code>@Input()</code>, <code>@Output()</code></li> <li>React: Props e Callbacks</li> </ol>"},{"location":"frontend/componentes/header/header.html","title":"Componente Header","text":""},{"location":"frontend/componentes/header/header.html#visao-geral","title":"Vis\u00e3o Geral","text":"<p>O componente Header \u00e9 respons\u00e1vel pela navega\u00e7\u00e3o principal do sistema, exibindo o logo, menu de navega\u00e7\u00e3o e controles de usu\u00e1rio.</p>"},{"location":"frontend/componentes/header/header.html#estrutura-do-componente","title":"Estrutura do Componente","text":""},{"location":"frontend/componentes/header/header.html#react","title":"React","text":"<pre><code>function Header() {\n  const [menuOpen, setMenuOpen] = useState(false);\n  const { user, logout } = useAuth();\n  const navigate = useNavigate();\n\n  return (\n    &lt;header className=\"app-header\"&gt;\n      &lt;div className=\"app-header-content\"&gt;\n        {/* Estrutura do header */}\n      &lt;/div&gt;\n    &lt;/header&gt;\n  );\n}\n</code></pre>"},{"location":"frontend/componentes/header/header.html#angular","title":"Angular","text":"<pre><code>@Component({\n  selector: 'app-header',\n  template: `\n    &lt;header class=\"app-header\"&gt;\n      &lt;div class=\"app-header-content\"&gt;\n        &lt;!-- Estrutura do header --&gt;\n      &lt;/div&gt;\n    &lt;/header&gt;\n  `\n})\nexport class HeaderComponent {\n  menuOpen = false;\n  user: User;\n\n  constructor(\n    private authService: AuthService,\n    private router: Router\n  ) {\n    this.user = this.authService.currentUser;\n  }\n}\n</code></pre>"},{"location":"frontend/componentes/header/header.html#menu-de-navegacao","title":"Menu de Navega\u00e7\u00e3o","text":""},{"location":"frontend/componentes/header/header.html#estrutura-do-menu-react","title":"Estrutura do Menu (React)","text":"<pre><code>interface MenuItem {\n  icon: ReactNode;\n  text: string;\n  submenu?: {\n    to: string;\n    icon: ReactNode;\n    text: string;\n  }[];\n  to?: string;\n}\n\nconst menuItems: MenuItem[] = [\n  { \n    icon: &lt;FaDatabase /&gt;, \n    text: \"Invent\u00e1rio\",\n    submenu: [\n      { to: \"/inventario\", icon: &lt;FaDatabase /&gt;, text: \"Acessar Invent\u00e1rio\" },\n      { to: \"/inventario/flow\", icon: &lt;FaThLarge /&gt;, text: \"Fluxo de Invent\u00e1rio\" }\n    ]\n  },\n  { to: \"/incidentes\", icon: &lt;FaChartBar /&gt;, text: \"Gest\u00e3o de Incidentes\" }\n];\n</code></pre>"},{"location":"frontend/componentes/header/header.html#estrutura-do-menu-angular","title":"Estrutura do Menu (Angular)","text":"<pre><code>interface MenuItem {\n  icon: string;\n  text: string;\n  submenu?: {\n    route: string;\n    icon: string;\n    text: string;\n  }[];\n  route?: string;\n}\n\nconst menuItems: MenuItem[] = [\n  {\n    icon: 'database',\n    text: 'Invent\u00e1rio',\n    submenu: [\n      { route: '/inventario', icon: 'database', text: 'Acessar Invent\u00e1rio' },\n      { route: '/inventario/flow', icon: 'th-large', text: 'Fluxo de Invent\u00e1rio' }\n    ]\n  },\n  { route: '/incidentes', icon: 'chart-bar', text: 'Gest\u00e3o de Incidentes' }\n];\n</code></pre>"},{"location":"frontend/componentes/header/header.html#menu-mobile","title":"Menu Mobile","text":""},{"location":"frontend/componentes/header/header.html#react-hooks","title":"React (Hooks)","text":"<pre><code>const [menuOpen, setMenuOpen] = useState(false);\n\nconst toggleMenu = () =&gt; {\n  setMenuOpen(!menuOpen);\n};\n</code></pre>"},{"location":"frontend/componentes/header/header.html#angular-property-binding","title":"Angular (Property Binding)","text":"<pre><code>menuOpen = false;\n\ntoggleMenu(): void {\n  this.menuOpen = !this.menuOpen;\n}\n</code></pre>"},{"location":"frontend/componentes/header/header.html#autenticacao-e-navegacao","title":"Autentica\u00e7\u00e3o e Navega\u00e7\u00e3o","text":""},{"location":"frontend/componentes/header/header.html#react-context-e-hooks","title":"React (Context e Hooks)","text":"<pre><code>const { user, logout } = useAuth();\nconst navigate = useNavigate();\n\nconst handleLogout = async () =&gt; {\n  await logout();\n  navigate('/login');\n};\n</code></pre>"},{"location":"frontend/componentes/header/header.html#angular-service-e-router","title":"Angular (Service e Router)","text":"<pre><code>constructor(\n  private authService: AuthService,\n  private router: Router\n) {}\n\nasync handleLogout(): Promise&lt;void&gt; {\n  await this.authService.logout();\n  this.router.navigate(['/login']);\n}\n</code></pre>"},{"location":"frontend/componentes/header/header.html#menu-do-usuario","title":"Menu do Usu\u00e1rio","text":""},{"location":"frontend/componentes/header/header.html#react-jsx","title":"React (JSX)","text":"<pre><code>&lt;li className=\"user-menu\"&gt;\n  &lt;span className=\"user-name\"&gt;\n    &lt;FaUser /&gt;\n    &lt;span&gt;{`${user?.first_name || ''} ${user?.last_name || ''}`}&lt;/span&gt;\n  &lt;/span&gt;\n  &lt;ul className=\"user-submenu\"&gt;\n    &lt;li&gt;\n      &lt;Link to=\"/perfil/senha\"&gt;\n        &lt;FaKey /&gt;\n        &lt;span&gt;Alterar Senha&lt;/span&gt;\n      &lt;/Link&gt;\n    &lt;/li&gt;\n    &lt;li&gt;\n      &lt;button onClick={handleLogout}&gt;\n        &lt;FaSignOutAlt /&gt;\n        &lt;span&gt;Sair&lt;/span&gt;\n      &lt;/button&gt;\n    &lt;/li&gt;\n  &lt;/ul&gt;\n&lt;/li&gt;\n</code></pre>"},{"location":"frontend/componentes/header/header.html#angular-template","title":"Angular (Template)","text":"<pre><code>&lt;li class=\"user-menu\"&gt;\n  &lt;span class=\"user-name\"&gt;\n    &lt;i class=\"fas fa-user\"&gt;&lt;/i&gt;\n    &lt;span&gt;{{ user?.firstName }} {{ user?.lastName }}&lt;/span&gt;\n  &lt;/span&gt;\n  &lt;ul class=\"user-submenu\"&gt;\n    &lt;li&gt;\n      &lt;a [routerLink]=\"['/perfil/senha']\"&gt;\n        &lt;i class=\"fas fa-key\"&gt;&lt;/i&gt;\n        &lt;span&gt;Alterar Senha&lt;/span&gt;\n      &lt;/a&gt;\n    &lt;/li&gt;\n    &lt;li&gt;\n      &lt;button (click)=\"handleLogout()\"&gt;\n        &lt;i class=\"fas fa-sign-out-alt\"&gt;&lt;/i&gt;\n        &lt;span&gt;Sair&lt;/span&gt;\n      &lt;/button&gt;\n    &lt;/li&gt;\n  &lt;/ul&gt;\n&lt;/li&gt;\n</code></pre>"},{"location":"frontend/componentes/header/header.html#responsividade","title":"Responsividade","text":""},{"location":"frontend/componentes/header/header.html#hamburger-menu","title":"Hamburger Menu","text":"<pre><code>// React\n&lt;div className={`hamburger ${menuOpen ? 'active' : ''}`} onClick={toggleMenu}&gt;\n  &lt;span className=\"bar\"&gt;&lt;/span&gt;\n  &lt;span className=\"bar\"&gt;&lt;/span&gt;\n  &lt;span className=\"bar\"&gt;&lt;/span&gt;\n&lt;/div&gt;\n\n// Angular\n&lt;div \n  class=\"hamburger\"\n  [class.active]=\"menuOpen\"\n  (click)=\"toggleMenu()\"\n&gt;\n  &lt;span class=\"bar\"&gt;&lt;/span&gt;\n  &lt;span class=\"bar\"&gt;&lt;/span&gt;\n  &lt;span class=\"bar\"&gt;&lt;/span&gt;\n&lt;/div&gt;\n</code></pre>"},{"location":"frontend/componentes/header/header.html#dicas-de-migracao","title":"Dicas de Migra\u00e7\u00e3o","text":"<ol> <li>Gerenciamento de Estado</li> <li>Angular: Services e BehaviorSubject</li> <li> <p>React: Context API e useState</p> </li> <li> <p>Navega\u00e7\u00e3o</p> </li> <li>Angular: Router e routerLink</li> <li> <p>React: React Router e useNavigate</p> </li> <li> <p>Eventos</p> </li> <li>Angular: (click)=\"handler()\"</li> <li> <p>React: onClick={handler}</p> </li> <li> <p>Classes Condicionais</p> </li> <li>Angular: [ngClass]=\"{ 'active': isActive }\"</li> <li>React: className={<code>menu ${isActive ? 'active' : ''}</code>}</li> </ol>"},{"location":"frontend/componentes/header/header.html#consideracoes-de-performance","title":"Considera\u00e7\u00f5es de Performance","text":"<ol> <li>Evitar re-renderiza\u00e7\u00f5es desnecess\u00e1rias</li> <li>Implementar memo() para subcomponentes est\u00e1ticos</li> <li>Usar lazy loading para rotas</li> <li>Otimizar manipula\u00e7\u00e3o de eventos no menu mobile</li> </ol>"},{"location":"frontend/componentes/tables/incident-table.html","title":"Componente de Tabela de Incidentes","text":""},{"location":"frontend/componentes/tables/incident-table.html#visao-geral","title":"Vis\u00e3o Geral","text":"<p>O componente <code>IncidentTable</code> exibe os incidentes em formato tabular com recursos de pagina\u00e7\u00e3o e formata\u00e7\u00e3o.</p>"},{"location":"frontend/componentes/tables/incident-table.html#comparacao-angular-vs-react","title":"Compara\u00e7\u00e3o Angular vs React","text":""},{"location":"frontend/componentes/tables/incident-table.html#react","title":"React","text":"<pre><code>function IncidentTable({ data, loading, onPageChange }) {\n  return (\n    &lt;div className=\"table-container\"&gt;\n      &lt;table&gt;\n        &lt;thead&gt;{/* ... */}&lt;/thead&gt;\n        &lt;tbody&gt;\n          {data.map(incident =&gt; (\n            &lt;tr key={incident.id}&gt;{/* ... */}&lt;/tr&gt;\n          ))}\n        &lt;/tbody&gt;\n      &lt;/table&gt;\n    &lt;/div&gt;\n  );\n}\n</code></pre>"},{"location":"frontend/componentes/tables/incident-table.html#angular","title":"Angular","text":"<pre><code>@Component({\n  selector: 'app-incident-table',\n  template: `\n    &lt;div class=\"table-container\"&gt;\n      &lt;table&gt;\n        &lt;thead&gt;...&lt;/thead&gt;\n        &lt;tbody&gt;\n          &lt;tr *ngFor=\"let incident of data\"&gt;\n            ...\n          &lt;/tr&gt;\n        &lt;/tbody&gt;\n      &lt;/table&gt;\n    &lt;/div&gt;\n  `\n})\nexport class IncidentTableComponent {\n  @Input() data: any[];\n  @Output() pageChange = new EventEmitter&lt;number&gt;();\n}\n</code></pre>"},{"location":"frontend/componentes/tables/incident-table.html#formatacao-de-dados","title":"Formata\u00e7\u00e3o de Dados","text":""},{"location":"frontend/componentes/tables/incident-table.html#react_1","title":"React","text":"<pre><code>const formatDate = (dateString) =&gt; {\n  if (!dateString) return '-';\n  return new Date(dateString).toLocaleDateString('pt-BR');\n};\n</code></pre>"},{"location":"frontend/componentes/tables/incident-table.html#angular_1","title":"Angular","text":"<pre><code>formatDate(dateString: string): string {\n  if (!dateString) return '-';\n  return new Date(dateString).toLocaleDateString('pt-BR');\n}\n</code></pre>"},{"location":"frontend/componentes/tables/incident-table.html#propsinputs","title":"Props/Inputs","text":""},{"location":"frontend/componentes/tables/incident-table.html#react-props","title":"React Props","text":"<pre><code>interface IncidentTableProps {\n  data: Incident[];\n  loading: boolean;\n  onPageChange: (page: number) =&gt; void;\n  totalPages: number;\n  currentPage: number;\n}\n</code></pre>"},{"location":"frontend/componentes/tables/incident-table.html#angular-inputsoutputs","title":"Angular Inputs/Outputs","text":"<pre><code>@Input() data: Incident[];\n@Input() loading: boolean;\n@Input() totalPages: number;\n@Input() currentPage: number;\n@Output() pageChange = new EventEmitter&lt;number&gt;();\n</code></pre>"},{"location":"frontend/componentes/tables/incident-table.html#dicas-de-migracao","title":"Dicas de Migra\u00e7\u00e3o","text":"<ol> <li>Renderiza\u00e7\u00e3o de Listas    ```jsx    // React    {data.map(item =&gt; )}</li> </ol> <p>// Angular       ```  2. **Formata\u00e7\u00e3o de Dados**    ```jsx    // React    const formattedDate = useMemo(() =&gt; formatDate(date), [date]);     // Angular    get formattedDate() { return this.formatDate(this.date); }    ```  3. **Loading States**    ```jsx    // React    if (loading) return ;     // Angular        ```"},{"location":"frontend/componentes/tables/inventory-table.html","title":"Componente de Tabela de Invent\u00e1rio","text":""},{"location":"frontend/componentes/tables/inventory-table.html#visao-geral","title":"Vis\u00e3o Geral","text":"<p>O componente <code>InventoryTable</code> \u00e9 respons\u00e1vel pela exibi\u00e7\u00e3o e manipula\u00e7\u00e3o dos dados em formato tabular.</p>"},{"location":"frontend/componentes/tables/inventory-table.html#comparacao-angular-vs-react","title":"Compara\u00e7\u00e3o Angular vs React","text":""},{"location":"frontend/componentes/tables/inventory-table.html#react","title":"React","text":"<pre><code>function InventoryTable({ data, type, onPageChange }) {\n  const [editingId, setEditingId] = useState(null);\n\n  return (\n    &lt;table className=\"inventory-table\"&gt;\n      &lt;thead&gt;{/* ... */}&lt;/thead&gt;\n      &lt;tbody&gt;\n        {data.map(item =&gt; (\n          &lt;tr key={item.id}&gt;\n            {/* C\u00e9lulas da tabela */}\n          &lt;/tr&gt;\n        ))}\n      &lt;/tbody&gt;\n    &lt;/table&gt;\n  );\n}\n</code></pre>"},{"location":"frontend/componentes/tables/inventory-table.html#angular","title":"Angular","text":"<pre><code>@Component({\n  selector: 'app-inventory-table',\n  template: `\n    &lt;table class=\"inventory-table\"&gt;\n      &lt;thead&gt;...&lt;/thead&gt;\n      &lt;tbody&gt;\n        &lt;tr *ngFor=\"let item of data\"&gt;\n          &lt;!-- C\u00e9lulas da tabela --&gt;\n        &lt;/tr&gt;\n      &lt;/tbody&gt;\n    &lt;/table&gt;\n  `\n})\nexport class InventoryTableComponent {\n  @Input() data: any[];\n  @Input() type: string;\n  @Output() pageChange = new EventEmitter&lt;number&gt;();\n}\n</code></pre>"},{"location":"frontend/componentes/tables/inventory-table.html#recursos-principais","title":"Recursos Principais","text":""},{"location":"frontend/componentes/tables/inventory-table.html#1-edicao-inline","title":"1. Edi\u00e7\u00e3o Inline","text":"<pre><code>// React\nconst handleEdit = (id) =&gt; {\n  setEditingId(id);\n};\n\n// Angular\neditItem(id: number): void {\n  this.editingId = id;\n}\n</code></pre>"},{"location":"frontend/componentes/tables/inventory-table.html#2-paginacao","title":"2. Pagina\u00e7\u00e3o","text":"<pre><code>// React\nconst Pagination = ({ current, total, onChange }) =&gt; (\n  &lt;div className=\"pagination\"&gt;\n    &lt;button onClick={() =&gt; onChange(current - 1)}&gt;Anterior&lt;/button&gt;\n    &lt;span&gt;{current} de {total}&lt;/span&gt;\n    &lt;button onClick={() =&gt; onChange(current + 1)}&gt;Pr\u00f3ximo&lt;/button&gt;\n  &lt;/div&gt;\n);\n\n// Angular\n&lt;app-pagination\n  [currentPage]=\"currentPage\"\n  [totalPages]=\"totalPages\"\n  (pageChange)=\"onPageChange($event)\"\n&gt;\n&lt;/app-pagination&gt;\n</code></pre>"},{"location":"frontend/componentes/tables/inventory-table.html#3-ordenacao","title":"3. Ordena\u00e7\u00e3o","text":"<pre><code>// React\nconst [sortConfig, setSortConfig] = useState({ key: null, direction: 'asc' });\n\n// Angular\nsortConfig = { key: null, direction: 'asc' };\n</code></pre>"},{"location":"frontend/componentes/tables/inventory-table.html#propsinputs","title":"Props/Inputs","text":""},{"location":"frontend/componentes/tables/inventory-table.html#react-props","title":"React Props","text":"<pre><code>interface InventoryTableProps {\n  data: any[];\n  type: string;\n  loading?: boolean;\n  onPageChange: (page: number) =&gt; void;\n  totalPages: number;\n  currentPage: number;\n}\n</code></pre>"},{"location":"frontend/componentes/tables/inventory-table.html#angular-inputsoutputs","title":"Angular Inputs/Outputs","text":"<pre><code>@Input() data: any[];\n@Input() type: string;\n@Input() loading: boolean;\n@Input() totalPages: number;\n@Input() currentPage: number;\n@Output() pageChange = new EventEmitter&lt;number&gt;();\n</code></pre>"},{"location":"frontend/componentes/tables/inventory-table.html#dicas-de-migracao","title":"Dicas de Migra\u00e7\u00e3o","text":"<ol> <li>Renderiza\u00e7\u00e3o Condicional</li> <li>Angular: <code>*ngIf</code></li> <li> <p>React: Operador &amp;&amp; ou tern\u00e1rio</p> </li> <li> <p>Loops</p> </li> <li>Angular: <code>*ngFor</code></li> <li> <p>React: <code>.map()</code></p> </li> <li> <p>Eventos</p> </li> <li>Angular: <code>(click)=\"handleClick()\"</code></li> <li> <p>React: <code>onClick={handleClick}</code></p> </li> <li> <p>Classes Condicionais</p> </li> <li>Angular: <code>[ngClass]=\"{ 'active': isActive }\"</code></li> <li>React: <code>className={isActive ? 'active' : ''}</code></li> </ol>"},{"location":"frontend/p%C3%A1ginas/index.html","title":"P\u00e1ginas do Sistema","text":""},{"location":"frontend/p%C3%A1ginas/index.html#autenticacao-e-acesso","title":"Autentica\u00e7\u00e3o e Acesso","text":"<ul> <li>Login: P\u00e1gina de autentica\u00e7\u00e3o do sistema</li> <li>Password: P\u00e1gina de altera\u00e7\u00e3o de senha</li> <li>Welcome: P\u00e1gina inicial ap\u00f3s o login</li> </ul>"},{"location":"frontend/p%C3%A1ginas/index.html#modulos-principais","title":"M\u00f3dulos Principais","text":""},{"location":"frontend/p%C3%A1ginas/index.html#inventario","title":"Invent\u00e1rio","text":"<ul> <li>Vis\u00e3o Tabular: Gerenciamento em formato de tabela</li> <li>Vis\u00e3o em Fluxo: Visualiza\u00e7\u00e3o hier\u00e1rquica</li> <li>Componentes:</li> <li>Tabela de Invent\u00e1rio</li> <li>Filtros</li> <li>Cards de Fluxo</li> <li>Se\u00e7\u00f5es de Fluxo</li> </ul>"},{"location":"frontend/p%C3%A1ginas/index.html#incidentes","title":"Incidentes","text":"<ul> <li>Gest\u00e3o de Incidentes: Controle e acompanhamento</li> <li>Componentes:</li> <li>Tabela de Incidentes</li> <li>Filtros de Incidentes</li> </ul>"},{"location":"frontend/p%C3%A1ginas/index.html#guias-de-migracao-angular-react","title":"Guias de Migra\u00e7\u00e3o Angular \u2192 React","text":"<ul> <li>Compara\u00e7\u00e3o de Sintaxe</li> <li>Padr\u00f5es de Componentes</li> </ul>"},{"location":"frontend/p%C3%A1ginas/index.html#documentacao-relacionada","title":"Documenta\u00e7\u00e3o Relacionada","text":"<ul> <li>Estilos CSS: Documenta\u00e7\u00e3o dos estilos espec\u00edficos de cada p\u00e1gina</li> </ul>"},{"location":"frontend/p%C3%A1ginas/css/index.html","title":"P\u00e1ginas do Sistema","text":"<p>Esta se\u00e7\u00e3o cont\u00e9m a documenta\u00e7\u00e3o detalhada de todas as p\u00e1ginas do sistema.</p>"},{"location":"frontend/p%C3%A1ginas/css/index.html#estrutura-de-paginas","title":"Estrutura de P\u00e1ginas","text":"<ul> <li>Login: P\u00e1gina de autentica\u00e7\u00e3o do sistema</li> <li>Dashboard: P\u00e1gina inicial ap\u00f3s o login</li> <li>Invent\u00e1rio: P\u00e1ginas relacionadas \u00e0 gest\u00e3o de invent\u00e1rio</li> <li>Incidentes: P\u00e1ginas de gest\u00e3o de incidentes</li> </ul>"},{"location":"frontend/p%C3%A1ginas/css/index.html#documentacao-de-estilos-css","title":"Documenta\u00e7\u00e3o de Estilos CSS","text":"<p>Este documento cont\u00e9m a documenta\u00e7\u00e3o detalhada de todos os estilos CSS utilizados no sistema.</p>"},{"location":"frontend/p%C3%A1ginas/css/index.html#indice-de-estilos","title":"\u00cdndice de Estilos","text":""},{"location":"frontend/p%C3%A1ginas/css/index.html#1-header-headercss","title":"1. Header (Header.css)","text":"<ul> <li>Barra de navega\u00e7\u00e3o principal</li> <li>Menu responsivo</li> <li>Submenu do usu\u00e1rio</li> <li>Estilos do logotipo</li> <li>Adapta\u00e7\u00f5es mobile</li> </ul>"},{"location":"frontend/p%C3%A1ginas/css/index.html#2-paginas-de-autenticacao","title":"2. P\u00e1ginas de Autentica\u00e7\u00e3o","text":""},{"location":"frontend/p%C3%A1ginas/css/index.html#login-loginpagecss","title":"Login (LoginPage.css)","text":"<ul> <li>Container principal</li> <li>Card de login</li> <li>Formul\u00e1rio de autentica\u00e7\u00e3o</li> <li>Estilos de inputs</li> <li>Bot\u00f5es de a\u00e7\u00e3o</li> <li>Mensagens de erro</li> <li>Adapta\u00e7\u00e3o responsiva</li> </ul>"},{"location":"frontend/p%C3%A1ginas/css/index.html#3-paginas-do-sistema","title":"3. P\u00e1ginas do Sistema","text":""},{"location":"frontend/p%C3%A1ginas/css/index.html#boas-vindas-welcomepagecss","title":"Boas-vindas (WelcomePage.css)","text":"<ul> <li>Container principal com background gradiente</li> <li>Cards de funcionalidades</li> <li>Efeitos de hover</li> <li>Formas geom\u00e9tricas animadas</li> <li>Grid responsivo de cards</li> <li>\u00cdcones e subt\u00edtulos</li> <li>Estados desabilitados</li> </ul>"},{"location":"frontend/p%C3%A1ginas/css/index.html#perfil-profilepagecss","title":"Perfil (ProfilePage.css)","text":"<ul> <li>Layout do perfil</li> <li>Formul\u00e1rio de edi\u00e7\u00e3o</li> <li>Campos de entrada</li> <li>Mensagens de feedback</li> <li>Bot\u00f5es de a\u00e7\u00e3o</li> <li>Estilos responsivos</li> </ul>"},{"location":"frontend/p%C3%A1ginas/css/index.html#senha-passwordpagecss","title":"Senha (PasswordPage.css)","text":"<ul> <li>Container principal</li> <li>Card de altera\u00e7\u00e3o de senha</li> <li>Formul\u00e1rio de senha</li> <li>Valida\u00e7\u00f5es visuais</li> <li>Mensagens de erro/sucesso</li> <li>Adapta\u00e7\u00f5es mobile</li> </ul>"},{"location":"frontend/p%C3%A1ginas/css/index.html#4-sistema-de-inventario","title":"4. Sistema de Invent\u00e1rio","text":""},{"location":"frontend/p%C3%A1ginas/css/index.html#pagina-principal-inventorypagecss","title":"P\u00e1gina Principal (InventoryPage.css)","text":"<ul> <li>Layout da p\u00e1gina</li> <li>Header com a\u00e7\u00f5es</li> <li>Sistema de tabs</li> <li>Container de tabelas</li> <li>Dropdown de a\u00e7\u00f5es</li> <li>Adapta\u00e7\u00e3o responsiva</li> </ul>"},{"location":"frontend/p%C3%A1ginas/css/index.html#tabelas-de-inventario-inventorytablescss","title":"Tabelas de Invent\u00e1rio (InventoryTables.css)","text":"<ul> <li>Estrutura da tabela</li> <li>Cabe\u00e7alhos fixos</li> <li>C\u00e9lulas de dados</li> <li>Estados de linha</li> <li>Sistema de pagina\u00e7\u00e3o</li> <li>Filtros avan\u00e7ados</li> <li>Controles de tabela</li> <li>Toggle de status</li> <li>Mensagens de estado vazio</li> </ul>"},{"location":"frontend/p%C3%A1ginas/css/index.html#fluxo-de-inventario-inventoryflowcss","title":"Fluxo de Invent\u00e1rio (InventoryFlow.css)","text":"<ul> <li>Grid de se\u00e7\u00f5es</li> <li>Cards de itens</li> <li>Indicadores de status</li> <li>Sistema de busca</li> <li>Pagina\u00e7\u00e3o de itens</li> <li>Headers de se\u00e7\u00e3o</li> <li>Estilos responsivos</li> </ul>"},{"location":"frontend/p%C3%A1ginas/css/index.html#filtros-filterdropdowncss","title":"Filtros (FilterDropdown.css)","text":"<ul> <li>Dropdown de filtros</li> <li>Campos de filtro</li> <li>Busca de clientes</li> <li>Bot\u00f5es de a\u00e7\u00e3o</li> <li>Valida\u00e7\u00f5es de campo</li> <li>Estados de input</li> <li>Mensagens de erro</li> <li>Layout responsivo</li> </ul>"},{"location":"frontend/p%C3%A1ginas/css/index.html#convencoes-de-nomenclatura","title":"Conven\u00e7\u00f5es de Nomenclatura","text":"<ul> <li>Prefixos espec\u00edficos por p\u00e1gina (ex: <code>inventory-</code>, <code>profile-</code>, <code>welcome-</code>)</li> <li>Classes BEM para componentes</li> <li>Utilit\u00e1rios com prefixo espec\u00edfico</li> <li>Estados com sufixos descritivos (<code>-active</code>, <code>-disabled</code>)</li> </ul>"},{"location":"frontend/p%C3%A1ginas/css/index.html#variaveis-e-temas","title":"Vari\u00e1veis e Temas","text":""},{"location":"frontend/p%C3%A1ginas/css/index.html#cores-principais","title":"Cores Principais","text":"<ul> <li>Roxo prim\u00e1rio: <code>#670099</code></li> <li>Rosa secund\u00e1rio: <code>#D8337D</code></li> <li>Gradientes personalizados</li> <li>Cores de estado (sucesso, erro, alerta)</li> </ul>"},{"location":"frontend/p%C3%A1ginas/css/index.html#breakpoints-responsivos","title":"Breakpoints Responsivos","text":"<ul> <li>Mobile: max-width 768px</li> <li>Tablet: max-width 1024px</li> <li>Desktop: min-width 1025px</li> </ul>"},{"location":"frontend/p%C3%A1ginas/css/index.html#boas-praticas","title":"Boas Pr\u00e1ticas","text":"<ol> <li>Uso de prefixos para evitar conflitos</li> <li>Estrutura modular por componente</li> <li>Responsividade mobile-first</li> <li>Reutiliza\u00e7\u00e3o de vari\u00e1veis CSS</li> <li>Organiza\u00e7\u00e3o por especificidade</li> <li>Documenta\u00e7\u00e3o inline de componentes complexos</li> </ol>"},{"location":"frontend/p%C3%A1ginas/paginas/index.html","title":"P\u00e1ginas do Sistema","text":""},{"location":"frontend/p%C3%A1ginas/paginas/index.html#autenticacao-e-acesso","title":"Autentica\u00e7\u00e3o e Acesso","text":"<ul> <li>Login: P\u00e1gina de autentica\u00e7\u00e3o do sistema</li> <li>Password: P\u00e1gina de altera\u00e7\u00e3o de senha</li> <li>Welcome: P\u00e1gina inicial ap\u00f3s o login</li> </ul>"},{"location":"frontend/p%C3%A1ginas/paginas/index.html#modulos-principais","title":"M\u00f3dulos Principais","text":""},{"location":"frontend/p%C3%A1ginas/paginas/index.html#inventario","title":"Invent\u00e1rio","text":"<ul> <li>Vis\u00e3o Tabular: Gerenciamento em formato de tabela</li> <li>Vis\u00e3o em Fluxo: Visualiza\u00e7\u00e3o hier\u00e1rquica</li> <li>Componentes:</li> <li>Tabela de Invent\u00e1rio</li> <li>Filtros</li> <li>Cards de Fluxo</li> <li>Se\u00e7\u00f5es de Fluxo</li> </ul>"},{"location":"frontend/p%C3%A1ginas/paginas/index.html#incidentes","title":"Incidentes","text":"<ul> <li>Gest\u00e3o de Incidentes: Controle e acompanhamento</li> <li>Componentes:</li> <li>Tabela de Incidentes</li> <li>Filtros de Incidentes</li> </ul>"},{"location":"frontend/p%C3%A1ginas/paginas/index.html#guias-de-migracao-angular-react","title":"Guias de Migra\u00e7\u00e3o Angular \u2192 React","text":"<ul> <li>Compara\u00e7\u00e3o de Sintaxe</li> <li>Padr\u00f5es de Componentes</li> </ul>"},{"location":"frontend/p%C3%A1ginas/paginas/index.html#documentacao-relacionada","title":"Documenta\u00e7\u00e3o Relacionada","text":"<ul> <li>Estilos CSS: Documenta\u00e7\u00e3o dos estilos espec\u00edficos de cada p\u00e1gina</li> </ul>"},{"location":"frontend/p%C3%A1ginas/paginas/incidentes.html","title":"P\u00e1gina de Gest\u00e3o de Incidentes","text":""},{"location":"frontend/p%C3%A1ginas/paginas/incidentes.html#visao-geral","title":"Vis\u00e3o Geral","text":"<p>A p\u00e1gina de gest\u00e3o de incidentes permite visualizar e gerenciar ocorr\u00eancias do sistema. Esta documenta\u00e7\u00e3o compara as implementa\u00e7\u00f5es React e Angular.</p>"},{"location":"frontend/p%C3%A1ginas/paginas/incidentes.html#principais-diferencas","title":"Principais Diferen\u00e7as","text":""},{"location":"frontend/p%C3%A1ginas/paginas/incidentes.html#estrutura-do-componente","title":"Estrutura do Componente","text":""},{"location":"frontend/p%C3%A1ginas/paginas/incidentes.html#react-hooks","title":"React (Hooks)","text":"<pre><code>function IncidentManagementPage() {\n  const [activeTab, setActiveTab] = useState('incidents');\n  const [filters, setFilters] = useState({});\n  const [tableData, setTableData] = useState([]);\n\n  useEffect(() =&gt; {\n    fetchData();\n  }, [filters, activeTab]);\n\n  return (\n    &lt;div className=\"inventory-page\"&gt;\n      {/* Estrutura da p\u00e1gina */}\n    &lt;/div&gt;\n  );\n}\n</code></pre>"},{"location":"frontend/p%C3%A1ginas/paginas/incidentes.html#angular-component","title":"Angular (Component)","text":"<pre><code>@Component({\n  selector: 'app-incident-management',\n  templateUrl: './incident-management.component.html'\n})\nexport class IncidentManagementComponent implements OnInit {\n  activeTab = 'incidents';\n  filters = {};\n  tableData = [];\n\n  ngOnInit() {\n    this.fetchData();\n  }\n}\n</code></pre>"},{"location":"frontend/p%C3%A1ginas/paginas/incidentes.html#gerenciamento-de-estado","title":"Gerenciamento de Estado","text":""},{"location":"frontend/p%C3%A1ginas/paginas/incidentes.html#react","title":"React","text":"<pre><code>const [tableData, setTableData] = useState([]);\nconst [loading, setLoading] = useState(false);\nconst [totalPages, setTotalPages] = useState(1);\n</code></pre>"},{"location":"frontend/p%C3%A1ginas/paginas/incidentes.html#angular","title":"Angular","text":"<pre><code>tableData: Incident[] = [];\nloading = false;\ntotalPages = 1;\n</code></pre>"},{"location":"frontend/p%C3%A1ginas/paginas/incidentes.html#integracao-com-api","title":"Integra\u00e7\u00e3o com API","text":""},{"location":"frontend/p%C3%A1ginas/paginas/incidentes.html#react-fetch-api","title":"React (Fetch API)","text":"<pre><code>const fetchData = async (page = 1) =&gt; {\n  try {\n    setLoading(true);\n    const response = await api.get(`/incidentes/list/?${queryString}`);\n    setTableData(response.data.results);\n  } catch (error) {\n    console.error('Erro:', error);\n  }\n};\n</code></pre>"},{"location":"frontend/p%C3%A1ginas/paginas/incidentes.html#angular-httpclient","title":"Angular (HttpClient)","text":"<pre><code>fetchData(page = 1) {\n  this.loading = true;\n  this.http.get(`/api/incidentes/list/?${queryString}`)\n    .subscribe(\n      (data: any) =&gt; {\n        this.tableData = data.results;\n      },\n      error =&gt; console.error('Erro:', error)\n    );\n}\n</code></pre>"},{"location":"frontend/p%C3%A1ginas/paginas/incidentes.html#componentes-principais","title":"Componentes Principais","text":"<ol> <li>Tabela de Incidentes</li> <li>Exibi\u00e7\u00e3o dos incidentes</li> <li>Pagina\u00e7\u00e3o</li> <li> <p>Ordena\u00e7\u00e3o</p> </li> <li> <p>Filtros de Incidentes</p> </li> <li>Filtragem por m\u00faltiplos crit\u00e9rios</li> <li>Busca por per\u00edodo</li> <li>Filtros combinados</li> </ol>"},{"location":"frontend/p%C3%A1ginas/paginas/incidentes.html#consideracoes-de-performance","title":"Considera\u00e7\u00f5es de Performance","text":"<ol> <li>Pagina\u00e7\u00e3o: Implementada para grandes conjuntos de dados</li> <li>Filtragem: Executada no servidor</li> <li>Carregamento: Estados de loading para feedback</li> <li>Cache: Armazenamento tempor\u00e1rio de dados filtrados</li> </ol>"},{"location":"frontend/p%C3%A1ginas/paginas/incidentes.html#migracao-angular-react","title":"Migra\u00e7\u00e3o Angular \u2192 React","text":"<ol> <li>Servi\u00e7os \u2192 Hooks    ```jsx    // React    const [data, setData] = useState([]);    useEffect(() =&gt; { fetchData(); }, []);</li> </ol> <p>// Angular    export class IncidentService {      getData() { / ... / }    }    ```</p> <ol> <li>Templates \u2192 JSX    ```jsx    // React    return {data.map(item =&gt; )}</li> </ol> <p>// Angular   </p> <p>```</p> <ol> <li>Inje\u00e7\u00e3o de Depend\u00eancia \u2192 Context    ```jsx    // React    const { api } = useContext(ApiContext);</li> </ol> <p>// Angular    constructor(private api: ApiService) {}    ```</p>"},{"location":"frontend/p%C3%A1ginas/paginas/incidentes.html#boas-praticas","title":"Boas Pr\u00e1ticas","text":"<ol> <li>Separar l\u00f3gica de neg\u00f3cio de componentes de apresenta\u00e7\u00e3o</li> <li>Implementar tratamento de erros consistente</li> <li>Utilizar TypeScript para tipagem</li> <li>Manter estados locais quando poss\u00edvel</li> </ol>"},{"location":"frontend/p%C3%A1ginas/paginas/inventario-flow.html","title":"P\u00e1gina de Fluxo de Invent\u00e1rio","text":""},{"location":"frontend/p%C3%A1ginas/paginas/inventario-flow.html#visao-geral","title":"Vis\u00e3o Geral","text":"<p>A visualiza\u00e7\u00e3o em fluxo permite navegar pela hierarquia do invent\u00e1rio de forma visual e interativa.</p>"},{"location":"frontend/p%C3%A1ginas/paginas/inventario-flow.html#comparacao-angular-vs-react","title":"Compara\u00e7\u00e3o Angular vs React","text":""},{"location":"frontend/p%C3%A1ginas/paginas/inventario-flow.html#estrutura-do-componente","title":"Estrutura do Componente","text":""},{"location":"frontend/p%C3%A1ginas/paginas/inventario-flow.html#react-hooks","title":"React (Hooks)","text":"<pre><code>function InventoryFlowPage() {\n  const [data, setData] = useState({\n    economic_groups: [],\n    clients: [],\n    sites: [],\n    equipments: [],\n    services: []\n  });\n\n  return (\n    &lt;div className=\"inventory-flow\"&gt;\n      &lt;InventoryFlow data={data} onFetchData={fetchData} /&gt;\n    &lt;/div&gt;\n  );\n}\n</code></pre>"},{"location":"frontend/p%C3%A1ginas/paginas/inventario-flow.html#angular-component","title":"Angular (Component)","text":"<pre><code>@Component({\n  selector: 'app-inventory-flow',\n  templateUrl: './inventory-flow.component.html'\n})\nexport class InventoryFlowComponent {\n  data = {\n    economic_groups: [],\n    clients: [],\n    sites: [],\n    equipments: [],\n    services: []\n  };\n}\n</code></pre>"},{"location":"frontend/p%C3%A1ginas/paginas/inventario-flow.html#componentes-do-fluxo","title":"Componentes do Fluxo","text":"<ol> <li>Cards de Item</li> <li>Exibi\u00e7\u00e3o de informa\u00e7\u00f5es</li> <li>Estados ativos/inativos</li> <li> <p>\u00cdcones din\u00e2micos</p> </li> <li> <p>Se\u00e7\u00f5es de Fluxo</p> </li> <li>Organiza\u00e7\u00e3o hier\u00e1rquica</li> <li>Filtragem por se\u00e7\u00e3o</li> <li> <p>Pesquisa contextual</p> </li> <li> <p>Controles de Navega\u00e7\u00e3o</p> </li> <li>Pagina\u00e7\u00e3o</li> <li>Filtros de status</li> <li>Pesquisa</li> </ol>"},{"location":"frontend/p%C3%A1ginas/paginas/inventario-flow.html#gerenciamento-de-estado","title":"Gerenciamento de Estado","text":""},{"location":"frontend/p%C3%A1ginas/paginas/inventario-flow.html#react","title":"React","text":"<pre><code>const [selected, setSelected] = useState({\n  economic_group: null,\n  client: null,\n  site: null,\n  equipment: null,\n  service: null\n});\n</code></pre>"},{"location":"frontend/p%C3%A1ginas/paginas/inventario-flow.html#angular","title":"Angular","text":"<pre><code>selected = {\n  economic_group: null,\n  client: null,\n  site: null,\n  equipment: null,\n  service: null\n};\n</code></pre>"},{"location":"frontend/p%C3%A1ginas/paginas/inventario-flow.html#eventos-e-interacoes","title":"Eventos e Intera\u00e7\u00f5es","text":""},{"location":"frontend/p%C3%A1ginas/paginas/inventario-flow.html#react_1","title":"React","text":"<pre><code>const handleSelect = async (type, item) =&gt; {\n  setSelected(prev =&gt; ({ ...prev, [type]: item }));\n  await fetchRelatedData(type, item.id);\n};\n</code></pre>"},{"location":"frontend/p%C3%A1ginas/paginas/inventario-flow.html#angular_1","title":"Angular","text":"<pre><code>async handleSelect(type: string, item: any) {\n  this.selected[type] = item;\n  await this.fetchRelatedData(type, item.id);\n}\n</code></pre>"},{"location":"frontend/p%C3%A1ginas/paginas/inventario-flow.html#consideracoes-de-performance","title":"Considera\u00e7\u00f5es de Performance","text":"<ol> <li>Carregamento Sob Demanda: Dados carregados conforme necess\u00e1rio</li> <li>Memoriza\u00e7\u00e3o: Cache de dados j\u00e1 carregados</li> <li>Renderiza\u00e7\u00e3o Condicional: Componentes renderizados apenas quando necess\u00e1rio</li> <li>Otimiza\u00e7\u00e3o de Consultas: Filtros aplicados no servidor</li> </ol>"},{"location":"frontend/p%C3%A1ginas/paginas/inventario-flow.html#migracao-angular-react","title":"Migra\u00e7\u00e3o Angular \u2192 React","text":"<ol> <li>Adaptar observables para promises/async-await</li> <li>Implementar gerenciamento de estado com hooks</li> <li>Converter templates aninhados para componentes JSX</li> <li>Adaptar inje\u00e7\u00e3o de depend\u00eancia para Context API</li> </ol>"},{"location":"frontend/p%C3%A1ginas/paginas/inventario.html","title":"P\u00e1gina de Invent\u00e1rio (Tabela)","text":""},{"location":"frontend/p%C3%A1ginas/paginas/inventario.html#visao-geral","title":"Vis\u00e3o Geral","text":"<p>A p\u00e1gina de invent\u00e1rio em formato tabular permite visualizar e gerenciar todos os elementos do invent\u00e1rio de forma estruturada.</p>"},{"location":"frontend/p%C3%A1ginas/paginas/inventario.html#comparacao-angular-vs-react","title":"Compara\u00e7\u00e3o Angular vs React","text":""},{"location":"frontend/p%C3%A1ginas/paginas/inventario.html#estrutura-do-componente","title":"Estrutura do Componente","text":""},{"location":"frontend/p%C3%A1ginas/paginas/inventario.html#react-hooks","title":"React (Hooks)","text":"<pre><code>function InventoryPage() {\n  const [activeTab, setActiveTab] = useState('economic_groups');\n  const [filters, setFilters] = useState({});\n  const [tableData, setTableData] = useState({});\n\n  useEffect(() =&gt; {\n    fetchData(activeTab);\n  }, [activeTab]);\n\n  return (\n    &lt;div className=\"inventory-page\"&gt;\n      {/* Estrutura da p\u00e1gina */}\n    &lt;/div&gt;\n  );\n}\n</code></pre>"},{"location":"frontend/p%C3%A1ginas/paginas/inventario.html#angular-component","title":"Angular (Component)","text":"<pre><code>@Component({\n  selector: 'app-inventory',\n  templateUrl: './inventory.component.html'\n})\nexport class InventoryComponent implements OnInit {\n  activeTab = 'economic_groups';\n  filters = {};\n  tableData = {};\n\n  ngOnInit() {\n    this.fetchData(this.activeTab);\n  }\n}\n</code></pre>"},{"location":"frontend/p%C3%A1ginas/paginas/inventario.html#componentes-principais","title":"Componentes Principais","text":"<ol> <li>Tabela de Invent\u00e1rio</li> <li>Exibi\u00e7\u00e3o tabular dos dados</li> <li>Pagina\u00e7\u00e3o</li> <li> <p>Edi\u00e7\u00e3o inline</p> </li> <li> <p>Filtros</p> </li> <li>Filtragem por diferentes crit\u00e9rios</li> <li> <p>Pesquisa din\u00e2mica</p> </li> <li> <p>Formul\u00e1rios de Adi\u00e7\u00e3o</p> </li> <li>Adi\u00e7\u00e3o de novos itens</li> <li>Valida\u00e7\u00e3o de dados</li> </ol>"},{"location":"frontend/p%C3%A1ginas/paginas/inventario.html#gerenciamento-de-estado","title":"Gerenciamento de Estado","text":""},{"location":"frontend/p%C3%A1ginas/paginas/inventario.html#react","title":"React","text":"<pre><code>// Context e Hooks\nconst { token } = useAuth();\nconst [tableData, setTableData] = useState({});\n</code></pre>"},{"location":"frontend/p%C3%A1ginas/paginas/inventario.html#angular","title":"Angular","text":"<pre><code>// Services e Inje\u00e7\u00e3o de Depend\u00eancia\nconstructor(\n  private authService: AuthService,\n  private inventoryService: InventoryService\n) {}\n</code></pre>"},{"location":"frontend/p%C3%A1ginas/paginas/inventario.html#ciclo-de-vida-e-atualizacoes","title":"Ciclo de Vida e Atualiza\u00e7\u00f5es","text":""},{"location":"frontend/p%C3%A1ginas/paginas/inventario.html#react_1","title":"React","text":"<pre><code>useEffect(() =&gt; {\n  fetchData(activeTab);\n}, [activeTab, filters]);\n</code></pre>"},{"location":"frontend/p%C3%A1ginas/paginas/inventario.html#angular_1","title":"Angular","text":"<pre><code>ngOnChanges(changes: SimpleChanges) {\n  if (changes.activeTab || changes.filters) {\n    this.fetchData(this.activeTab);\n  }\n}\n</code></pre>"},{"location":"frontend/p%C3%A1ginas/paginas/inventario.html#integracao-com-api","title":"Integra\u00e7\u00e3o com API","text":""},{"location":"frontend/p%C3%A1ginas/paginas/inventario.html#react-fetch-api","title":"React (Fetch API)","text":"<pre><code>const fetchData = async (type) =&gt; {\n  const response = await api.get(`/inventario/${type}/`);\n  setTableData(response.data);\n};\n</code></pre>"},{"location":"frontend/p%C3%A1ginas/paginas/inventario.html#angular-httpclient","title":"Angular (HttpClient)","text":"<pre><code>fetchData(type: string) {\n  this.http.get(`/api/inventario/${type}/`)\n    .subscribe(data =&gt; this.tableData = data);\n}\n</code></pre>"},{"location":"frontend/p%C3%A1ginas/paginas/inventario.html#consideracoes-de-performance","title":"Considera\u00e7\u00f5es de Performance","text":"<ol> <li>Pagina\u00e7\u00e3o: Implementada para grandes conjuntos de dados</li> <li>Filtragem: Executada no servidor para melhor performance</li> <li>Edi\u00e7\u00e3o: Atualiza\u00e7\u00e3o otimista da UI</li> <li>Memoriza\u00e7\u00e3o: Uso de <code>useMemo</code> e <code>useCallback</code> em React</li> </ol>"},{"location":"frontend/p%C3%A1ginas/paginas/inventario.html#migracao-angular-react","title":"Migra\u00e7\u00e3o Angular \u2192 React","text":"<ol> <li>Substituir servi\u00e7os por hooks personalizados</li> <li>Adaptar templates para JSX</li> <li>Implementar gerenciamento de estado com Context API</li> <li>Utilizar componentes funcionais com hooks ````</li> </ol>"},{"location":"frontend/p%C3%A1ginas/paginas/login.html","title":"P\u00e1gina de Login","text":""},{"location":"frontend/p%C3%A1ginas/paginas/login.html#visao-geral","title":"Vis\u00e3o Geral","text":"<p>A p\u00e1gina de login \u00e9 respons\u00e1vel pela autentica\u00e7\u00e3o do usu\u00e1rio no sistema. Esta documenta\u00e7\u00e3o ajudar\u00e1 desenvolvedores Angular a entenderem a implementa\u00e7\u00e3o em React.</p>"},{"location":"frontend/p%C3%A1ginas/paginas/login.html#comparacao-angular-vs-react","title":"Compara\u00e7\u00e3o Angular vs React","text":""},{"location":"frontend/p%C3%A1ginas/paginas/login.html#estrutura-do-componente","title":"Estrutura do Componente","text":""},{"location":"frontend/p%C3%A1ginas/paginas/login.html#angular","title":"Angular","text":""},{"location":"frontend/p%C3%A1ginas/paginas/login.html#react","title":"React","text":"<p>A p\u00e1gina de login em React \u00e9 composta por um componente funcional que utiliza hooks para gerenciar o estado e efeitos colaterais. Abaixo est\u00e1 um exemplo b\u00e1sico de uma p\u00e1gina de login em React:</p> <pre><code>import React, { useState, useEffect } from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport { useAuth } from '../context/AuthContext';\nimport '../styles/LoginPage.css';\nimport logo from '../assets/logo_login.svg';\n\nfunction LoginPage() {\n  useEffect(() =&gt; {\n    document.title = 'Gest\u00e3o de Invent\u00e1rio - Login';\n    const savedFormData = localStorage.getItem('loginFormData');\n    if (savedFormData) {\n      setFormData(JSON.parse(savedFormData));\n    }\n  }, []);\n\n  const navigate = useNavigate();\n  const { login } = useAuth();\n  const [formData, setFormData] = useState({\n    username: '',\n    password: ''\n  });\n  const [error, setError] = useState('');\n  const [loading, setLoading] = useState(false);\n\n  const handleChange = (e) =&gt; {\n    const value = e.target.value;\n    setFormData({\n      ...formData,\n      [e.target.name]: value\n    });\n  };\n\n  const handleSubmit = async (e) =&gt; {\n    e.preventDefault();\n    setLoading(true);\n    setError('');\n    localStorage.setItem('loginFormData', JSON.stringify(formData));\n\n    try {\n      const response = await fetch('http://localhost:8000/api/access/login/', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify(formData)\n      });\n\n      const data = await response.json();\n\n      if (response.ok) {\n        localStorage.setItem('token', data.token);\n        await login(data.token);\n        navigate('/welcome');\n      } else {\n        setError('Credenciais inv\u00e1lidas. Por favor, tente novamente.');\n      }\n    } catch (error) {\n      setError('Erro ao conectar com o servidor. Tente novamente mais tarde.');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    &lt;div className=\"login-container\"&gt;\n      &lt;div className=\"login-card\"&gt;\n        &lt;div className=\"login-header\"&gt;\n          &lt;Link to=\"/\"&gt;\n            &lt;img src={logo} alt=\"Gest\u00e3o de Invent\u00e1rio Logo\" height=\"40\" /&gt;\n          &lt;/Link&gt;\n          &lt;h2&gt;Bem-vindo de volta&lt;/h2&gt;\n        &lt;/div&gt;\n\n        &lt;form onSubmit={handleSubmit} className=\"login-form\"&gt;\n          &lt;div className=\"form-group\"&gt;\n            &lt;label htmlFor=\"username\"&gt;Usu\u00e1rio&lt;/label&gt;\n            &lt;input\n              type=\"text\"\n              id=\"username\"\n              name=\"username\"\n              autoComplete=\"username\"\n              value={formData.username}\n              onChange={handleChange}\n              required\n            /&gt;\n          &lt;/div&gt;\n\n          &lt;div className=\"form-group\"&gt;\n            &lt;label htmlFor=\"password\"&gt;Senha&lt;/label&gt;\n            &lt;input\n              type=\"password\"\n              id=\"password\"\n              name=\"password\"\n              autoComplete=\"current-password\"\n              value={formData.password}\n              onChange={handleChange}\n              required\n            /&gt;\n          &lt;/div&gt;\n\n          {error &amp;&amp; &lt;div className=\"error-message\"&gt;{error}&lt;/div&gt;}\n\n          &lt;button type=\"submit\" className=\"login-button\" disabled={loading}&gt;\n            {loading ? 'Entrando...' : 'Entrar'}\n          &lt;/button&gt;\n        &lt;/form&gt;\n      &lt;/div&gt;\n    &lt;/div&gt;\n  );\n}\n\nexport default LoginPage;\n</code></pre>"},{"location":"frontend/p%C3%A1ginas/paginas/login.html#angular_1","title":"Angular","text":"<p>A p\u00e1gina de login em Angular \u00e9 composta por um componente que utiliza servi\u00e7os para gerenciar o estado e efeitos colaterais. Abaixo est\u00e1 um exemplo b\u00e1sico de uma p\u00e1gina de login em Angular:</p> <pre><code>import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AuthService } from '../services/auth.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  formData = {\n    username: '',\n    password: ''\n  };\n  error = '';\n  loading = false;\n\n  constructor(private authService: AuthService, private router: Router) {}\n\n  ngOnInit(): void {\n    const savedFormData = localStorage.getItem('loginFormData');\n    if (savedFormData) {\n      this.formData = JSON.parse(savedFormData);\n    }\n  }\n\n  handleChange(event: Event): void {\n    const target = event.target as HTMLInputElement;\n    this.formData[target.name] = target.value;\n  }\n\n  async handleSubmit(event: Event): Promise&lt;void&gt; {\n    event.preventDefault();\n    this.loading = true;\n    this.error = '';\n    localStorage.setItem('loginFormData', JSON.stringify(this.formData));\n\n    try {\n      const response = await this.authService.login(this.formData);\n      if (response.ok) {\n        localStorage.setItem('token', response.token);\n        this.router.navigate(['/welcome']);\n      } else {\n        this.error = 'Credenciais inv\u00e1lidas. Por favor, tente novamente.';\n      }\n    } catch (error) {\n      this.error = 'Erro ao conectar com o servidor. Tente novamente mais tarde.';\n    } finally {\n      this.loading = false;\n    }\n  }\n}\n</code></pre>"},{"location":"frontend/p%C3%A1ginas/paginas/login.html#conclusao","title":"Conclus\u00e3o","text":"<p>Ambas as abordagens t\u00eam suas vantagens e desvantagens. A escolha entre React e Angular depende das necessidades espec\u00edficas do projeto e das prefer\u00eancias da equipe de desenvolvimento.</p>"},{"location":"frontend/p%C3%A1ginas/paginas/password.html","title":"P\u00e1gina de Altera\u00e7\u00e3o de Senha","text":""},{"location":"frontend/p%C3%A1ginas/paginas/password.html#visao-geral","title":"Vis\u00e3o Geral","text":"<p>A p\u00e1gina de altera\u00e7\u00e3o de senha permite que usu\u00e1rios modifiquem suas credenciais de acesso. Esta documenta\u00e7\u00e3o \u00e9 focada em auxiliar desenvolvedores Angular a compreenderem a implementa\u00e7\u00e3o em React.</p>"},{"location":"frontend/p%C3%A1ginas/paginas/password.html#principais-diferencas","title":"Principais Diferen\u00e7as","text":""},{"location":"frontend/p%C3%A1ginas/paginas/password.html#gerenciamento-de-estado","title":"Gerenciamento de Estado","text":""},{"location":"frontend/p%C3%A1ginas/paginas/password.html#react-hooks","title":"React (Hooks)","text":"<pre><code>const [formData, setFormData] = useState({\n  currentPassword: '',\n  newPassword: '',\n  confirmPassword: ''\n});\n</code></pre>"},{"location":"frontend/p%C3%A1ginas/paginas/password.html#angular-two-way-binding","title":"Angular (Two-way Binding)","text":"<pre><code>export class PasswordComponent {\n  formData = {\n    currentPassword: '',\n    newPassword: '',\n    confirmPassword: ''\n  };\n}\n</code></pre>"},{"location":"frontend/p%C3%A1ginas/paginas/password.html#manipulacao-de-eventos","title":"Manipula\u00e7\u00e3o de Eventos","text":""},{"location":"frontend/p%C3%A1ginas/paginas/password.html#react","title":"React","text":"<pre><code>const handleChange = (e) =&gt; {\n  setFormData({\n    ...formData,\n    [e.target.name]: e.target.value\n  });\n};\n</code></pre>"},{"location":"frontend/p%C3%A1ginas/paginas/password.html#angular","title":"Angular","text":"<pre><code>handleChange(event: any): void {\n  this.formData[event.target.name] = event.target.value;\n}\n</code></pre>"},{"location":"frontend/p%C3%A1ginas/paginas/password.html#navegacao","title":"Navega\u00e7\u00e3o","text":""},{"location":"frontend/p%C3%A1ginas/paginas/password.html#react-usenavigate","title":"React (useNavigate)","text":"<pre><code>const navigate = useNavigate();\nnavigate('/login');\n</code></pre>"},{"location":"frontend/p%C3%A1ginas/paginas/password.html#angular-router","title":"Angular (Router)","text":"<pre><code>constructor(private router: Router) {}\n\n// Navega\u00e7\u00e3o\nthis.router.navigate(['/login']);\n</code></pre>"},{"location":"frontend/p%C3%A1ginas/paginas/password.html#ciclo-de-vida","title":"Ciclo de Vida","text":""},{"location":"frontend/p%C3%A1ginas/paginas/password.html#react-useeffect","title":"React (useEffect)","text":"<pre><code>useEffect(() =&gt; {\n  document.title = 'Gest\u00e3o de Invent\u00e1rio - Alterar Senha';\n}, []);\n</code></pre>"},{"location":"frontend/p%C3%A1ginas/paginas/password.html#angular_1","title":"Angular","text":"<pre><code>export class PasswordComponent implements OnInit {\n  ngOnInit(): void {\n    document.title = 'Gest\u00e3o de Invent\u00e1rio - Alterar Senha';\n  }\n}\n</code></pre>"},{"location":"frontend/p%C3%A1ginas/paginas/password.html#exemplos-de-implementacao","title":"Exemplos de Implementa\u00e7\u00e3o","text":""},{"location":"frontend/p%C3%A1ginas/paginas/password.html#template-react-vs-angular","title":"Template React vs Angular","text":""},{"location":"frontend/p%C3%A1ginas/paginas/password.html#react-jsx","title":"React (JSX)","text":"<pre><code>&lt;form onSubmit={handleSubmit} className=\"password-form\"&gt;\n  &lt;div className=\"form-group\"&gt;\n    &lt;input\n      type=\"password\"\n      name=\"currentPassword\"\n      value={formData.currentPassword}\n      onChange={handleChange}\n      required\n    /&gt;\n  &lt;/div&gt;\n&lt;/form&gt;\n</code></pre>"},{"location":"frontend/p%C3%A1ginas/paginas/password.html#angular-template","title":"Angular (Template)","text":"<pre><code>&lt;form (ngSubmit)=\"handleSubmit()\" class=\"password-form\"&gt;\n  &lt;div class=\"form-group\"&gt;\n    &lt;input\n      type=\"password\"\n      name=\"currentPassword\"\n      [(ngModel)]=\"formData.currentPassword\"\n      required\n    /&gt;\n  &lt;/div&gt;\n&lt;/form&gt;\n</code></pre>"},{"location":"frontend/p%C3%A1ginas/paginas/password.html#consideracoes-importantes","title":"Considera\u00e7\u00f5es Importantes","text":"<ol> <li>Estado: React utiliza hooks (useState) enquanto Angular usa propriedades de classe com decorators</li> <li>Eventos: React usa camelCase (onClick) enquanto Angular usa parenteses ((click))</li> <li>Binding: React \u00e9 unidirecional, Angular oferece two-way binding</li> <li>Inje\u00e7\u00e3o de Depend\u00eancia: Angular tem um sistema robusto de DI, React usa Context ou props</li> </ol>"},{"location":"frontend/p%C3%A1ginas/paginas/password.html#boas-praticas","title":"Boas Pr\u00e1ticas","text":"<ol> <li>Mantenha a l\u00f3gica de valida\u00e7\u00e3o separada do componente</li> <li>Use tipos TypeScript em ambas as implementa\u00e7\u00f5es</li> <li>Implemente tratamento de erros adequado</li> <li>Mantenha o estado consistente</li> </ol>"},{"location":"frontend/p%C3%A1ginas/paginas/welcome.html","title":"P\u00e1gina Welcome (P\u00e1gina Inicial)","text":""},{"location":"frontend/p%C3%A1ginas/paginas/welcome.html#visao-geral","title":"Vis\u00e3o Geral","text":"<p>A p\u00e1gina inicial (Welcome) serve como dashboard principal do sistema, apresentando cards interativos para navega\u00e7\u00e3o entre os m\u00f3dulos. Esta documenta\u00e7\u00e3o compara as implementa\u00e7\u00f5es React e Angular.</p>"},{"location":"frontend/p%C3%A1ginas/paginas/welcome.html#principais-diferencas","title":"Principais Diferen\u00e7as","text":""},{"location":"frontend/p%C3%A1ginas/paginas/welcome.html#estrutura-de-componentes","title":"Estrutura de Componentes","text":""},{"location":"frontend/p%C3%A1ginas/paginas/welcome.html#react-componente-funcional","title":"React (Componente Funcional)","text":"<pre><code>function WelcomePage() {\n  const { user } = useAuth();\n\n  useEffect(() =&gt; {\n    document.title = 'Gest\u00e3o de Invent\u00e1rio | Home';\n  }, []);\n\n  return (\n    // JSX estrutura\n  );\n}\n</code></pre>"},{"location":"frontend/p%C3%A1ginas/paginas/welcome.html#angular-component-class","title":"Angular (Component Class)","text":"<pre><code>@Component({\n  selector: 'app-welcome',\n  templateUrl: './welcome.component.html'\n})\nexport class WelcomeComponent implements OnInit {\n  user: User;\n\n  constructor(private authService: AuthService) {\n    this.user = this.authService.currentUser;\n  }\n\n  ngOnInit(): void {\n    document.title = 'Gest\u00e3o de Invent\u00e1rio | Home';\n  }\n}\n</code></pre>"},{"location":"frontend/p%C3%A1ginas/paginas/welcome.html#renderizacao-de-listas","title":"Renderiza\u00e7\u00e3o de Listas","text":""},{"location":"frontend/p%C3%A1ginas/paginas/welcome.html#react-map","title":"React (map)","text":"<pre><code>{cards.map((card, index) =&gt; (\n  &lt;div key={index} className=\"welcome-card\"&gt;\n    {/* conte\u00fado do card */}\n  &lt;/div&gt;\n))}\n</code></pre>"},{"location":"frontend/p%C3%A1ginas/paginas/welcome.html#angular-ngfor","title":"Angular (*ngFor)","text":"<pre><code>&lt;div *ngFor=\"let card of cards\" class=\"welcome-card\"&gt;\n  &lt;!-- conte\u00fado do card --&gt;\n&lt;/div&gt;\n</code></pre>"},{"location":"frontend/p%C3%A1ginas/paginas/welcome.html#context-vs-service","title":"Context vs Service","text":""},{"location":"frontend/p%C3%A1ginas/paginas/welcome.html#react-context","title":"React (Context)","text":"<pre><code>const { user } = useAuth();  // Usando Context Hook\n</code></pre>"},{"location":"frontend/p%C3%A1ginas/paginas/welcome.html#angular-service","title":"Angular (Service)","text":"<pre><code>constructor(private authService: AuthService) {\n  this.user = this.authService.currentUser;\n}\n</code></pre>"},{"location":"frontend/p%C3%A1ginas/paginas/welcome.html#estrutura-de-dados","title":"Estrutura de Dados","text":""},{"location":"frontend/p%C3%A1ginas/paginas/welcome.html#definicao-de-cards","title":"Defini\u00e7\u00e3o de Cards","text":""},{"location":"frontend/p%C3%A1ginas/paginas/welcome.html#react","title":"React","text":"<pre><code>const cards = [\n  {\n    title: 'Invent\u00e1rio',\n    description: 'Gerencie clientes, sites, equipamentos e servi\u00e7os',\n    active: true,\n    icon: &lt;FaWarehouse size={32} /&gt;,\n    subItems: [/*...*/]\n  }\n];\n</code></pre>"},{"location":"frontend/p%C3%A1ginas/paginas/welcome.html#angular","title":"Angular","text":"<pre><code>interface Card {\n  title: string;\n  description: string;\n  active: boolean;\n  icon: string;\n  subItems: SubItem[];\n}\n\ncards: Card[] = [\n  {\n    title: 'Invent\u00e1rio',\n    description: 'Gerencie clientes, sites, equipamentos e servi\u00e7os',\n    active: true,\n    icon: 'warehouse',\n    subItems: [/*...*/]\n  }\n];\n</code></pre>"},{"location":"frontend/p%C3%A1ginas/paginas/welcome.html#boas-praticas","title":"Boas Pr\u00e1ticas","text":"<ol> <li>Componentiza\u00e7\u00e3o</li> <li>React: Divida em componentes funcionais menores</li> <li> <p>Angular: Use componentes apresentacionais e smart components</p> </li> <li> <p>Gerenciamento de Estado</p> </li> <li>React: Context para estado global, useState para local</li> <li> <p>Angular: Services para estado global, vari\u00e1veis de classe para local</p> </li> <li> <p>Tipagem</p> </li> <li>Use TypeScript em ambos para melhor manutenibilidade</li> <li> <p>Defina interfaces para estruturas de dados</p> </li> <li> <p>Performance</p> </li> <li>React: Use memo() para componentes que n\u00e3o precisam re-renderizar</li> <li>Angular: Use OnPush strategy para otimizar change detection</li> </ol>"},{"location":"frontend/p%C3%A1ginas/paginas/welcome.html#migracao-angular-react","title":"Migra\u00e7\u00e3o Angular \u2192 React","text":"<ol> <li>Substitua <code>*ngFor</code> por <code>.map()</code></li> <li>Troque <code>*ngIf</code> por condicionais com <code>&amp;&amp;</code> ou operador tern\u00e1rio</li> <li>Substitua Services por Context ou hooks personalizados</li> <li>Adapte event bindings de <code>(click)</code> para <code>onClick</code></li> </ol>"},{"location":"frontend/p%C3%A1ginas/paginas/welcome.html#conclusao","title":"Conclus\u00e3o","text":"<p>A migra\u00e7\u00e3o de Angular para React requer principalmente adapta\u00e7\u00e3o na: - Sintaxe de template - Gerenciamento de estado - Sistema de depend\u00eancias - Ciclo de vida dos componentes</p>"},{"location":"manual/incidentes.html","title":"Gest\u00e3o de Incidentes","text":""},{"location":"manual/incidentes.html#visao-geral","title":"Vis\u00e3o Geral","text":"<p>O m\u00f3dulo de Gest\u00e3o de Incidentes integra-se com o ServiceNow para gerenciar:</p> <ul> <li>Incidentes relacionados a equipamentos</li> <li>Manuten\u00e7\u00f5es preventivas</li> <li>Manuten\u00e7\u00f5es corretivas</li> </ul>"},{"location":"manual/incidentes.html#interface-visual","title":"Interface Visual","text":""},{"location":"manual/incidentes.html#tela-principal","title":"Tela Principal","text":"<p>A interface principal mostra a tabela de incidentes com as seguintes \u00e1reas: 1. Menu de navega\u00e7\u00e3o superior 2. Abas (Incidentes/Gest\u00e3o) 3. Bot\u00e3o de Filtros 4. Tabela de dados paginada 5. Controles de pagina\u00e7\u00e3o</p>"},{"location":"manual/incidentes.html#painel-de-filtros","title":"Painel de Filtros","text":"<p>O painel de filtros oferece as seguintes op\u00e7\u00f5es de busca:</p>"},{"location":"manual/incidentes.html#filtros-basicos","title":"Filtros B\u00e1sicos","text":"<ul> <li>N\u00famero do Incidente</li> <li>Status (Pendente, Em Andamento, Resolvido, Fechado)</li> <li>Origem</li> <li>Categoria</li> <li>Subcategoria</li> <li>Detalhe da Subcategoria</li> <li>Descri\u00e7\u00e3o</li> </ul>"},{"location":"manual/incidentes.html#filtros-de-data","title":"Filtros de Data","text":"<ul> <li>Per\u00edodo de Abertura (Data inicial e final)</li> <li>Per\u00edodo de Fechamento (Data inicial e final)</li> <li>Per\u00edodo de Resolu\u00e7\u00e3o (Data inicial e final)</li> </ul>"},{"location":"manual/incidentes.html#funcionalidades","title":"Funcionalidades","text":""},{"location":"manual/incidentes.html#tabela-de-incidentes","title":"Tabela de Incidentes","text":"<p>A tabela apresenta as seguintes informa\u00e7\u00f5es: - N\u00famero do Incidente - Respons\u00e1vel pela abertura - Origem do chamado - Categoriza\u00e7\u00e3o completa - Tipo de contato - Fila de atendimento - Datas de abertura, fechamento e resolu\u00e7\u00e3o - Dura\u00e7\u00e3o total - Status atual</p>"},{"location":"manual/incidentes.html#paginacao-e-navegacao","title":"Pagina\u00e7\u00e3o e Navega\u00e7\u00e3o","text":"<ul> <li>50 registros por p\u00e1gina</li> <li>Navega\u00e7\u00e3o entre p\u00e1ginas</li> <li>Indicador de total de registros</li> <li>Controles de anterior/pr\u00f3ximo</li> </ul>"},{"location":"manual/incidentes.html#status-dos-incidentes","title":"Status dos Incidentes","text":"<ul> <li>Pendente: Aguardando atendimento inicial</li> <li>Em Andamento: Em processo de resolu\u00e7\u00e3o pela equipe t\u00e9cnica</li> <li>Resolvido: Solu\u00e7\u00e3o implementada, aguardando confirma\u00e7\u00e3o</li> <li>Fechado: Incidente encerrado e validado</li> </ul>"},{"location":"manual/incidentes.html#gestao-de-filtros","title":"Gest\u00e3o de Filtros","text":"<ul> <li>Aplica\u00e7\u00e3o de m\u00faltiplos filtros simultaneamente</li> <li>Limpeza r\u00e1pida de todos os filtros</li> <li>Indicador visual de filtros ativos</li> <li>Persist\u00eancia dos filtros durante a navega\u00e7\u00e3o</li> </ul>"},{"location":"manual/incidentes.html#integracao-servicenow","title":"Integra\u00e7\u00e3o ServiceNow","text":""},{"location":"manual/incidentes.html#sincronizacao","title":"Sincroniza\u00e7\u00e3o","text":"<ul> <li>Atualiza\u00e7\u00e3o autom\u00e1tica a cada 5 minutos</li> <li>Sincroniza\u00e7\u00e3o manual dispon\u00edvel</li> <li>Registro de hist\u00f3rico de sincroniza\u00e7\u00e3o</li> </ul>"},{"location":"manual/incidentes.html#fluxo-de-dados","title":"Fluxo de Dados","text":"<ol> <li>Recebimento do incidente do ServiceNow</li> <li>Processamento e categoriza\u00e7\u00e3o</li> <li>Atualiza\u00e7\u00e3o do status</li> <li>Envio de atualiza\u00e7\u00f5es</li> </ol>"},{"location":"manual/incidentes.html#dicas-de-uso","title":"Dicas de Uso","text":""},{"location":"manual/incidentes.html#boas-praticas","title":"Boas Pr\u00e1ticas","text":"<ol> <li>Utilize filtros espec\u00edficos para buscas precisas</li> <li>Combine filtros de data para an\u00e1lises peri\u00f3dicas</li> <li>Monitore incidentes pendentes regularmente</li> <li>Verifique a sincroniza\u00e7\u00e3o em caso de diverg\u00eancias</li> </ol>"},{"location":"manual/login-senha.html","title":"Login e Altera\u00e7\u00e3o de Senha","text":""},{"location":"manual/login-senha.html#tela-de-login","title":"Tela de Login","text":"<p>A tela de login \u00e9 o ponto de entrada do sistema. Para acessar, siga os passos:</p> <ol> <li>Digite seu nome de usu\u00e1rio</li> <li>Digite sua senha</li> <li>Clique no bot\u00e3o \"Entrar\"</li> </ol> <p></p>"},{"location":"manual/login-senha.html#alteracao-de-senha","title":"Altera\u00e7\u00e3o de Senha","text":"<p>Para alterar sua senha:</p> <ol> <li>Ap\u00f3s fazer login, clique no seu nome no menu superior</li> <li>Selecione \"Alterar Senha\"</li> <li>Digite sua senha atual</li> <li>Digite sua nova senha</li> <li>Confirme sua nova senha</li> <li>Clique em \"Salvar\"</li> </ol> <p>Requisitos de Senha: - M\u00ednimo de 8 caracteres - Pelo menos uma letra mai\u00fascula - Pelo menos uma letra min\u00fascula - Pelo menos um n\u00famero - Pelo menos um caractere especial</p>"},{"location":"manual/welcome.html","title":"P\u00e1gina Inicial","text":""},{"location":"manual/welcome.html#visao-geral","title":"Vis\u00e3o Geral","text":"<p>A p\u00e1gina inicial do sistema apresenta uma interface moderna e intuitiva, projetada para facilitar o acesso \u00e0s principais funcionalidades do sistema.</p> <p></p>"},{"location":"manual/welcome.html#cartoes-de-acesso-rapido","title":"Cart\u00f5es de Acesso R\u00e1pido","text":"<p>A tela inicial \u00e9 organizada em cart\u00f5es tem\u00e1ticos que d\u00e3o acesso \u00e0s diferentes \u00e1reas do sistema:</p>"},{"location":"manual/welcome.html#1-inventario","title":"1. Invent\u00e1rio","text":"<ul> <li>Acessar Invent\u00e1rio: Acesso direto ao m\u00f3dulo de gest\u00e3o de invent\u00e1rio</li> <li>Fluxo de Invent\u00e1rio: Visualiza\u00e7\u00e3o do fluxo de equipamentos e servi\u00e7os</li> </ul>"},{"location":"manual/welcome.html#2-gestao-de-incidentes","title":"2. Gest\u00e3o de Incidentes","text":"<ul> <li>Registro e acompanhamento de ocorr\u00eancias</li> <li>Gest\u00e3o de indisponibilidades</li> </ul>"},{"location":"manual/welcome.html#3-relatorios","title":"3. Relat\u00f3rios","text":"<ul> <li>\u00c1rea dedicada a relat\u00f3rios e estat\u00edsticas do sistema</li> <li>Em desenvolvimento</li> </ul>"},{"location":"manual/welcome.html#4-documentacao","title":"4. Documenta\u00e7\u00e3o","text":"<ul> <li>Documenta\u00e7\u00e3o API: Acesso \u00e0 documenta\u00e7\u00e3o t\u00e9cnica da API</li> <li>Manual do Usu\u00e1rio: Guia completo de utiliza\u00e7\u00e3o do sistema</li> <li>Backend: Documenta\u00e7\u00e3o t\u00e9cnica do backend</li> <li>Frontend: Documenta\u00e7\u00e3o t\u00e9cnica do frontend</li> </ul>"},{"location":"manual/welcome.html#recursos-da-interface","title":"Recursos da Interface","text":"<ul> <li>Design Responsivo: Interface adapt\u00e1vel a diferentes tamanhos de tela</li> <li>Anima\u00e7\u00f5es Suaves: Efeitos visuais para melhor experi\u00eancia do usu\u00e1rio</li> <li>Indicadores Visuais: \u00cdcones intuitivos para cada funcionalidade</li> <li>Acesso R\u00e1pido: Links diretos para as funcionalidades mais utilizadas</li> </ul>"},{"location":"manual/welcome.html#niveis-de-acesso","title":"N\u00edveis de Acesso","text":"<p>Algumas funcionalidades podem estar restritas dependendo do seu n\u00edvel de acesso: - Usu\u00e1rios padr\u00e3o t\u00eam acesso \u00e0s funcionalidades b\u00e1sicas - Administradores t\u00eam acesso a todas as funcionalidades, incluindo documenta\u00e7\u00e3o t\u00e9cnica</p>"},{"location":"manual/inventario/fluxo.html","title":"Fluxo de Invent\u00e1rio","text":""},{"location":"manual/inventario/fluxo.html#visao-geral","title":"Vis\u00e3o Geral","text":"<p>O Fluxo de Invent\u00e1rio oferece uma visualiza\u00e7\u00e3o hier\u00e1rquica e interativa de todos os ativos, permitindo navegar pela rela\u00e7\u00e3o entre clientes, sites, equipamentos e servi\u00e7os. Acesse atrav\u00e9s do menu \"Invent\u00e1rio\" &gt; \"Fluxo de Invent\u00e1rio\".</p> <p></p>"},{"location":"manual/inventario/fluxo.html#como-funciona","title":"Como Funciona","text":"<p>A tela \u00e9 dividida em quatro quadrantes que mostram:</p>"},{"location":"manual/inventario/fluxo.html#1-clientes","title":"1. Clientes","text":"<ul> <li>Lista todos os clientes cadastrados</li> <li>Cada card mostra:</li> <li>Raz\u00e3o Social</li> <li>CNPJ</li> <li>Vantive ID</li> <li>Status (ativo/inativo)</li> </ul>"},{"location":"manual/inventario/fluxo.html#2-sites","title":"2. Sites","text":"<ul> <li>Mostra os sites do cliente selecionado</li> <li>Informa\u00e7\u00f5es exibidas:</li> <li>C\u00f3digo Vivo</li> <li>Tipo de Neg\u00f3cio</li> <li>Tipo de Site</li> <li>CEP</li> </ul>"},{"location":"manual/inventario/fluxo.html#3-equipamentos","title":"3. Equipamentos","text":"<ul> <li>Exibe equipamentos vinculados ao cliente/site</li> <li>Detalhes mostrados:</li> <li>Designador</li> <li>Tipo de Equipamento</li> <li>C\u00f3digo</li> <li>Status</li> </ul>"},{"location":"manual/inventario/fluxo.html#4-servicos","title":"4. Servi\u00e7os","text":"<ul> <li>Lista servi\u00e7os relacionados aos equipamentos</li> <li>Informa\u00e7\u00f5es:</li> <li>Designador</li> <li>Tipo de Servi\u00e7o</li> <li>C\u00f3digo</li> <li>Status</li> </ul>"},{"location":"manual/inventario/fluxo.html#como-usar","title":"Como Usar","text":""},{"location":"manual/inventario/fluxo.html#navegacao","title":"Navega\u00e7\u00e3o","text":"<ol> <li>Selecione um cliente para ver seus sites</li> <li>Clique em um site para filtrar equipamentos</li> <li>Selecione um equipamento para ver servi\u00e7os relacionados</li> </ol>"},{"location":"manual/inventario/fluxo.html#recursos-em-cada-secao","title":"Recursos em Cada Se\u00e7\u00e3o","text":""},{"location":"manual/inventario/fluxo.html#barra-superior","title":"Barra Superior","text":"<ul> <li>Campo de busca para filtrar itens</li> <li>Op\u00e7\u00e3o \"Mostrar inativos\" para ver todos os registros</li> <li>Bot\u00e3o \"Limpar\" para remover filtros</li> </ul>"},{"location":"manual/inventario/fluxo.html#cards","title":"Cards","text":"<ul> <li>C\u00f3digo de cores indica status:</li> <li>Roxo: item ativo</li> <li>Rosa: item inativo</li> <li>\u00cdcones espec\u00edficos por tipo de item</li> <li>Informa\u00e7\u00f5es principais em destaque</li> </ul>"},{"location":"manual/inventario/fluxo.html#filtros-e-buscas","title":"Filtros e Buscas","text":"<ol> <li>Busca Textual:</li> <li>Digite no campo de pesquisa de cada se\u00e7\u00e3o</li> <li> <p>Busca em tempo real em todos os campos</p> </li> <li> <p>Filtro de Status:</p> </li> <li>Marque \"Mostrar inativos\" para ver todos os itens</li> <li> <p>Desmarque para ver apenas ativos</p> </li> <li> <p>Navega\u00e7\u00e3o entre P\u00e1ginas:</p> </li> <li>Use os bot\u00f5es \"Anterior\" e \"Pr\u00f3ximo\"</li> <li>Visualize a p\u00e1gina atual e total de p\u00e1ginas</li> </ol>"},{"location":"manual/inventario/fluxo.html#dicas-de-uso","title":"Dicas de Uso","text":"<ol> <li>Visualiza\u00e7\u00e3o R\u00e1pida: </li> <li>Use os cards para uma vis\u00e3o geral dos itens</li> <li> <p>Cores e \u00edcones ajudam na identifica\u00e7\u00e3o r\u00e1pida</p> </li> <li> <p>Busca Eficiente:</p> </li> <li>Combine filtros de texto com status</li> <li> <p>Use a busca em cada se\u00e7\u00e3o independentemente</p> </li> <li> <p>Navega\u00e7\u00e3o Hier\u00e1rquica:</p> </li> <li>Siga o fluxo Cliente &gt; Site &gt; Equipamento &gt; Servi\u00e7o</li> <li>Use \"Limpar\" para resetar filtros espec\u00edficos</li> </ol>"},{"location":"manual/inventario/gestao.html","title":"Gest\u00e3o de Invent\u00e1rio","text":""},{"location":"manual/inventario/gestao.html#visao-geral","title":"Vis\u00e3o Geral","text":"<p>A tela de Gest\u00e3o de Invent\u00e1rio permite visualizar e gerenciar todos os ativos cadastrados no sistema. \u00c9 acess\u00edvel atrav\u00e9s do menu \"Invent\u00e1rio\" &gt; \"Acessar Invent\u00e1rio\".</p> <p></p>"},{"location":"manual/inventario/gestao.html#como-usar","title":"Como Usar","text":""},{"location":"manual/inventario/gestao.html#navegacao-por-abas","title":"Navega\u00e7\u00e3o por Abas","text":"<p>A tela possui quatro abas principais: - Clientes: Lista todas as empresas cadastradas - Sites: Locais f\u00edsicos vinculados aos clientes - Equipamentos: Dispositivos instalados nos sites - Servi\u00e7os: Servi\u00e7os ativos em cada site</p>"},{"location":"manual/inventario/gestao.html#filtros","title":"Filtros","text":"<p>No canto superior direito, existe um bot\u00e3o \"Filtros\" que permite: - Buscar por texto espec\u00edfico - Filtrar por status (ativo/inativo) - Combinar m\u00faltiplos crit\u00e9rios de busca</p>"},{"location":"manual/inventario/gestao.html#acoes-na-tabela","title":"A\u00e7\u00f5es na Tabela","text":"<p>Para cada item listado, voc\u00ea pode: 1. Visualizar: Todos os dados aparecem em formato de tabela 2. Editar: Clique no \u00edcone de l\u00e1pis para modificar informa\u00e7\u00f5es 3. Alternar Status: Ative ou desative registros usando o switch</p>"},{"location":"manual/inventario/gestao.html#paginacao","title":"Pagina\u00e7\u00e3o","text":"<p>No rodap\u00e9 da tabela: - Navegue entre p\u00e1ginas usando os bot\u00f5es \"Anterior\" e \"Pr\u00f3ximo\" - Visualize o n\u00famero total de p\u00e1ginas - Acompanhe quantos registros est\u00e3o sendo exibidos</p>"},{"location":"manual/inventario/gestao.html#campos-principais","title":"Campos Principais","text":""},{"location":"manual/inventario/gestao.html#clientes","title":"Clientes","text":"<ul> <li>Raz\u00e3o Social</li> <li>CNPJ</li> <li>Vantive ID (identificador \u00fanico)</li> <li>C\u00f3digo interno</li> <li>Status (ativo/inativo)</li> </ul>"},{"location":"manual/inventario/gestao.html#sites","title":"Sites","text":"<ul> <li>C\u00f3digo Vivo</li> <li>C\u00f3digo do Sistema</li> <li>Tipo de Site</li> <li>Tipo de Neg\u00f3cio</li> <li>Status</li> </ul>"},{"location":"manual/inventario/gestao.html#equipamentos","title":"Equipamentos","text":"<ul> <li>C\u00f3digo</li> <li>Tipo</li> <li>Designador (identificador \u00fanico)</li> <li>Status</li> </ul>"},{"location":"manual/inventario/gestao.html#servicos","title":"Servi\u00e7os","text":"<ul> <li>C\u00f3digo</li> <li>Tipo</li> <li>Designador</li> <li>Status</li> </ul>"},{"location":"manual/inventario/gestao.html#dicas-de-uso","title":"Dicas de Uso","text":"<ol> <li>Busca R\u00e1pida: Use os filtros para encontrar registros espec\u00edficos</li> <li>Edi\u00e7\u00e3o em Massa: Voc\u00ea pode editar v\u00e1rios campos de um registro ao mesmo tempo</li> <li>Organiza\u00e7\u00e3o: Use as abas para navegar entre diferentes tipos de ativos</li> <li>Status: Mantenha o controle de ativos ativos e inativos usando os filtros</li> </ol>"}]}